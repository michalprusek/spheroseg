{
  "statistics": {
    "detectionDate": "2025-06-28T23:33:51.335Z",
    "formats": {
      "typescript": {
        "sources": {
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/utils/sliceValidator.ts": {
            "lines": 76,
            "tokens": 535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/utils/polygonSplitter.ts": {
            "lines": 76,
            "tokens": 586,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/utils/intersectionUtils.ts": {
            "lines": 88,
            "tokens": 1058,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 116,
            "percentage": 7.95,
            "percentageTokens": 10.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/utils/SpatialGrid.ts": {
            "lines": 59,
            "tokens": 646,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/useGeometryUtils.ts": {
            "lines": 141,
            "tokens": 1496,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/actions/usePathModification.ts": {
            "lines": 98,
            "tokens": 974,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/visualizationUtils.ts": {
            "lines": 73,
            "tokens": 427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/segmentation/useSegmentationV2.ts": {
            "lines": 851,
            "tokens": 5731,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 35,
            "duplicatedTokens": 351,
            "percentage": 4.11,
            "percentageTokens": 6.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/segmentation/useSegmentationCache.ts": {
            "lines": 122,
            "tokens": 912,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/segmentation/types.ts": {
            "lines": 78,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/segmentation/index.ts": {
            "lines": 22,
            "tokens": 140,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/segmentation/geometry.worker.ts": {
            "lines": 155,
            "tokens": 1283,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/segmentation/geometry.ts": {
            "lines": 49,
            "tokens": 314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/segmentation/coordinates.ts": {
            "lines": 61,
            "tokens": 587,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/segmentation/constants.ts": {
            "lines": 14,
            "tokens": 86,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/segmentation/api.ts": {
            "lines": 607,
            "tokens": 5531,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 602,
            "percentage": 6.26,
            "percentageTokens": 10.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/useCoordinateTransform.ts": {
            "lines": 41,
            "tokens": 302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/coordinateUtils.ts": {
            "lines": 30,
            "tokens": 369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/__tests__/utils/testUtils.ts": {
            "lines": 200,
            "tokens": 1553,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 200,
            "percentage": 10.5,
            "percentageTokens": 12.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/workers/polygonWorker.ts": {
            "lines": 75,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/slicePolygon.ts": {
            "lines": 13,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/polygonVisibility.ts": {
            "lines": 74,
            "tokens": 562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/polygonSlicing.ts": {
            "lines": 30,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/metricCalculations.ts": {
            "lines": 370,
            "tokens": 3899,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/imageLoader.ts": {
            "lines": 196,
            "tokens": 1554,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 60,
            "duplicatedTokens": 446,
            "percentage": 30.61,
            "percentageTokens": 28.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/geometry.ts": {
            "lines": 64,
            "tokens": 943,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 193,
            "percentage": 14.06,
            "percentageTokens": 20.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/fileSystemAccess.ts": {
            "lines": 116,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/fetchAllSegmentations.ts": {
            "lines": 32,
            "tokens": 283,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/directImageLoader.ts": {
            "lines": 137,
            "tokens": 1089,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/databaseImageLoader.ts": {
            "lines": 150,
            "tokens": 1175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/utils/cocoConverter.ts": {
            "lines": 69,
            "tokens": 701,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/useSlicing.ts": {
            "lines": 115,
            "tokens": 836,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/useSegmentationKeyboard.ts": {
            "lines": 130,
            "tokens": 936,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 82,
            "percentage": 8.46,
            "percentageTokens": 8.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/useSegmentationHistory.ts": {
            "lines": 52,
            "tokens": 454,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/useSegmentationEditor.ts": {
            "lines": 117,
            "tokens": 1038,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/usePolygonWorker.ts": {
            "lines": 197,
            "tokens": 1472,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/usePolygonWasm.ts": {
            "lines": 53,
            "tokens": 428,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/useOptimizedSegmentation.ts": {
            "lines": 607,
            "tokens": 4282,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 24,
            "duplicatedTokens": 269,
            "percentage": 3.95,
            "percentageTokens": 6.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts": {
            "lines": 365,
            "tokens": 2827,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 200,
            "percentage": 5.75,
            "percentageTokens": 7.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/__tests__/mockApiClient.ts": {
            "lines": 8,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/utils/geometry/slicingUtils.ts": {
            "lines": 17,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/utils/geometry/index.ts": {
            "lines": 6,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/utils/geometry/geometryUtils.ts": {
            "lines": 41,
            "tokens": 117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/shared/utils/polygonWorkerUtils.ts": {
            "lines": 27,
            "tokens": 76,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/shared/utils/polygonSlicingUtils.ts": {
            "lines": 27,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/shared/utils/index.ts": {
            "lines": 67,
            "tokens": 266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/types.ts": {
            "lines": 101,
            "tokens": 1037,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/segmentation/types.ts": {
            "lines": 24,
            "tokens": 112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/segmentation/polygonValidator.ts": {
            "lines": 164,
            "tokens": 1443,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/segmentation/maskToPolygons.ts": {
            "lines": 272,
            "tokens": 2535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/segmentation/index.ts": {
            "lines": 4,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/segmentation/dynamicSimplification.ts": {
            "lines": 202,
            "tokens": 1420,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/monitoring/usePerformanceMonitoring.ts": {
            "lines": 92,
            "tokens": 709,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/monitoring/performanceMonitoring.ts": {
            "lines": 304,
            "tokens": 2178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/monitoring/index.ts": {
            "lines": 11,
            "tokens": 126,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/__mocks__/apiClient.ts": {
            "lines": 82,
            "tokens": 718,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 50,
            "duplicatedTokens": 512,
            "percentage": 60.98,
            "percentageTokens": 71.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/charts/index.ts": {
            "lines": 6,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/a11y/index.ts": {
            "lines": 3,
            "tokens": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/__tests__/visual-regression/setupVisualRegression.ts": {
            "lines": 100,
            "tokens": 777,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 276,
            "percentage": 40,
            "percentageTokens": 35.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/__tests__/visual-regression/segmentation.visual.spec.ts": {
            "lines": 202,
            "tokens": 1686,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 184,
            "percentage": 9.9,
            "percentageTokens": 10.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/__tests__/performance/performanceTestingFramework.ts": {
            "lines": 304,
            "tokens": 2416,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/__tests__/performance/performanceTest.ts": {
            "lines": 196,
            "tokens": 1572,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/__tests__/fixtures/polygonFixtures.ts": {
            "lines": 125,
            "tokens": 1107,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 184,
            "percentage": 16,
            "percentageTokens": 16.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/security/middleware/security.ts": {
            "lines": 366,
            "tokens": 2288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/security/middleware/rateLimitMiddleware.ts": {
            "lines": 198,
            "tokens": 1847,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 64,
            "duplicatedTokens": 668,
            "percentage": 32.32,
            "percentageTokens": 36.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/security/middleware/auth.ts": {
            "lines": 522,
            "tokens": 3500,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 384,
            "percentage": 10.34,
            "percentageTokens": 10.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/v1/index.ts": {
            "lines": 54,
            "tokens": 410,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/lib/monitoring/performanceMonitoring.ts": {
            "lines": 26,
            "tokens": 158,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/lib/monitoring/index.ts": {
            "lines": 19,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/lib/metrics/prometheusClient.ts": {
            "lines": 191,
            "tokens": 1368,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/db/monitoring/setupMonitoring.ts": {
            "lines": 47,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/db/monitoring/prometheusIntegration.ts": {
            "lines": 31,
            "tokens": 114,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/db/monitoring/index.ts": {
            "lines": 67,
            "tokens": 434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/db/monitoring/exportPatterns.ts": {
            "lines": 270,
            "tokens": 1663,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/utils/polygonUtils.ts": {
            "lines": 11,
            "tokens": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/utils/index.ts": {
            "lines": 9,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/monitoring/performanceMonitoring.ts": {
            "lines": 134,
            "tokens": 770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/monitoring/metricsTypes.ts": {
            "lines": 181,
            "tokens": 891,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/translationUtils.ts": {
            "lines": 346,
            "tokens": 2681,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/translationLoader.ts": {
            "lines": 70,
            "tokens": 595,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/toastUtils.ts": {
            "lines": 76,
            "tokens": 408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/tiffPreview.ts": {
            "lines": 81,
            "tokens": 662,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/polygonUtils.ts": {
            "lines": 12,
            "tokens": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/performance.ts": {
            "lines": 251,
            "tokens": 2144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/pathUtils.ts": {
            "lines": 34,
            "tokens": 104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/metricsService.ts": {
            "lines": 251,
            "tokens": 2106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/logger.ts": {
            "lines": 270,
            "tokens": 1771,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 48,
            "duplicatedTokens": 412,
            "percentage": 17.78,
            "percentageTokens": 23.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/localStorageTest.ts": {
            "lines": 52,
            "tokens": 474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/indexedDBService.ts": {
            "lines": 331,
            "tokens": 2664,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/imageUtils.ts": {
            "lines": 102,
            "tokens": 807,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 213,
            "percentage": 29.41,
            "percentageTokens": 26.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/imageLoader.ts": {
            "lines": 440,
            "tokens": 3154,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 105,
            "percentage": 2.73,
            "percentageTokens": 3.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/getAssetUrl.ts": {
            "lines": 60,
            "tokens": 394,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/errorUtils.ts": {
            "lines": 86,
            "tokens": 575,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/errorHandling.ts": {
            "lines": 378,
            "tokens": 2948,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/enhancedErrorHandling.ts": {
            "lines": 268,
            "tokens": 2141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/dateUtils.ts": {
            "lines": 161,
            "tokens": 1053,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/authInterceptor.ts": {
            "lines": 282,
            "tokens": 2066,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/utils/accessibility.ts": {
            "lines": 276,
            "tokens": 1928,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/types/userProfile.ts": {
            "lines": 15,
            "tokens": 118,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 104,
            "percentage": 66.67,
            "percentageTokens": 88.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/types/index.ts": {
            "lines": 160,
            "tokens": 834,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/translations/zh.ts": {
            "lines": 150,
            "tokens": 986,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/translations/cs.ts": {
            "lines": 150,
            "tokens": 986,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/test-setup-helper.ts": {
            "lines": 202,
            "tokens": 1498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/polygonActionTestUtils.ts": {
            "lines": 53,
            "tokens": 383,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/apiClientMock.ts": {
            "lines": 267,
            "tokens": 1952,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 96,
            "percentage": 3.75,
            "percentageTokens": 4.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/services/userProfileService.ts": {
            "lines": 365,
            "tokens": 2943,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 101,
            "percentage": 3.84,
            "percentageTokens": 3.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/services/socketClient.ts": {
            "lines": 152,
            "tokens": 908,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/services/exportService.ts": {
            "lines": 600,
            "tokens": 4970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/services/authService.ts": {
            "lines": 572,
            "tokens": 4115,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 78,
            "duplicatedTokens": 762,
            "percentage": 13.64,
            "percentageTokens": 18.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/services/authApiService.ts": {
            "lines": 41,
            "tokens": 305,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/utils.ts": {
            "lines": 5,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/urlUtils.ts": {
            "lines": 169,
            "tokens": 1232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/svgUtils.ts": {
            "lines": 220,
            "tokens": 2025,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 193,
            "percentage": 4.09,
            "percentageTokens": 9.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/segmentation.ts": {
            "lines": 186,
            "tokens": 1796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/logger.ts": {
            "lines": 7,
            "tokens": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/imageProxy.ts": {
            "lines": 48,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/apiPaths.ts": {
            "lines": 83,
            "tokens": 661,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/lib/apiClient.ts": {
            "lines": 320,
            "tokens": 2508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useUserStatistics.ts": {
            "lines": 39,
            "tokens": 313,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useUndoRedo.ts": {
            "lines": 122,
            "tokens": 1106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useTranslations.ts": {
            "lines": 106,
            "tokens": 862,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useSocketConnection.ts": {
            "lines": 177,
            "tokens": 1385,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useSegmentationUpdates.ts": {
            "lines": 329,
            "tokens": 2439,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 100,
            "duplicatedTokens": 818,
            "percentage": 30.4,
            "percentageTokens": 33.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useRecentActivity.ts": {
            "lines": 297,
            "tokens": 1936,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 69,
            "duplicatedTokens": 519,
            "percentage": 23.23,
            "percentageTokens": 26.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useProjectDuplicate.ts": {
            "lines": 287,
            "tokens": 1541,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 104,
            "percentage": 4.88,
            "percentageTokens": 6.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useProjectDelete.ts": {
            "lines": 40,
            "tokens": 427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/usePerformanceTracking.ts": {
            "lines": 87,
            "tokens": 574,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/usePerformance.ts": {
            "lines": 155,
            "tokens": 1087,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useOnClickOutside.ts": {
            "lines": 23,
            "tokens": 250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useImageResegment.ts": {
            "lines": 347,
            "tokens": 2235,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 39,
            "duplicatedTokens": 291,
            "percentage": 11.24,
            "percentageTokens": 13.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useImageLoader.ts": {
            "lines": 209,
            "tokens": 1749,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useImageDelete.ts": {
            "lines": 296,
            "tokens": 2028,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 38,
            "duplicatedTokens": 290,
            "percentage": 12.84,
            "percentageTokens": 14.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useErrorHandler.ts": {
            "lines": 63,
            "tokens": 451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useEmailValidation.ts": {
            "lines": 137,
            "tokens": 999,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useDuplicationProgress.ts": {
            "lines": 373,
            "tokens": 2260,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useDashboardProjects.ts": {
            "lines": 231,
            "tokens": 2006,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/use-toast.ts": {
            "lines": 18,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/index.ts": {
            "lines": 21,
            "tokens": 122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/api/segmentationQueue.ts": {
            "lines": 217,
            "tokens": 1441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/api/projectImages.ts": {
            "lines": 507,
            "tokens": 4766,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/api/imageUpload.ts": {
            "lines": 367,
            "tokens": 2828,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/workers/projectDuplicationWorker.ts": {
            "lines": 511,
            "tokens": 3739,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 50,
            "duplicatedTokens": 469,
            "percentage": 9.78,
            "percentageTokens": 12.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/validators/userValidators.ts": {
            "lines": 55,
            "tokens": 497,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/validators/segmentationValidators.ts": {
            "lines": 51,
            "tokens": 481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/validators/projectValidators.ts": {
            "lines": 108,
            "tokens": 782,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/validators/imageValidators.ts": {
            "lines": 50,
            "tokens": 397,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/validators/commonValidators.ts": {
            "lines": 24,
            "tokens": 340,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/validators/authValidators.ts": {
            "lines": 87,
            "tokens": 790,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/validators/accessRequestValidators.ts": {
            "lines": 12,
            "tokens": 163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/performance.ts": {
            "lines": 160,
            "tokens": 1214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/pathUtils.ts": {
            "lines": 60,
            "tokens": 276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/logger.ts": {
            "lines": 60,
            "tokens": 475,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/imageUtils.unified.ts": {
            "lines": 743,
            "tokens": 6355,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/imageUtils.ts": {
            "lines": 82,
            "tokens": 492,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/healthCheck.ts": {
            "lines": 187,
            "tokens": 1423,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/fileUtils.ts": {
            "lines": 126,
            "tokens": 1051,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/errors.ts": {
            "lines": 69,
            "tokens": 503,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/envValidation.ts": {
            "lines": 102,
            "tokens": 1216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/apiResponse.ts": {
            "lines": 217,
            "tokens": 1413,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/utils/ApiError.ts": {
            "lines": 185,
            "tokens": 1052,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/types/sharedTypes.ts": {
            "lines": 5,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/types/geometry.ts": {
            "lines": 5,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/test-utils/mockDatabase.ts": {
            "lines": 716,
            "tokens": 6190,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 138,
            "duplicatedTokens": 1310,
            "percentage": 19.27,
            "percentageTokens": 21.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/test-utils/mockAuth.ts": {
            "lines": 654,
            "tokens": 5140,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 88,
            "duplicatedTokens": 828,
            "percentage": 13.46,
            "percentageTokens": 16.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/test-utils/index.ts": {
            "lines": 130,
            "tokens": 844,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/userStatsService.ts": {
            "lines": 331,
            "tokens": 2144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/userProfileService.ts": {
            "lines": 533,
            "tokens": 3713,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 101,
            "percentage": 2.63,
            "percentageTokens": 2.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/tutorialProjectService.ts": {
            "lines": 190,
            "tokens": 1424,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/tokenService.ts": {
            "lines": 633,
            "tokens": 4493,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/taskQueueService.ts": {
            "lines": 626,
            "tokens": 3875,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/socketService.ts": {
            "lines": 204,
            "tokens": 1286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/segmentationService.ts": {
            "lines": 52,
            "tokens": 277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/segmentationQueueService.ts": {
            "lines": 725,
            "tokens": 4499,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/segmentationQueue.ts": {
            "lines": 128,
            "tokens": 907,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/securityService.ts": {
            "lines": 205,
            "tokens": 1232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/scheduledTaskService.ts": {
            "lines": 266,
            "tokens": 1880,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/prometheusMetricsService.ts": {
            "lines": 247,
            "tokens": 1900,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/projectShareService.ts": {
            "lines": 405,
            "tokens": 2519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/projectService.ts": {
            "lines": 583,
            "tokens": 3553,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/projectDuplicationService.ts": {
            "lines": 465,
            "tokens": 3166,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 50,
            "duplicatedTokens": 469,
            "percentage": 10.75,
            "percentageTokens": 14.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/projectDuplicationQueueService.ts": {
            "lines": 715,
            "tokens": 4463,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/mlMetricsAdapter.ts": {
            "lines": 264,
            "tokens": 2024,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/metricsService.ts": {
            "lines": 283,
            "tokens": 2480,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 116,
            "percentage": 2.47,
            "percentageTokens": 4.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/imageProcessingService.ts": {
            "lines": 259,
            "tokens": 2143,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 192,
            "percentage": 12.36,
            "percentageTokens": 8.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/imageDeleteService.ts": {
            "lines": 277,
            "tokens": 1832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/fileCleanupService.ts": {
            "lines": 426,
            "tokens": 3226,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 216,
            "percentage": 5.63,
            "percentageTokens": 6.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/emailService.ts": {
            "lines": 391,
            "tokens": 1540,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/services/authService.ts": {
            "lines": 771,
            "tokens": 6033,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 298,
            "duplicatedTokens": 2216,
            "percentage": 38.65,
            "percentageTokens": 36.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/security/index.ts": {
            "lines": 24,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/users.ts": {
            "lines": 493,
            "tokens": 3685,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 156,
            "duplicatedTokens": 1424,
            "percentage": 31.64,
            "percentageTokens": 38.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/userStats.ts": {
            "lines": 134,
            "tokens": 1388,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 114,
            "duplicatedTokens": 1202,
            "percentage": 85.07,
            "percentageTokens": 86.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/userProfile.ts": {
            "lines": 35,
            "tokens": 283,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/test.ts": {
            "lines": 18,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/status.ts": {
            "lines": 247,
            "tokens": 1821,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 214,
            "percentage": 9.72,
            "percentageTokens": 11.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/segmentation.ts": {
            "lines": 816,
            "tokens": 5961,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 168,
            "duplicatedTokens": 1184,
            "percentage": 20.59,
            "percentageTokens": 19.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/securityReportRoutes.ts": {
            "lines": 82,
            "tokens": 505,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/projects.ts": {
            "lines": 607,
            "tokens": 4025,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 213,
            "duplicatedTokens": 1531,
            "percentage": 35.09,
            "percentageTokens": 38.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/projectShares.ts": {
            "lines": 60,
            "tokens": 225,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/projectDuplicationRoutes.ts": {
            "lines": 371,
            "tokens": 2550,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 131,
            "duplicatedTokens": 971,
            "percentage": 35.31,
            "percentageTokens": 38.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/preview.ts": {
            "lines": 111,
            "tokens": 826,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/performance.ts": {
            "lines": 106,
            "tokens": 744,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 88,
            "percentage": 7.55,
            "percentageTokens": 11.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/metricsRoutes.ts": {
            "lines": 83,
            "tokens": 617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/logs.ts": {
            "lines": 460,
            "tokens": 3988,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 106,
            "duplicatedTokens": 1164,
            "percentage": 23.04,
            "percentageTokens": 29.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/index.ts": {
            "lines": 63,
            "tokens": 423,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/health.ts": {
            "lines": 65,
            "tokens": 540,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/dbMetrics.ts": {
            "lines": 178,
            "tokens": 1238,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/auth.ts": {
            "lines": 237,
            "tokens": 2599,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 156,
            "percentage": 4.22,
            "percentageTokens": 6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/api.ts": {
            "lines": 75,
            "tokens": 548,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/accessRequests.ts": {
            "lines": 91,
            "tokens": 686,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/monitoring/index.ts": {
            "lines": 21,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/validationMiddleware.ts": {
            "lines": 54,
            "tokens": 511,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/swaggerMiddleware.ts": {
            "lines": 73,
            "tokens": 351,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/requestLogger.ts": {
            "lines": 143,
            "tokens": 1129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/performanceMonitoringMiddleware.ts": {
            "lines": 37,
            "tokens": 294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/performanceMiddleware.ts": {
            "lines": 159,
            "tokens": 1219,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 163,
            "percentage": 8.81,
            "percentageTokens": 13.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/performance.ts": {
            "lines": 405,
            "tokens": 2854,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 250,
            "percentage": 5.43,
            "percentageTokens": 8.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/metricsMiddleware.ts": {
            "lines": 144,
            "tokens": 1066,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 87,
            "percentage": 5.56,
            "percentageTokens": 8.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/index.ts": {
            "lines": 171,
            "tokens": 1245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/errorHandler.ts": {
            "lines": 130,
            "tokens": 1135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/devAuthMiddleware.ts": {
            "lines": 38,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/dbMonitoringMiddleware.ts": {
            "lines": 369,
            "tokens": 647,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/bodyParser.ts": {
            "lines": 24,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/db/optimizedQueries.ts": {
            "lines": 464,
            "tokens": 2205,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 90,
            "percentage": 2.16,
            "percentageTokens": 4.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/db/optimized.ts": {
            "lines": 456,
            "tokens": 3520,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 90,
            "percentage": 2.19,
            "percentageTokens": 2.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/db/initDb.ts": {
            "lines": 49,
            "tokens": 318,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/controllers/userProfileController.ts": {
            "lines": 333,
            "tokens": 3016,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 96,
            "duplicatedTokens": 1088,
            "percentage": 28.83,
            "percentageTokens": 36.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/controllers/segmentationController.ts": {
            "lines": 185,
            "tokens": 1439,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 348,
            "percentage": 19.46,
            "percentageTokens": 24.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/controllers/securityController.ts": {
            "lines": 108,
            "tokens": 843,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/controllers/projectShareController.ts": {
            "lines": 244,
            "tokens": 1862,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/config/index.ts": {
            "lines": 141,
            "tokens": 1359,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/user.ts": {
            "lines": 52,
            "tokens": 362,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 55,
            "duplicatedTokens": 459,
            "percentage": 105.77,
            "percentageTokens": 126.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/user.d.ts": {
            "lines": 45,
            "tokens": 355,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 45,
            "duplicatedTokens": 355,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/segmentation.ts": {
            "lines": 66,
            "tokens": 509,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 47,
            "duplicatedTokens": 411,
            "percentage": 71.21,
            "percentageTokens": 80.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/segmentation.d.ts": {
            "lines": 58,
            "tokens": 502,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 47,
            "duplicatedTokens": 411,
            "percentage": 81.03,
            "percentageTokens": 81.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/project.ts": {
            "lines": 32,
            "tokens": 203,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 29,
            "duplicatedTokens": 200,
            "percentage": 90.63,
            "percentageTokens": 98.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/project.d.ts": {
            "lines": 29,
            "tokens": 200,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 29,
            "duplicatedTokens": 200,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/polygon.ts": {
            "lines": 68,
            "tokens": 432,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 43,
            "duplicatedTokens": 304,
            "percentage": 63.24,
            "percentageTokens": 70.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/polygon.d.ts": {
            "lines": 59,
            "tokens": 424,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 43,
            "duplicatedTokens": 304,
            "percentage": 72.88,
            "percentageTokens": 71.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/index.ts": {
            "lines": 4,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/index.d.ts": {
            "lines": 4,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/image.ts": {
            "lines": 61,
            "tokens": 453,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 56,
            "duplicatedTokens": 438,
            "percentage": 91.8,
            "percentageTokens": 96.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/image.d.ts": {
            "lines": 57,
            "tokens": 445,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 56,
            "duplicatedTokens": 438,
            "percentage": 98.25,
            "percentageTokens": 98.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/index.ts": {
            "lines": 7,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-setup.ts": {
            "lines": 30,
            "tokens": 254,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/setupTests.ts": {
            "lines": 42,
            "tokens": 218,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/i18n.ts": {
            "lines": 31,
            "tokens": 273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/config.ts": {
            "lines": 40,
            "tokens": 314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/socket.ts": {
            "lines": 40,
            "tokens": 242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/server.ts": {
            "lines": 174,
            "tokens": 1267,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/app.ts": {
            "lines": 63,
            "tokens": 447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/vitest.config.ts": {
            "lines": 20,
            "tokens": 179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/vite.config.ts": {
            "lines": 136,
            "tokens": 1174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 44954,
          "tokens": 331895,
          "sources": 252,
          "clones": 95,
          "duplicatedLines": 1611,
          "duplicatedTokens": 14081,
          "percentage": 3.58,
          "percentageTokens": 4.24,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/editMode/pointAddingMode/useOptimalPath.tsx": {
            "lines": 95,
            "tokens": 843,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx": {
            "lines": 125,
            "tokens": 1304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/useSegmentFinder.tsx": {
            "lines": 97,
            "tokens": 788,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/usePolygonSplitter.tsx": {
            "lines": 185,
            "tokens": 1474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/usePolygonSimplifier.tsx": {
            "lines": 58,
            "tokens": 417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/usePointOperations.tsx": {
            "lines": 107,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/usePointEditor.tsx": {
            "lines": 32,
            "tokens": 198,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/editMode/useTempPoints.tsx": {
            "lines": 93,
            "tokens": 806,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 106,
            "percentage": 13.98,
            "percentageTokens": 13.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/editMode/useSlicingMode.tsx": {
            "lines": 130,
            "tokens": 1113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/editMode/useEditModeSwitcher.tsx": {
            "lines": 74,
            "tokens": 635,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/editMode/useEditModeClickHandlers.tsx": {
            "lines": 66,
            "tokens": 546,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/editMode/useAutoPointAdding.tsx": {
            "lines": 74,
            "tokens": 604,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/actions/usePolygonSimplifyAction.tsx": {
            "lines": 44,
            "tokens": 327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/actions/usePolygonEditModeActions.tsx": {
            "lines": 36,
            "tokens": 206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/toolbar/__tests__/toolbarTestUtils.tsx": {
            "lines": 93,
            "tokens": 711,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/statusbar/__tests__/statusBarTestUtils.tsx": {
            "lines": 80,
            "tokens": 725,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/export/MetricsVisualization.tsx": {
            "lines": 195,
            "tokens": 1919,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/export/MetricsDisplay.tsx": {
            "lines": 132,
            "tokens": 1490,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/export/ExcelExporter.tsx": {
            "lines": 112,
            "tokens": 1058,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/export/CocoTab.tsx": {
            "lines": 57,
            "tokens": 604,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/index.tsx": {
            "lines": 82,
            "tokens": 498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/TempPointsPath.tsx": {
            "lines": 76,
            "tokens": 570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/StartPointIndicator.tsx": {
            "lines": 59,
            "tokens": 434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/PotentialEndpointIndicator.tsx": {
            "lines": 76,
            "tokens": 567,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/HoveredVertexIndicator.tsx": {
            "lines": 52,
            "tokens": 377,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/HighlightedSegment.tsx": {
            "lines": 67,
            "tokens": 649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/CursorLineConnector.tsx": {
            "lines": 64,
            "tokens": 494,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/view/useOffsetConstraints.tsx": {
            "lines": 90,
            "tokens": 636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/view/useImageCentering.tsx": {
            "lines": 98,
            "tokens": 1001,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/useVertexHover.tsx": {
            "lines": 71,
            "tokens": 657,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/useVertexDrag.tsx": {
            "lines": 152,
            "tokens": 1294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/useVertexDetection.tsx": {
            "lines": 51,
            "tokens": 491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/usePolygonState.tsx": {
            "lines": 38,
            "tokens": 269,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/usePolygonSelection.tsx": {
            "lines": 36,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/usePolygonEditMode.tsx": {
            "lines": 102,
            "tokens": 736,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/usePolygonDetection.tsx": {
            "lines": 26,
            "tokens": 303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/usePolygonActions.tsx": {
            "lines": 110,
            "tokens": 901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/useCoordinateTransform.tsx": {
            "lines": 39,
            "tokens": 279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/useCanvasDrag.tsx": {
            "lines": 63,
            "tokens": 463,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/toolbar/ToolbarV2.tsx": {
            "lines": 217,
            "tokens": 1670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/statusbar/StatusBarV2.tsx": {
            "lines": 105,
            "tokens": 891,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/ProjectImageExport.tsx": {
            "lines": 77,
            "tokens": 773,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/layout/EditorLayout.tsx": {
            "lines": 25,
            "tokens": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/layout/EditorContent.tsx": {
            "lines": 13,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/keyboard/KeyboardShortcutsHelp.tsx": {
            "lines": 94,
            "tokens": 908,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/keyboard/KeyboardEventHandler.tsx": {
            "lines": 63,
            "tokens": 570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/editor/EditorContainer.tsx": {
            "lines": 402,
            "tokens": 3259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/editor/DebugOverlay.tsx": {
            "lines": 211,
            "tokens": 1703,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/context-menu/VertexContextMenu.tsx": {
            "lines": 40,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/context-menu/PolygonContextMenu.tsx": {
            "lines": 97,
            "tokens": 743,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/TemporaryEditPath.tsx": {
            "lines": 144,
            "tokens": 1375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/SlicingModeVisualizer.tsx": {
            "lines": 81,
            "tokens": 482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/PolygonCollection.tsx": {
            "lines": 111,
            "tokens": 767,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 121,
            "percentage": 6.31,
            "percentageTokens": 15.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/PointAddingVisualizer.tsx": {
            "lines": 249,
            "tokens": 1778,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/FallbackImage.tsx": {
            "lines": 346,
            "tokens": 2901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/EditorModeVisualizations.tsx": {
            "lines": 71,
            "tokens": 467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/EditorModeFooter.tsx": {
            "lines": 33,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/EditModeBorder.tsx": {
            "lines": 37,
            "tokens": 289,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasZoomInfo.tsx": {
            "lines": 14,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasVertexLayer.tsx": {
            "lines": 199,
            "tokens": 1687,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 96,
            "percentage": 7.04,
            "percentageTokens": 5.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasVertex.tsx": {
            "lines": 105,
            "tokens": 749,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx": {
            "lines": 429,
            "tokens": 4043,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 106,
            "percentage": 3.03,
            "percentageTokens": 2.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasUIElements.tsx": {
            "lines": 53,
            "tokens": 346,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasTemporaryGeometryLayer.tsx": {
            "lines": 218,
            "tokens": 1749,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 170,
            "percentage": 9.17,
            "percentageTokens": 9.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasSvgFilters.tsx": {
            "lines": 7,
            "tokens": 54,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasPolygonLayer.tsx": {
            "lines": 108,
            "tokens": 897,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 74,
            "percentage": 5.56,
            "percentageTokens": 8.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasPolygon.tsx": {
            "lines": 189,
            "tokens": 1497,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 121,
            "percentage": 3.7,
            "percentageTokens": 8.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasLoadingOverlay.tsx": {
            "lines": 30,
            "tokens": 248,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasImageLayer.tsx": {
            "lines": 125,
            "tokens": 994,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasImage.tsx": {
            "lines": 31,
            "tokens": 202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasContent.tsx": {
            "lines": 33,
            "tokens": 174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasContainer.tsx": {
            "lines": 35,
            "tokens": 256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/__tests__/polygon/SegmentationEditorV2PolygonTests.tsx": {
            "lines": 648,
            "tokens": 4636,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 101,
            "duplicatedTokens": 720,
            "percentage": 15.59,
            "percentageTokens": 15.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/__tests__/keyboard/SegmentationEditorV2KeyboardTests.tsx": {
            "lines": 316,
            "tokens": 2428,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 101,
            "duplicatedTokens": 720,
            "percentage": 31.96,
            "percentageTokens": 29.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/useSegmentationView.tsx": {
            "lines": 71,
            "tokens": 518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/useSegmentationHistory.tsx": {
            "lines": 265,
            "tokens": 2142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/useSegmentationCore.tsx": {
            "lines": 463,
            "tokens": 4049,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/usePolygonInteraction.tsx": {
            "lines": 139,
            "tokens": 876,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/hooks/useAutoSave.tsx": {
            "lines": 121,
            "tokens": 887,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/contexts/SegmentationContext.tsx": {
            "lines": 23,
            "tokens": 207,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/StatusBar.tsx": {
            "lines": 134,
            "tokens": 1140,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/RegionPanel.tsx": {
            "lines": 94,
            "tokens": 883,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/EditorToolbarButton.tsx": {
            "lines": 54,
            "tokens": 379,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/EditorToolbar.tsx": {
            "lines": 132,
            "tokens": 965,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/EditorHelpTips.tsx": {
            "lines": 86,
            "tokens": 744,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/EditorHeader.tsx": {
            "lines": 210,
            "tokens": 1670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/export/components/ImageSelectionCard.tsx": {
            "lines": 92,
            "tokens": 890,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/export/components/ExportOptionsCard.tsx": {
            "lines": 177,
            "tokens": 1607,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/SegmentationPage.tsx": {
            "lines": 314,
            "tokens": 2545,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 72,
            "percentage": 4.14,
            "percentageTokens": 2.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/SegmentationEditorV2.tsx": {
            "lines": 219,
            "tokens": 1562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/SegmentationEditorRedirect.tsx": {
            "lines": 36,
            "tokens": 327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/SegmentationEditor.tsx": {
            "lines": 11,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/export/ProjectExport.tsx": {
            "lines": 109,
            "tokens": 802,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/upload/UploaderOptions.tsx": {
            "lines": 74,
            "tokens": 584,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/upload/UploadComponent.tsx": {
            "lines": 46,
            "tokens": 399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/upload/FileList.tsx": {
            "lines": 92,
            "tokens": 964,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/upload/DropZone.tsx": {
            "lines": 56,
            "tokens": 498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/tooltip.tsx": {
            "lines": 27,
            "tokens": 208,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/toggle.tsx": {
            "lines": 36,
            "tokens": 304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/toggle-group.tsx": {
            "lines": 48,
            "tokens": 438,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/textarea.tsx": {
            "lines": 20,
            "tokens": 143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/tabs.tsx": {
            "lines": 52,
            "tokens": 375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/table.tsx": {
            "lines": 71,
            "tokens": 765,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/switch.tsx": {
            "lines": 26,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/slider.tsx": {
            "lines": 22,
            "tokens": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/skeleton.tsx": {
            "lines": 6,
            "tokens": 74,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/sheet.tsx": {
            "lines": 106,
            "tokens": 891,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/separator.tsx": {
            "lines": 19,
            "tokens": 186,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/select.tsx": {
            "lines": 142,
            "tokens": 1061,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/radio-group.tsx": {
            "lines": 35,
            "tokens": 310,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/progress.tsx": {
            "lines": 22,
            "tokens": 197,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/label.tsx": {
            "lines": 18,
            "tokens": 193,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/input.tsx": {
            "lines": 21,
            "tokens": 142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/image-cropper.tsx": {
            "lines": 190,
            "tokens": 1633,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/form.tsx": {
            "lines": 128,
            "tokens": 1248,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/dropdown-menu.tsx": {
            "lines": 178,
            "tokens": 1303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/dialog.tsx": {
            "lines": 94,
            "tokens": 751,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/context-menu.tsx": {
            "lines": 177,
            "tokens": 1290,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/container.tsx": {
            "lines": 11,
            "tokens": 116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/collapsible.tsx": {
            "lines": 8,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/checkbox.tsx": {
            "lines": 25,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/chart.tsx": {
            "lines": 302,
            "tokens": 2465,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/card.tsx": {
            "lines": 42,
            "tokens": 561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/button.tsx": {
            "lines": 49,
            "tokens": 393,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/breadcrumb.tsx": {
            "lines": 103,
            "tokens": 840,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/badge.tsx": {
            "lines": 28,
            "tokens": 228,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/avatar.tsx": {
            "lines": 37,
            "tokens": 351,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/alert.tsx": {
            "lines": 42,
            "tokens": 417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/alert-dialog.tsx": {
            "lines": 103,
            "tokens": 899,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/UserProfileSection.tsx": {
            "lines": 273,
            "tokens": 2583,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/DeleteAccountDialog.tsx": {
            "lines": 176,
            "tokens": 1413,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/AvatarUploader.tsx": {
            "lines": 281,
            "tokens": 2172,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/AppearanceSection.tsx": {
            "lines": 110,
            "tokens": 1074,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/AccountSection.tsx": {
            "lines": 194,
            "tokens": 1735,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ShareDialog.tsx": {
            "lines": 490,
            "tokens": 4410,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 136,
            "duplicatedTokens": 1190,
            "percentage": 27.76,
            "percentageTokens": 26.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/SegmentationThumbnail.tsx": {
            "lines": 488,
            "tokens": 4349,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 198,
            "percentage": 4.71,
            "percentageTokens": 4.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/SegmentationProgress.tsx": {
            "lines": 826,
            "tokens": 7138,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 410,
            "percentage": 5.33,
            "percentageTokens": 5.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectViewOptions.tsx": {
            "lines": 29,
            "tokens": 270,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectUploaderSection.tsx": {
            "lines": 47,
            "tokens": 347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectToolbar.tsx": {
            "lines": 261,
            "tokens": 2288,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 130,
            "duplicatedTokens": 818,
            "percentage": 49.81,
            "percentageTokens": 35.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectThumbnail.tsx": {
            "lines": 63,
            "tokens": 487,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 198,
            "percentage": 36.51,
            "percentageTokens": 40.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectMetadata.tsx": {
            "lines": 23,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectImages.tsx": {
            "lines": 222,
            "tokens": 1958,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 40,
            "duplicatedTokens": 406,
            "percentage": 18.02,
            "percentageTokens": 20.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectImageProcessor.tsx": {
            "lines": 156,
            "tokens": 1423,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 21,
            "duplicatedTokens": 243,
            "percentage": 13.46,
            "percentageTokens": 17.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectImageActions.tsx": {
            "lines": 693,
            "tokens": 5771,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 536,
            "percentage": 9.24,
            "percentageTokens": 9.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectHeader.tsx": {
            "lines": 45,
            "tokens": 402,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectDuplicationDialog.tsx": {
            "lines": 119,
            "tokens": 966,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectDialogForm.tsx": {
            "lines": 73,
            "tokens": 650,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 103,
            "percentage": 15.07,
            "percentageTokens": 15.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectCard.tsx": {
            "lines": 153,
            "tokens": 1433,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectActions.tsx": {
            "lines": 195,
            "tokens": 1144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/NewProjectCardUI.tsx": {
            "lines": 32,
            "tokens": 270,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ImageListActions.tsx": {
            "lines": 42,
            "tokens": 287,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 157,
            "percentage": 66.67,
            "percentageTokens": 54.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ImageDisplay.tsx": {
            "lines": 558,
            "tokens": 4918,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 52,
            "duplicatedTokens": 487,
            "percentage": 9.32,
            "percentageTokens": 9.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ImageDebugger.tsx": {
            "lines": 80,
            "tokens": 671,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ImageDebug.tsx": {
            "lines": 29,
            "tokens": 271,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ImageActions.tsx": {
            "lines": 42,
            "tokens": 287,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 157,
            "percentage": 66.67,
            "percentageTokens": 54.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/EmptyState.tsx": {
            "lines": 25,
            "tokens": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/DuplicationTasksList.tsx": {
            "lines": 156,
            "tokens": 1373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/DuplicationProgress.tsx": {
            "lines": 157,
            "tokens": 1372,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/DeleteProjectDialog.tsx": {
            "lines": 79,
            "tokens": 546,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/DebugSegmentationThumbnail.tsx": {
            "lines": 211,
            "tokens": 1781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/CreateProjectDialog.tsx": {
            "lines": 147,
            "tokens": 1254,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/header/UserProfileDropdown.tsx": {
            "lines": 98,
            "tokens": 888,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/header/MobileMenu.tsx": {
            "lines": 82,
            "tokens": 754,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/header/Logo.tsx": {
            "lines": 15,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/diagnostics/ImageLoadingDebugger.tsx": {
            "lines": 110,
            "tokens": 1195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/UploadTab.tsx": {
            "lines": 56,
            "tokens": 614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/StatsOverview.tsx": {
            "lines": 502,
            "tokens": 4158,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/ProjectsTab.tsx": {
            "lines": 25,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/DuplicationTasksWidget.tsx": {
            "lines": 24,
            "tokens": 222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/DashboardTabs.tsx": {
            "lines": 45,
            "tokens": 387,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/charts/PieChartContainer.tsx": {
            "lines": 52,
            "tokens": 457,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/charts/MetricsChartCard.tsx": {
            "lines": 32,
            "tokens": 244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/charts/BarChartContainer.tsx": {
            "lines": 52,
            "tokens": 382,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/auth/SignInForm.tsx": {
            "lines": 43,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/a11y/VisuallyHidden.tsx": {
            "lines": 21,
            "tokens": 163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/a11y/SkipLink.tsx": {
            "lines": 22,
            "tokens": 163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/a11y/ScreenReaderAnnouncement.tsx": {
            "lines": 45,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/a11y/FocusTrap.tsx": {
            "lines": 93,
            "tokens": 758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/__tests__/ImageUploaderTest.tsx": {
            "lines": 139,
            "tokens": 1029,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 176,
            "percentage": 15.83,
            "percentageTokens": 17.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/test-wrapper.tsx": {
            "lines": 57,
            "tokens": 420,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/react-router-wrapper.tsx": {
            "lines": 61,
            "tokens": 408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/index.tsx": {
            "lines": 76,
            "tokens": 518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/contextMocks.tsx": {
            "lines": 155,
            "tokens": 1249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/TermsOfService.tsx": {
            "lines": 52,
            "tokens": 555,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 156,
            "percentage": 30.77,
            "percentageTokens": 28.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/SignUp.tsx": {
            "lines": 392,
            "tokens": 3176,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 101,
            "duplicatedTokens": 662,
            "percentage": 25.77,
            "percentageTokens": 20.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/SignIn.tsx": {
            "lines": 219,
            "tokens": 1922,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 43,
            "duplicatedTokens": 266,
            "percentage": 19.63,
            "percentageTokens": 13.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/Settings.tsx": {
            "lines": 145,
            "tokens": 1338,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 104,
            "percentage": 8.28,
            "percentageTokens": 7.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/RequestAccess.tsx": {
            "lines": 287,
            "tokens": 2604,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 58,
            "duplicatedTokens": 396,
            "percentage": 20.21,
            "percentageTokens": 15.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/ProjectDetail.tsx": {
            "lines": 837,
            "tokens": 7566,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 126,
            "duplicatedTokens": 1270,
            "percentage": 15.05,
            "percentageTokens": 16.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/Profile.tsx": {
            "lines": 575,
            "tokens": 5043,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 102,
            "duplicatedTokens": 707,
            "percentage": 17.74,
            "percentageTokens": 14.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/PrivacyPolicy.tsx": {
            "lines": 67,
            "tokens": 755,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 156,
            "percentage": 23.88,
            "percentageTokens": 20.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/NotFound.tsx": {
            "lines": 26,
            "tokens": 248,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/LandingPage.tsx": {
            "lines": 179,
            "tokens": 1671,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/Index.tsx": {
            "lines": 49,
            "tokens": 367,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/ForgotPassword.tsx": {
            "lines": 121,
            "tokens": 1135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/Documentation.tsx": {
            "lines": 268,
            "tokens": 2382,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/Dashboard.tsx": {
            "lines": 220,
            "tokens": 1873,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 181,
            "percentage": 13.64,
            "percentageTokens": 9.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/AcceptInvitation.tsx": {
            "lines": 153,
            "tokens": 1438,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/AboutPage.tsx": {
            "lines": 110,
            "tokens": 1204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useProjectForm.tsx": {
            "lines": 102,
            "tokens": 924,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useProjectData.tsx": {
            "lines": 569,
            "tokens": 3134,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 90,
            "percentage": 1.41,
            "percentageTokens": 2.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/useImageFilter.tsx": {
            "lines": 70,
            "tokens": 694,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/hooks/use-mobile.tsx": {
            "lines": 18,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/ThemeContext.tsx": {
            "lines": 169,
            "tokens": 1451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/SocketContext.tsx": {
            "lines": 68,
            "tokens": 455,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/ProfileContext.tsx": {
            "lines": 241,
            "tokens": 2021,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/LanguageContext.tsx": {
            "lines": 310,
            "tokens": 3019,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/AuthContext.tsx": {
            "lines": 790,
            "tokens": 5935,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ThemedFooter.tsx": {
            "lines": 224,
            "tokens": 1795,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 232,
            "percentage": 10.27,
            "percentageTokens": 12.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ThemeToggle.tsx": {
            "lines": 89,
            "tokens": 785,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/StatsOverview.tsx": {
            "lines": 195,
            "tokens": 1654,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 81,
            "percentage": 3.59,
            "percentageTokens": 4.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/SegmentationQueueIndicator.tsx": {
            "lines": 384,
            "tokens": 3146,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 85,
            "percentage": 2.6,
            "percentageTokens": 2.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ProtectedRoute.tsx": {
            "lines": 113,
            "tokens": 970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ProjectsList.tsx": {
            "lines": 183,
            "tokens": 1565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ProjectSelector.tsx": {
            "lines": 65,
            "tokens": 637,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ProjectListItem.tsx": {
            "lines": 119,
            "tokens": 915,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ProjectImageGrid.tsx": {
            "lines": 175,
            "tokens": 1548,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/Profile.tsx": {
            "lines": 252,
            "tokens": 2212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/NewProjectListItem.tsx": {
            "lines": 30,
            "tokens": 249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/NewProject.tsx": {
            "lines": 126,
            "tokens": 1063,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 103,
            "percentage": 8.73,
            "percentageTokens": 9.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/Navbar.tsx": {
            "lines": 170,
            "tokens": 1250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/LoadingFallback.tsx": {
            "lines": 27,
            "tokens": 218,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/LanguageSwitcher.tsx": {
            "lines": 84,
            "tokens": 694,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ImageUploaderDropzone.tsx": {
            "lines": 71,
            "tokens": 559,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ImageUploader.tsx": {
            "lines": 437,
            "tokens": 3893,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/Hero.tsx": {
            "lines": 111,
            "tokens": 948,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 100,
            "percentage": 12.61,
            "percentageTokens": 10.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/Features.tsx": {
            "lines": 192,
            "tokens": 1616,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 37,
            "duplicatedTokens": 332,
            "percentage": 19.27,
            "percentageTokens": 20.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ErrorBoundary.tsx": {
            "lines": 225,
            "tokens": 1692,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 72,
            "percentage": 5.78,
            "percentageTokens": 4.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/EmptyProjectState.tsx": {
            "lines": 50,
            "tokens": 343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/DashboardHeader.tsx": {
            "lines": 34,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/DashboardActions.tsx": {
            "lines": 46,
            "tokens": 427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/BackButton.tsx": {
            "lines": 23,
            "tokens": 205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/About.tsx": {
            "lines": 74,
            "tokens": 663,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/__mocks__/react-router-dom.tsx": {
            "lines": 27,
            "tokens": 219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/main.tsx": {
            "lines": 64,
            "tokens": 418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/App.tsx": {
            "lines": 488,
            "tokens": 3234,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 31794,
          "tokens": 264734,
          "sources": 237,
          "clones": 53,
          "duplicatedLines": 772,
          "duplicatedTokens": 6189,
          "percentage": 2.43,
          "percentageTokens": 2.34,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx": {
            "lines": 7,
            "tokens": 208,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/export/MetricsVisualization.tsx": {
            "lines": 62,
            "tokens": 480,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/export/MetricsDisplay.tsx": {
            "lines": 21,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/export/ExcelExporter.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/export/CocoTab.tsx": {
            "lines": 4,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/index.tsx": {
            "lines": 34,
            "tokens": 184,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/TempPointsPath.tsx": {
            "lines": 41,
            "tokens": 317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/StartPointIndicator.tsx": {
            "lines": 26,
            "tokens": 193,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/PotentialEndpointIndicator.tsx": {
            "lines": 21,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/HoveredVertexIndicator.tsx": {
            "lines": 16,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/HighlightedSegment.tsx": {
            "lines": 17,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/pointAddingVisualizer/CursorLineConnector.tsx": {
            "lines": 7,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/toolbar/ToolbarV2.tsx": {
            "lines": 126,
            "tokens": 1007,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/project/ProjectImageExport.tsx": {
            "lines": 43,
            "tokens": 456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/layout/EditorLayout.tsx": {
            "lines": 4,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/keyboard/KeyboardShortcutsHelp.tsx": {
            "lines": 28,
            "tokens": 302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/editor/EditorContainer.tsx": {
            "lines": 131,
            "tokens": 863,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/editor/DebugOverlay.tsx": {
            "lines": 117,
            "tokens": 873,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/context-menu/VertexContextMenu.tsx": {
            "lines": 5,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/context-menu/PolygonContextMenu.tsx": {
            "lines": 30,
            "tokens": 273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/TemporaryEditPath.tsx": {
            "lines": 59,
            "tokens": 525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/SlicingModeVisualizer.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/EditorModeVisualizations.tsx": {
            "lines": 14,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/EditorModeFooter.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/EditModeBorder.tsx": {
            "lines": 7,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx": {
            "lines": 169,
            "tokens": 1849,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 116,
            "duplicatedTokens": 1838,
            "percentage": 68.64,
            "percentageTokens": 99.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasUIElements.tsx": {
            "lines": 19,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasTemporaryGeometryLayer.tsx": {
            "lines": 163,
            "tokens": 1358,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 88,
            "duplicatedTokens": 754,
            "percentage": 53.99,
            "percentageTokens": 55.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasPolygonLayer.tsx": {
            "lines": 24,
            "tokens": 185,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasPolygon.tsx": {
            "lines": 5,
            "tokens": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasLoadingOverlay.tsx": {
            "lines": 3,
            "tokens": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasImageLayer.tsx": {
            "lines": 49,
            "tokens": 401,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasImage.tsx": {
            "lines": 5,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasContainer.tsx": {
            "lines": 6,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/__tests__/polygon/SegmentationEditorV2PolygonTests.tsx": {
            "lines": 52,
            "tokens": 583,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/contexts/SegmentationContext.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/StatusBar.tsx": {
            "lines": 34,
            "tokens": 268,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/RegionPanel.tsx": {
            "lines": 45,
            "tokens": 424,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/EditorToolbarButton.tsx": {
            "lines": 9,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/EditorToolbar.tsx": {
            "lines": 79,
            "tokens": 577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/EditorHelpTips.tsx": {
            "lines": 13,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/components/EditorHeader.tsx": {
            "lines": 150,
            "tokens": 1162,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/export/components/ImageSelectionCard.tsx": {
            "lines": 34,
            "tokens": 354,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/export/components/ExportOptionsCard.tsx": {
            "lines": 100,
            "tokens": 949,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/SegmentationPage.tsx": {
            "lines": 133,
            "tokens": 1029,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 104,
            "percentage": 12.78,
            "percentageTokens": 10.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/segmentation/SegmentationEditorV2.tsx": {
            "lines": 34,
            "tokens": 207,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 104,
            "percentage": 50,
            "percentageTokens": 50.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/export/ProjectExport.tsx": {
            "lines": 57,
            "tokens": 405,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/upload/UploaderOptions.tsx": {
            "lines": 10,
            "tokens": 73,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/upload/FileList.tsx": {
            "lines": 32,
            "tokens": 411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/upload/DropZone.tsx": {
            "lines": 7,
            "tokens": 102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/tooltip.tsx": {
            "lines": 5,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/toggle.tsx": {
            "lines": 0,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/toggle-group.tsx": {
            "lines": 22,
            "tokens": 202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/textarea.tsx": {
            "lines": 4,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/tabs.tsx": {
            "lines": 34,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/table.tsx": {
            "lines": 59,
            "tokens": 625,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/switch.tsx": {
            "lines": 10,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/slider.tsx": {
            "lines": 1,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/skeleton.tsx": {
            "lines": 0,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/sheet.tsx": {
            "lines": 71,
            "tokens": 641,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/separator.tsx": {
            "lines": 3,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/select.tsx": {
            "lines": 110,
            "tokens": 832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/radio-group.tsx": {
            "lines": 14,
            "tokens": 122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/progress.tsx": {
            "lines": 1,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/label.tsx": {
            "lines": 0,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/input.tsx": {
            "lines": 5,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/image-cropper.tsx": {
            "lines": 43,
            "tokens": 333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/form.tsx": {
            "lines": 94,
            "tokens": 929,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/dropdown-menu.tsx": {
            "lines": 133,
            "tokens": 1004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/dialog.tsx": {
            "lines": 60,
            "tokens": 519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/context-menu.tsx": {
            "lines": 132,
            "tokens": 991,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/container.tsx": {
            "lines": 0,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/checkbox.tsx": {
            "lines": 7,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/chart.tsx": {
            "lines": 222,
            "tokens": 1699,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/card.tsx": {
            "lines": 32,
            "tokens": 440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/button.tsx": {
            "lines": 0,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/breadcrumb.tsx": {
            "lines": 75,
            "tokens": 636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/badge.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/avatar.tsx": {
            "lines": 21,
            "tokens": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/alert.tsx": {
            "lines": 13,
            "tokens": 196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ui/alert-dialog.tsx": {
            "lines": 68,
            "tokens": 675,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/UserProfileSection.tsx": {
            "lines": 98,
            "tokens": 776,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 72,
            "duplicatedTokens": 516,
            "percentage": 73.47,
            "percentageTokens": 66.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/DeleteAccountDialog.tsx": {
            "lines": 69,
            "tokens": 513,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/AvatarUploader.tsx": {
            "lines": 69,
            "tokens": 521,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/AppearanceSection.tsx": {
            "lines": 48,
            "tokens": 421,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 258,
            "percentage": 70.83,
            "percentageTokens": 61.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/settings/AccountSection.tsx": {
            "lines": 98,
            "tokens": 776,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ShareDialog.tsx": {
            "lines": 311,
            "tokens": 2624,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/SegmentationThumbnail.tsx": {
            "lines": 0,
            "tokens": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/SegmentationProgress.tsx": {
            "lines": 757,
            "tokens": 6466,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectViewOptions.tsx": {
            "lines": 3,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectUploaderSection.tsx": {
            "lines": 11,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectToolbar.tsx": {
            "lines": 169,
            "tokens": 1464,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 106,
            "percentage": 6.51,
            "percentageTokens": 7.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectImages.tsx": {
            "lines": 70,
            "tokens": 633,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectImageProcessor.tsx": {
            "lines": 1,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectHeader.tsx": {
            "lines": 12,
            "tokens": 120,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectDuplicationDialog.tsx": {
            "lines": 35,
            "tokens": 273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectDialogForm.tsx": {
            "lines": 24,
            "tokens": 220,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 200,
            "percentage": 91.67,
            "percentageTokens": 90.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectCard.tsx": {
            "lines": 85,
            "tokens": 805,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ProjectActions.tsx": {
            "lines": 56,
            "tokens": 418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/NewProjectCardUI.tsx": {
            "lines": 5,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ImageListActions.tsx": {
            "lines": 16,
            "tokens": 98,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ImageDisplay.tsx": {
            "lines": 207,
            "tokens": 1840,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 392,
            "percentage": 16.43,
            "percentageTokens": 21.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ImageDebugger.tsx": {
            "lines": 38,
            "tokens": 328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/ImageActions.tsx": {
            "lines": 16,
            "tokens": 98,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/EmptyState.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/DuplicationTasksList.tsx": {
            "lines": 40,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/DuplicationProgress.tsx": {
            "lines": 52,
            "tokens": 432,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/DeleteProjectDialog.tsx": {
            "lines": 17,
            "tokens": 131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/DebugSegmentationThumbnail.tsx": {
            "lines": 54,
            "tokens": 446,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/project/CreateProjectDialog.tsx": {
            "lines": 38,
            "tokens": 350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/header/UserProfileDropdown.tsx": {
            "lines": 18,
            "tokens": 234,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/header/MobileMenu.tsx": {
            "lines": 44,
            "tokens": 409,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/diagnostics/ImageLoadingDebugger.tsx": {
            "lines": 12,
            "tokens": 174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/UploadTab.tsx": {
            "lines": 9,
            "tokens": 104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/StatsOverview.tsx": {
            "lines": 435,
            "tokens": 3655,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/ProjectsTab.tsx": {
            "lines": 5,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/DuplicationTasksWidget.tsx": {
            "lines": 5,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/dashboard/DashboardTabs.tsx": {
            "lines": 10,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/charts/PieChartContainer.tsx": {
            "lines": 14,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/charts/MetricsChartCard.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/charts/BarChartContainer.tsx": {
            "lines": 12,
            "tokens": 143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/auth/SignInForm.tsx": {
            "lines": 5,
            "tokens": 106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/a11y/VisuallyHidden.tsx": {
            "lines": 0,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/a11y/SkipLink.tsx": {
            "lines": 0,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/a11y/ScreenReaderAnnouncement.tsx": {
            "lines": 0,
            "tokens": 10,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/a11y/FocusTrap.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/__tests__/ImageUploaderTest.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/test-wrapper.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/react-router-wrapper.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/test-utils/index.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/SignUp.tsx": {
            "lines": 216,
            "tokens": 1528,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 140,
            "percentage": 12.04,
            "percentageTokens": 9.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/SignIn.tsx": {
            "lines": 49,
            "tokens": 365,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/Settings.tsx": {
            "lines": 31,
            "tokens": 348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/RequestAccess.tsx": {
            "lines": 109,
            "tokens": 979,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/ProjectDetail.tsx": {
            "lines": 113,
            "tokens": 999,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/Profile.tsx": {
            "lines": 184,
            "tokens": 1755,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 128,
            "duplicatedTokens": 1038,
            "percentage": 69.57,
            "percentageTokens": 59.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/ForgotPassword.tsx": {
            "lines": 13,
            "tokens": 128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/Dashboard.tsx": {
            "lines": 94,
            "tokens": 758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/pages/AcceptInvitation.tsx": {
            "lines": 20,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/ThemeContext.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/SocketContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/ProfileContext.tsx": {
            "lines": 8,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/LanguageContext.tsx": {
            "lines": 0,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/contexts/AuthContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ThemedFooter.tsx": {
            "lines": 88,
            "tokens": 710,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 142,
            "duplicatedTokens": 1034,
            "percentage": 161.36,
            "percentageTokens": 145.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ThemeToggle.tsx": {
            "lines": 42,
            "tokens": 357,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 258,
            "percentage": 80.95,
            "percentageTokens": 72.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/StatsOverview.tsx": {
            "lines": 73,
            "tokens": 661,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ProjectsList.tsx": {
            "lines": 125,
            "tokens": 1057,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ProjectSelector.tsx": {
            "lines": 7,
            "tokens": 111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ProjectListItem.tsx": {
            "lines": 50,
            "tokens": 416,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ProjectImageGrid.tsx": {
            "lines": 25,
            "tokens": 296,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/Profile.tsx": {
            "lines": 134,
            "tokens": 1098,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/NewProjectListItem.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/NewProject.tsx": {
            "lines": 39,
            "tokens": 356,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 200,
            "percentage": 56.41,
            "percentageTokens": 56.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/Navbar.tsx": {
            "lines": 113,
            "tokens": 786,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 66,
            "duplicatedTokens": 464,
            "percentage": 58.41,
            "percentageTokens": 59.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/LanguageSwitcher.tsx": {
            "lines": 21,
            "tokens": 210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ImageUploaderDropzone.tsx": {
            "lines": 18,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ImageUploader.tsx": {
            "lines": 155,
            "tokens": 1230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/Hero.tsx": {
            "lines": 46,
            "tokens": 408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/Features.tsx": {
            "lines": 57,
            "tokens": 509,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/ErrorBoundary.tsx": {
            "lines": 106,
            "tokens": 852,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/EmptyProjectState.tsx": {
            "lines": 8,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/DashboardHeader.tsx": {
            "lines": 0,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/DashboardActions.tsx": {
            "lines": 11,
            "tokens": 106,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 106,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/BackButton.tsx": {
            "lines": 1,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/components/About.tsx": {
            "lines": 1,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/workers/projectDuplicationWorker.js": {
            "lines": 315,
            "tokens": 2441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/scripts/update-file-sizes.js": {
            "lines": 103,
            "tokens": 672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/scripts/test-api-routes.js": {
            "lines": 179,
            "tokens": 1734,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 164,
            "percentage": 15.64,
            "percentageTokens": 9.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/scripts/run-migration.js": {
            "lines": 44,
            "tokens": 337,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/scripts/create-test-user.js": {
            "lines": 93,
            "tokens": 647,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 92,
            "percentage": 8.6,
            "percentageTokens": 14.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/health.js": {
            "lines": 16,
            "tokens": 121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/routes/fixed-images.js": {
            "lines": 15,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/migrations/20250508_add_project_shares.js": {
            "lines": 33,
            "tokens": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/migrations/1748720500000_add-project-duplication-tasks.js": {
            "lines": 72,
            "tokens": 605,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/middleware/metrics.js": {
            "lines": 119,
            "tokens": 928,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/user.js": {
            "lines": 5,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/segmentation.js": {
            "lines": 14,
            "tokens": 130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/project.js": {
            "lines": 5,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/polygon.js": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/index.js": {
            "lines": 21,
            "tokens": 396,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/types/src/image.js": {
            "lines": 5,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/src/App.tsx": {
            "lines": 212,
            "tokens": 1114,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 178,
            "percentage": 18.87,
            "percentageTokens": 15.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/src/simple-server.js": {
            "lines": 149,
            "tokens": 1273,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 92,
            "percentage": 5.37,
            "percentageTokens": 7.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "jscpd-report/html/js/prism.js": {
            "lines": 15,
            "tokens": 4580,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/vite.config.ts.timestamp-1751149278989-c90a751383f83.mjs": {
            "lines": 198,
            "tokens": 1919,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/vite-static-fix.js": {
            "lines": 83,
            "tokens": 778,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/tailwind.config.js": {
            "lines": 66,
            "tokens": 417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/frontend/postcss.config.cjs": {
            "lines": 5,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/jest.config.js": {
            "lines": 22,
            "tokens": 161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/db-init.js": {
            "lines": 199,
            "tokens": 796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/backend/.eslintrc.js": {
            "lines": 24,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "test-tiff-handling.js": {
            "lines": 70,
            "tokens": 600,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "analyze_translations.js": {
            "lines": 236,
            "tokens": 2315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".prettierrc.js": {
            "lines": 16,
            "tokens": 108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".eslintrc.js": {
            "lines": 50,
            "tokens": 273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 10613,
          "tokens": 93319,
          "sources": 196,
          "clones": 20,
          "duplicatedLines": 462,
          "duplicatedTokens": 4019,
          "percentage": 4.35,
          "percentageTokens": 4.31,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx": {
            "lines": 7,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 7,
          "tokens": 33,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 87368,
      "tokens": 689981,
      "sources": 686,
      "clones": 168,
      "duplicatedLines": 2845,
      "duplicatedTokens": 24289,
      "percentage": 3.26,
      "percentageTokens": 3.52,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ".polygons\n          .filter((polygon: Polygon) => polygon && Array.isArray(polygon.points) && polygon.points.length >= 3)\n          .map((polygon: Polygon) => ({\n            ...polygon,\n            id: polygon.id || `poly-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\n            type: polygon.type || 'external',\n            points: polygon.points.map((p: any) => {\n              // Handle both {x,y} and [x,y] formats\n              if (Array.isArray(p)) {\n                return { x: p[0], y: p[1] };\n              } else if (typeof p === 'object' && 'x' in p && 'y' in p) {\n                return { x: p.x, y: p.y };\n              }\n              return p;\n            }),\n          }));\n\n        logger.info(`Processed ${processedPolygons.length} valid polygons for imageId=${imageId}`);\n        fetchedSegmentation.polygons = processedPolygons;\n      } else if (fetchedSegmentation && !",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/segmentation/api.ts",
        "start": 324,
        "end": 343,
        "startLoc": {
          "line": 324,
          "column": 20,
          "position": 3113
        },
        "endLoc": {
          "line": 343,
          "column": 2,
          "position": 3414
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/segmentation/api.ts",
        "start": 300,
        "end": 319,
        "startLoc": {
          "line": 300,
          "column": 12,
          "position": 2764
        },
        "endLoc": {
          "line": 319,
          "column": 6,
          "position": 3065
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": ", marginBottom: '4px' }}>Create Polygon Mode</div>\n              <div>1. Click to start creating a polygon</div>\n              <div style={{ fontSize: '12px', marginTop: '4px', opacity: 0.8 }}>\n                Hold SHIFT to automatically add points\n              </div>\n            </div>\n          ) : tempPoints.length < 3 ? (\n            <div>\n              <div style={{ color: '#4ade80', marginBottom: '4px' }}>Create Polygon Mode</div>\n              <div>2. Continue clicking to add more points (at least 3 needed)</div>\n              <div style={{ fontSize: '12px', marginTop: '4px', opacity: 0.8 }}>\n                Hold SHIFT to automatically add points • Press ESC to cancel\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div style={{ color: '#4ade80', marginBottom: '4px' }}>Create Polygon Mode</div>\n              <div>3. Continue adding points or click near the first point to close the polygon</div>\n              <div style={{ fontSize: '12px', marginTop: '4px', opacity: 0.8 }}>\n                Hold SHIFT to automatically add points • Press ESC to cancel\n              </div>\n            </div>\n          )\n        ) : editMode === EditMode.AddPoints ? (\n          !interactionState?.isAddingPoints ? (\n            <div>\n              <div style={{ color: '#60a5fa'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx",
        "start": 286,
        "end": 312,
        "startLoc": {
          "line": 286,
          "column": 10,
          "position": 2585
        },
        "endLoc": {
          "line": 312,
          "column": 10,
          "position": 3001
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx",
        "start": 278,
        "end": 294,
        "startLoc": {
          "line": 278,
          "column": 10,
          "position": 2448
        },
        "endLoc": {
          "line": 294,
          "column": 10,
          "position": 2707
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ", marginBottom: '4px' }}>Add Points Mode</div>\n              <div>Click on any vertex to start adding points</div>\n              <div style={{ fontSize: '12px', marginTop: '4px', opacity: 0.8 }}>Press ESC to cancel</div>\n            </div>\n          ) : (\n            <div>\n              <div style={{ color: '#60a5fa', marginBottom: '4px' }}>Add Points Mode</div>\n              <div>Click to add points, then click on another vertex to complete</div>\n              <div style={{ fontSize: '12px', marginTop: '4px', opacity: 0.8 }}>\n                Hold SHIFT to automatically add points • Press ESC to cancel\n              </div>\n            </div>\n          )\n        ) : editMode === EditMode.EditVertices ? (\n          selectedPolygonId ? (\n            <div>\n              <div style={{ color: '#f97316'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx",
        "start": 312,
        "end": 328,
        "startLoc": {
          "line": 312,
          "column": 10,
          "position": 3002
        },
        "endLoc": {
          "line": 328,
          "column": 10,
          "position": 3260
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx",
        "start": 302,
        "end": 318,
        "startLoc": {
          "line": 302,
          "column": 10,
          "position": 2841
        },
        "endLoc": {
          "line": 318,
          "column": 10,
          "position": 3108
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ", marginBottom: '4px' }}>Edit Vertices Mode</div>\n              <div>Click and drag vertices to move them</div>\n              <div style={{ fontSize: '12px', marginTop: '4px', opacity: 0.8 }}>\n                Hold SHIFT and click a vertex to add points • Double-click a vertex to delete it\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div style={{ color: '#f97316', marginBottom: '4px' }}>Edit Vertices Mode</div>\n              <div style={{ fontSize: '12px', marginTop: '4px', opacity: 0.8 }}>\n                Click on a polygon to select it for editing\n              </div>\n            </div>\n          )\n        ) : editMode === EditMode.DeletePolygon ? (\n          <div>\n            <div style={{ color: '#ef4444'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx",
        "start": 328,
        "end": 344,
        "startLoc": {
          "line": 328,
          "column": 10,
          "position": 3261
        },
        "endLoc": {
          "line": 344,
          "column": 10,
          "position": 3506
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx",
        "start": 318,
        "end": 336,
        "startLoc": {
          "line": 318,
          "column": 10,
          "position": 3109
        },
        "endLoc": {
          "line": 336,
          "column": 10,
          "position": 3395
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Shift') {\n        setIsShiftPressed(true);\n      }\n    };\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.key === 'Shift') {\n        setIsShiftPressed(false);\n      }\n    };\n\n    window",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasV2.tsx",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 3,
          "position": 793
        },
        "endLoc": {
          "line": 107,
          "column": 7,
          "position": 899
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/editMode/useTempPoints.tsx",
        "start": 47,
        "end": 60,
        "startLoc": {
          "line": 47,
          "column": 3,
          "position": 456
        },
        "endLoc": {
          "line": 60,
          "column": 9,
          "position": 562
        }
      }
    },
    {
      "format": "javascript",
      "lines": 28,
      "fragment": "${index}`}\n                cx={point.x}\n                cy={point.y}\n                r={index === 0 ? vertexRadius * 1.5 : vertexRadius}\n                fill={index === 0 ? 'yellow' : 'cyan'}\n                stroke=\"black\"\n                strokeWidth={1 / transform.zoom}\n                vectorEffect=\"non-scaling-stroke\"\n                style={{ pointerEvents: 'none' }}\n              />\n            ))}\n\n          {interactionState?.isAddingPoints &&\n            interactionState?.addPointStartVertex &&\n            segmentationData?.polygons &&\n            cursorPosition &&\n            (() => {\n              const selectedPolygon = segmentationData.polygons.find((p) => p.id === selectedPolygonId);\n              if (\n                selectedPolygon &&\n                interactionState.addPointStartVertex.vertexIndex < selectedPolygon.points.length\n              ) {\n                const startPoint = selectedPolygon.points[interactionState.addPointStartVertex.vertexIndex];\n\n                if (tempPoints.length > 0) {\n                  return (\n                    <line\n                      x1={startPoint",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasTemporaryGeometryLayer.tsx",
        "start": 142,
        "end": 169,
        "startLoc": {
          "line": 142,
          "column": 17,
          "position": 1116
        },
        "endLoc": {
          "line": 169,
          "column": 11,
          "position": 1361
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasTemporaryGeometryLayer.tsx",
        "start": 55,
        "end": 69,
        "startLoc": {
          "line": 55,
          "column": 13,
          "position": 423
        },
        "endLoc": {
          "line": 69,
          "column": 11,
          "position": 548
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "}\n                      vectorEffect=\"non-scaling-stroke\"\n                      style={{ pointerEvents: 'none' }}\n                    />\n                  );\n                }\n              }\n              return null;\n            })()}\n\n          {interactionState?.isAddingPoints && tempPoints.length > 0 && cursorPosition && (\n            <line\n              x1={tempPoints[tempPoints.length - 1].x}\n              y1={tempPoints[tempPoints.length - 1].y}\n              x2={cursorPosition.x}\n              y2={cursorPosition.y}\n              stroke=\"cyan\"\n              strokeWidth={2.5",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasTemporaryGeometryLayer.tsx",
        "start": 189,
        "end": 206,
        "startLoc": {
          "line": 189,
          "column": 2,
          "position": 1548
        },
        "endLoc": {
          "line": 206,
          "column": 4,
          "position": 1680
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasTemporaryGeometryLayer.tsx",
        "start": 61,
        "end": 74,
        "startLoc": {
          "line": 61,
          "column": 5,
          "position": 495
        },
        "endLoc": {
          "line": 74,
          "column": 4,
          "position": 602
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "import React from 'react';\nimport { Point } from '@/types';\nimport { EditMode, InteractionState } from '@/pages/segmentation/hooks/segmentation';\n\ninterface Polygon {\n  id: string;\n  points: Point[];\n  type?: 'external' | 'internal';\n}\n\ninterface SegmentationData {\n  polygons: Polygon[];\n}\n\ninterface CanvasTemporaryGeometryLayerProps",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasTemporaryGeometryLayer.tsx",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 15,
          "column": 34,
          "position": 96
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasVertexLayer.tsx",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 15,
          "column": 23,
          "position": 96
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ",\n}) => {\n  const formatPoints = (points: Point[]): string => {\n    return points.map((p) => `${p.x},${p.y}`).join(' ');\n  };\n\n  const getPolygonStyle",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasPolygonLayer.tsx",
        "start": 35,
        "end": 41,
        "startLoc": {
          "line": 35,
          "column": 10,
          "position": 272
        },
        "endLoc": {
          "line": 41,
          "column": 16,
          "position": 346
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasTemporaryGeometryLayer.tsx",
        "start": 32,
        "end": 38,
        "startLoc": {
          "line": 32,
          "column": 17,
          "position": 216
        },
        "endLoc": {
          "line": 38,
          "column": 13,
          "position": 290
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "editMode: EditMode;\n  onSelectPolygon?: (id: string) => void;\n  onDeletePolygon?: (id: string) => void;\n  onSlicePolygon?: (id: string) => void;\n  onEditPolygon?: (id: string) => void;\n  onDeleteVertex?: (polygonId: string, vertexIndex: number) => void;\n  onDuplicateVertex?: (polygonId: string, vertexIndex: number) => void;\n  relatedPolygons",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/CanvasPolygon.tsx",
        "start": 32,
        "end": 39,
        "startLoc": {
          "line": 32,
          "column": 3,
          "position": 244
        },
        "endLoc": {
          "line": 39,
          "column": 16,
          "position": 365
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/components/canvas/PolygonCollection.tsx",
        "start": 19,
        "end": 26,
        "startLoc": {
          "line": 19,
          "column": 3,
          "position": 164
        },
        "endLoc": {
          "line": 26,
          "column": 2,
          "position": 284
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "const mockState = {\n    imageData: {\n      id: 'test-image-id',\n      actualId: 'test-image-id',\n      name: 'test-image.jpg',\n      url: 'https://example.com/test-image.jpg',\n      width: 800,\n      height: 600,\n    },\n    segmentationData: {\n      polygons: [\n        {\n          id: 'polygon-1',\n          points: [\n            { x: 100, y: 100 },\n            { x: 200, y: 100 },\n            { x: 200, y: 200 },\n            { x: 100, y: 200 },\n          ],\n          color: '#FF0000',\n          label: 'Cell 1',\n        },\n      ]",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/keyboard/SegmentationEditorV2KeyboardTests.tsx",
        "start": 17,
        "end": 39,
        "startLoc": {
          "line": 17,
          "column": 3,
          "position": 162
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 341
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/polygon/SegmentationEditorV2PolygonTests.tsx",
        "start": 16,
        "end": 38,
        "startLoc": {
          "line": 16,
          "column": 3,
          "position": 152
        },
        "endLoc": {
          "line": 38,
          "column": 2,
          "position": 331
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ": vi.fn(),\n    handleSave: vi.fn(),\n    undo: vi.fn(),\n    redo: vi.fn(),\n    onMouseDown: vi.fn(),\n    onMouseMove: vi.fn(),\n    onMouseUp: vi.fn(),\n    getCanvasCoordinates: vi.fn()",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/keyboard/SegmentationEditorV2KeyboardTests.tsx",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 31,
          "position": 522
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 605
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/polygon/SegmentationEditorV2PolygonTests.tsx",
        "start": 79,
        "end": 86,
        "startLoc": {
          "line": 79,
          "column": 17,
          "position": 682
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 765
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "),\n    handleDeletePolygon: vi.fn(),\n  };\n\n  return {\n    useSegmentationV2: vi.fn(() => mockState),\n    EditMode: {\n      View: 'View',\n      EditVertices: 'EditVertices',\n      AddPolygon: 'AddPolygon',\n      DeletePolygon: 'DeletePolygon',\n      SlicePolygon: 'SlicePolygon',\n      MergePolygons: 'MergePolygons',\n    },\n    // Export the mock state so we can modify it during tests\n    _mockSegmentationState: mockState,\n  };\n});\n\n// Mock useSlicing hook",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/keyboard/SegmentationEditorV2KeyboardTests.tsx",
        "start": 66,
        "end": 85,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 605
        },
        "endLoc": {
          "line": 85,
          "column": 24,
          "position": 717
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/polygon/SegmentationEditorV2PolygonTests.tsx",
        "start": 86,
        "end": 105,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 784
        },
        "endLoc": {
          "line": 105,
          "column": 48,
          "position": 896
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ");\n\n// Mock react-router-dom's useNavigate\nvi.mock('react-router-dom', async () => {\n  const actual = await vi.importActual('react-router-dom');\n  return {\n    ...actual,\n    useNavigate: vi.fn(() => vi.fn()),\n  };\n});\n\n// Mock CanvasV2 component",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/keyboard/SegmentationEditorV2KeyboardTests.tsx",
        "start": 90,
        "end": 101,
        "startLoc": {
          "line": 90,
          "column": 2,
          "position": 769
        },
        "endLoc": {
          "line": 101,
          "column": 27,
          "position": 848
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/polygon/SegmentationEditorV2PolygonTests.tsx",
        "start": 146,
        "end": 157,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1231
        },
        "endLoc": {
          "line": 157,
          "column": 63,
          "position": 1310
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "),\n}));\n\n// Mock toast\nvi.mock('sonner', () => ({\n  toast: {\n    success: vi.fn(),\n    error: vi.fn(),\n  },\n}));\n\n// Mock react-i18next\nvi.mock('react-i18next', () => ({\n  useTranslation: () => ({\n    t: (key: string) => key,\n  }),\n}));\n\n// Mock fetch for API calls\nglobal.fetch = vi.fn();\n\ndescribe('SegmentationEditorV2 Keyboard Interactions'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/keyboard/SegmentationEditorV2KeyboardTests.tsx",
        "start": 116,
        "end": 137,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 981
        },
        "endLoc": {
          "line": 137,
          "column": 45,
          "position": 1119
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/polygon/SegmentationEditorV2PolygonTests.tsx",
        "start": 231,
        "end": 252,
        "startLoc": {
          "line": 231,
          "column": 2,
          "position": 2004
        },
        "endLoc": {
          "line": 252,
          "column": 44,
          "position": 2142
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ", () => {\n  beforeEach(() => {\n    // Setup all context mocks\n    setupAllContextMocks();\n\n    // Reset mocks\n    vi.clearAllMocks();\n  });\n\n  afterEach(() => {\n    vi.clearAllMocks();\n  });\n\n  const renderComponent = () => {\n    return render(\n      <MemoryRouterWrapper>\n        <SegmentationEditorV2 projectId=\"test-project-id\" imageId=\"test-image-id\" />\n      </MemoryRouterWrapper>,\n    );\n  };\n\n  it",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/keyboard/SegmentationEditorV2KeyboardTests.tsx",
        "start": 137,
        "end": 158,
        "startLoc": {
          "line": 137,
          "column": 45,
          "position": 1120
        },
        "endLoc": {
          "line": 158,
          "column": 3,
          "position": 1249
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/polygon/SegmentationEditorV2PolygonTests.tsx",
        "start": 252,
        "end": 273,
        "startLoc": {
          "line": 252,
          "column": 44,
          "position": 2143
        },
        "endLoc": {
          "line": 273,
          "column": 28,
          "position": 2272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ")) {\n    const baseFilename = filename.substring(0, filename.lastIndexOf('.'));\n    const pngFilename = `${baseFilename}.png`;\n    \n    // Add converted PNG versions to the beginning (higher priority)\n    urls.unshift(\n      originalUrl.replace(filename, pngFilename),\n      `${baseUrl}${urlWithoutOrigin.replace(filename, pngFilename)}`,\n      `/api${urlWithoutOrigin.replace(filename, pngFilename)}`,\n      `/uploads/${pngFilename}`,\n      `/api/uploads/${pngFilename}`\n    );\n    \n    if (projectId) {\n      urls.unshift(\n        `/uploads/${projectId}/${pngFilename}`,\n        `/api/uploads/${projectId}/${pngFilename}`\n      );\n    }\n  }\n\n  // Filter out duplicates",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/utils/imageLoader.ts",
        "start": 174,
        "end": 195,
        "startLoc": {
          "line": 174,
          "column": 7,
          "position": 1368
        },
        "endLoc": {
          "line": 195,
          "column": 25,
          "position": 1537
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/utils/imageLoader.ts",
        "start": 152,
        "end": 173,
        "startLoc": {
          "line": 152,
          "column": 7,
          "position": 1187
        },
        "endLoc": {
          "line": 173,
          "column": 62,
          "position": 1357
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ");\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [editMode, setEditMode",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/useSegmentationKeyboard.ts",
        "start": 117,
        "end": 128,
        "startLoc": {
          "line": 117,
          "column": 6,
          "position": 810
        },
        "endLoc": {
          "line": 128,
          "column": 12,
          "position": 892
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/segmentation/useSegmentationV2.ts",
        "start": 478,
        "end": 491,
        "startLoc": {
          "line": 478,
          "column": 5,
          "position": 3479
        },
        "endLoc": {
          "line": 491,
          "column": 18,
          "position": 3564
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ");\n  const [selectedPolygonId, setSelectedPolygonId] = useState<string | null>(null);\n  const [hoveredVertex, setHoveredVertex] = useState<{\n    polygonId: string;\n    vertexIndex: number;\n  } | null>(null);\n  const [tempPoints, setTempPoints] = useState<Point[]>([]);\n  const [interactionState",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/useOptimizedSegmentation.ts",
        "start": 72,
        "end": 79,
        "startLoc": {
          "line": 72,
          "column": 5,
          "position": 522
        },
        "endLoc": {
          "line": 79,
          "column": 17,
          "position": 620
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/segmentation/useSegmentationV2.ts",
        "start": 56,
        "end": 63,
        "startLoc": {
          "line": 56,
          "column": 5,
          "position": 548
        },
        "endLoc": {
          "line": 63,
          "column": 19,
          "position": 646
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isSaving, setIsSaving] = useState<boolean>(false);\n  const [isResegmenting, setIsResegmenting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Historie pro Undo/Redo",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/useOptimizedSegmentation.ts",
        "start": 87,
        "end": 93,
        "startLoc": {
          "line": 87,
          "column": 2,
          "position": 686
        },
        "endLoc": {
          "line": 93,
          "column": 26,
          "position": 779
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/segmentation/useSegmentationV2.ts",
        "start": 30,
        "end": 36,
        "startLoc": {
          "line": 30,
          "column": 5,
          "position": 320
        },
        "endLoc": {
          "line": 36,
          "column": 74,
          "position": 413
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [selectedPolygonId",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/useOptimizedSegmentation.ts",
        "start": 182,
        "end": 193,
        "startLoc": {
          "line": 182,
          "column": 6,
          "position": 1605
        },
        "endLoc": {
          "line": 193,
          "column": 18,
          "position": 1683
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/segmentation/useSegmentationV2.ts",
        "start": 478,
        "end": 490,
        "startLoc": {
          "line": 478,
          "column": 2,
          "position": 3480
        },
        "endLoc": {
          "line": 490,
          "column": 9,
          "position": 3560
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "[\n    {\n      id: 'polygon-1',\n      points: [\n        { x: 100, y: 100 },\n        { x: 200, y: 100 },\n        { x: 200, y: 200 },\n        { x: 100, y: 200 },\n      ],\n      type",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
        "start": 223,
        "end": 232,
        "startLoc": {
          "line": 223,
          "column": 2,
          "position": 1952
        },
        "endLoc": {
          "line": 232,
          "column": 5,
          "position": 2043
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/utils/testUtils.ts",
        "start": 84,
        "end": 93,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 604
        },
        "endLoc": {
          "line": 93,
          "column": 6,
          "position": 695
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n      color: '#FF0000',\n      label: 'Cell 1',\n    },\n    {\n      id: 'polygon-2',\n      points: [\n        { x: 300, y: 300 },\n        { x: 400, y: 300 },\n        { x: 400, y: 400 },\n        { x: 300, y: 400 },\n      ],\n      type",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
        "start": 232,
        "end": 244,
        "startLoc": {
          "line": 232,
          "column": 11,
          "position": 2047
        },
        "endLoc": {
          "line": 244,
          "column": 5,
          "position": 2156
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/__tests__/utils/testUtils.ts",
        "start": 92,
        "end": 104,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 692
        },
        "endLoc": {
          "line": 104,
          "column": 6,
          "position": 801
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "={editMode}\n        setEditMode={setEditMode}\n        onZoomIn={handleZoomIn}\n        onZoomOut={handleZoomOut}\n        onResetView={handleResetView}\n        onSave={handleSave}\n        onUndo={undo}\n        onRedo={redo}\n        onResegment={handleResegment}\n        canUndo={canUndo}\n        canRedo={canRedo}\n        isSaving={isSaving}\n        isResegmenting={isResegmenting}\n      />\n\n      <div className=\"flex-1 relative\" id=\"canvas-container\">\n        <CanvasV2\n          imageData={imageData",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/segmentation/SegmentationEditorV2.tsx",
        "start": 181,
        "end": 198,
        "startLoc": {
          "line": 181,
          "column": 9,
          "position": 1336
        },
        "endLoc": {
          "line": 198,
          "column": 10,
          "position": 1440
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/SegmentationPage.tsx",
        "start": 211,
        "end": 229,
        "startLoc": {
          "line": 211,
          "column": 9,
          "position": 1756
        },
        "endLoc": {
          "line": 229,
          "column": 12,
          "position": 1882
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "mockGet.mockImplementation((url) => {\n    if (url.includes('/queue-status/project-123')) {\n      return Promise.resolve({\n        data: {\n          queueLength: 1,\n          runningTasks: ['task-1'],\n          queuedTasks: ['task-2'],\n          processingImages: [{ id: 'task-1', name: 'Image 1', projectId: 'project-123' }],\n        },\n      });\n    } else if (url.includes('/queue-status')) {\n      return Promise.resolve({\n        data: {\n          queueLength: 2,\n          runningTasks: ['task-1', 'task-3'],\n          queuedTasks: ['task-2', 'task-4'],\n          processingImages: [\n            { id: 'task-1', name: 'Image 1', projectId: 'project-123' },\n            { id: 'task-3', name: 'Image 3', projectId: 'project-456' },\n          ],\n        },\n      });\n    }\n    return Promise.reject(new Error('Not found'));\n  });\n}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/lib/__mocks__/apiClient.ts",
        "start": 46,
        "end": 71,
        "startLoc": {
          "line": 46,
          "column": 3,
          "position": 400
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 656
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/lib/__mocks__/apiClient.ts",
        "start": 11,
        "end": 37,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 84
        },
        "endLoc": {
          "line": 37,
          "column": 19,
          "position": 340
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ")} {...field} value={field.value ?? ''} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            {/* Title Field */}\n            <FormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t('profile.title'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/settings/UserProfileSection.tsx",
        "start": 198,
        "end": 210,
        "startLoc": {
          "line": 198,
          "column": 30,
          "position": 1993
        },
        "endLoc": {
          "line": 210,
          "column": 16,
          "position": 2079
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/settings/UserProfileSection.tsx",
        "start": 184,
        "end": 196,
        "startLoc": {
          "line": 184,
          "column": 30,
          "position": 1887
        },
        "endLoc": {
          "line": 196,
          "column": 19,
          "position": 1973
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ")} {...field} value={field.value ?? ''} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            {/* Organization Field */}\n            <FormField\n              control={form.control}\n              name=\"organization\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t('profile.organization'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/settings/UserProfileSection.tsx",
        "start": 212,
        "end": 224,
        "startLoc": {
          "line": 212,
          "column": 27,
          "position": 2099
        },
        "endLoc": {
          "line": 224,
          "column": 23,
          "position": 2185
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/settings/UserProfileSection.tsx",
        "start": 184,
        "end": 196,
        "startLoc": {
          "line": 184,
          "column": 30,
          "position": 1887
        },
        "endLoc": {
          "line": 196,
          "column": 19,
          "position": 1973
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ")} {...field} value={field.value ?? ''} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            {/* Bio Field */}\n            <FormField\n              control={form.control}\n              name=\"bio\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t('profile.bio'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/settings/UserProfileSection.tsx",
        "start": 226,
        "end": 238,
        "startLoc": {
          "line": 226,
          "column": 34,
          "position": 2205
        },
        "endLoc": {
          "line": 238,
          "column": 14,
          "position": 2291
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/settings/UserProfileSection.tsx",
        "start": 184,
        "end": 196,
        "startLoc": {
          "line": 184,
          "column": 30,
          "position": 1887
        },
        "endLoc": {
          "line": 196,
          "column": 19,
          "position": 1973
        }
      }
    },
    {
      "format": "tsx",
      "lines": 69,
      "fragment": ">\n\n            <Separator />\n\n            <div>\n              <h3 className=\"text-sm font-medium mb-2\">{t('share.sharedWith') || 'Shared with'}</h3>\n\n              {isLoadingShares ? (\n                <div className=\"flex justify-center py-4\">\n                  <Loader2 className=\"h-5 w-5 animate-spin text-muted-foreground\" />\n                </div>\n              ) : sharedUsers.length > 0 ? (\n                <div className=\"border rounded-md max-h-48 overflow-y-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>{t('share.email') || 'Email'}</TableHead>\n                        <TableHead>{t('share.permissions') || 'Permissions'}</TableHead>\n                        <TableHead>{t('share.status') || 'Status'}</TableHead>\n                        <TableHead className=\"w-[50px]\"></TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {sharedUsers.map((user) => (\n                        <TableRow key={user.id}>\n                          <TableCell className=\"font-medium\">{user.email}</TableCell>\n                          <TableCell>\n                            {user.permission === 'view' ? (\n                              <span className=\"flex items-center\">\n                                <Eye className=\"h-3 w-3 mr-1\" />\n                                {t('share.view') || 'View'}\n                              </span>\n                            ) : (\n                              <span className=\"flex items-center\">\n                                <Edit className=\"h-3 w-3 mr-1\" />\n                                {t('share.edit') || 'Edit'}\n                              </span>\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            {user.isPending ? (\n                              <span className=\"text-amber-500 text-xs\">{t('share.pendingAcceptance') || 'Pending acceptance'}</span>\n                            ) : (\n                              <span className=\"text-green-500 text-xs\">{t('share.accepted') || 'Accepted'}</span>\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={() => handleRemoveShare(user.id, user.email)}\n                              title={t('share.removeShare') || 'Remove share'}\n                            >\n                              <Trash className=\"h-4 w-4 text-destructive\" />\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              ) : (\n                <p className=\"text-sm text-muted-foreground py-4 text-center\">\n                  {t('share.noShares') || 'This project is not shared with anyone yet'}\n                </p>\n              )}\n            </div>\n          </TabsContent>\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ShareDialog.tsx",
        "start": 407,
        "end": 475,
        "startLoc": {
          "line": 407,
          "column": 4,
          "position": 3676
        },
        "endLoc": {
          "line": 475,
          "column": 3,
          "position": 4271
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ShareDialog.tsx",
        "start": 261,
        "end": 330,
        "startLoc": {
          "line": 261,
          "column": 5,
          "position": 2488
        },
        "endLoc": {
          "line": 330,
          "column": 2,
          "position": 3085
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const normalizeQueueStatusData = (rawData: any) => {\n            // Získáme vlastní data z odpovědi (může být v data.data nebo přímo v data)\n            const responseData = rawData.data || rawData;\n\n            // Kontrola zda obsahuje runningTasks nebo aktivní úlohy\n            const running = responseData.runningTasks || responseData.activeTasks || [];\n\n            // Kontrola zda obsahuje queuedTasks, pendingTasks, nebo queuedImages\n            const queued = responseData.queuedTasks || responseData.pendingTasks || [];\n\n            // Zachováme originální pendingTasks, pokud existují",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/SegmentationProgress.tsx",
        "start": 410,
        "end": 420,
        "startLoc": {
          "line": 410,
          "column": 11,
          "position": 3244
        },
        "endLoc": {
          "line": 420,
          "column": 53,
          "position": 3336
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/SegmentationProgress.tsx",
        "start": 177,
        "end": 187,
        "startLoc": {
          "line": 177,
          "column": 9,
          "position": 1483
        },
        "endLoc": {
          "line": 187,
          "column": 53,
          "position": 1575
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "|| [];\n\n            // Pokud máme běžící úlohy, ale nemáme žádné processingImages, vytvoříme zástupné položky\n            const enhancedProcessingImages =\n              running.length > 0 && processingImages.length === 0\n                ? running.map((taskId: string) => ({\n                    id: taskId,\n                    name: `Processing ${taskId.substring(0, 8)}...`,\n                    projectId: (responseData.projectId || projectId || 'unknown'),\n                  }))\n                : processingImages;\n\n            // Pokud máme čekající úlohy, ale nemáme žádné queuedImages, vytvoříme zástupné položky",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/SegmentationProgress.tsx",
        "start": 427,
        "end": 439,
        "startLoc": {
          "line": 427,
          "column": 2,
          "position": 3391
        },
        "endLoc": {
          "line": 439,
          "column": 88,
          "position": 3504
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/SegmentationProgress.tsx",
        "start": 188,
        "end": 200,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1588
        },
        "endLoc": {
          "line": 200,
          "column": 50,
          "position": 1701
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 h-4 w-4",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 95,
        "end": 106,
        "startLoc": {
          "line": 95,
          "column": 2,
          "position": 807
        },
        "endLoc": {
          "line": 106,
          "column": 63,
          "position": 870
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 69,
        "end": 80,
        "startLoc": {
          "line": 69,
          "column": 11,
          "position": 566
        },
        "endLoc": {
          "line": 80,
          "column": 13,
          "position": 629
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"mr-1 h-4 w-4\"\n            >\n              <path",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 122,
        "end": 135,
        "startLoc": {
          "line": 122,
          "column": 2,
          "position": 1003
        },
        "endLoc": {
          "line": 135,
          "column": 5,
          "position": 1073
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 69,
        "end": 82,
        "startLoc": {
          "line": 69,
          "column": 11,
          "position": 566
        },
        "endLoc": {
          "line": 82,
          "column": 5,
          "position": 636
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "&& (\n          <Button variant=\"outline\" size=\"sm\" className=\"flex items-center h-9\" onClick={handleExport}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"mr-1 h-4 w-4\"\n            >\n              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\" />\n              <polyline points=\"7 10 12 15 17 10",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 144,
        "end": 159,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 1161
        },
        "endLoc": {
          "line": 159,
          "column": 17,
          "position": 1279
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 121,
        "end": 136,
        "startLoc": {
          "line": 121,
          "column": 2,
          "position": 972
        },
        "endLoc": {
          "line": 136,
          "column": 14,
          "position": 1090
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "\"\n            onClick={() => setViewMode('grid')}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"lucide lucide-grid-2x2",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 210,
        "end": 223,
        "startLoc": {
          "line": 210,
          "column": 26,
          "position": 1801
        },
        "endLoc": {
          "line": 223,
          "column": 23,
          "position": 1880
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 67,
        "end": 80,
        "startLoc": {
          "line": 67,
          "column": 22,
          "position": 558
        },
        "endLoc": {
          "line": 80,
          "column": 13,
          "position": 629
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "\"\n            onClick={() => setViewMode('list')}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"lucide lucide-list",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 233,
        "end": 246,
        "startLoc": {
          "line": 233,
          "column": 26,
          "position": 1986
        },
        "endLoc": {
          "line": 246,
          "column": 19,
          "position": 2065
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 67,
        "end": 80,
        "startLoc": {
          "line": 67,
          "column": 22,
          "position": 558
        },
        "endLoc": {
          "line": 80,
          "column": 13,
          "position": 629
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "e.preventDefault();\n          return;\n        }\n\n        try {\n          // Only try direct URL once, and only if we're not already showing fallback\n          if (!triedDirectUrl && thumbnailUrl && !thumbnailUrl.startsWith('blob:')) {\n            setTriedDirectUrl(true);\n\n            const backendUrl = import.meta.env.VITE_API_URL || 'http://localhost:5001';\n            const thumbnailPath =\n              thumbnailUrl && thumbnailUrl.includes('uploads/')\n                ? thumbnailUrl.substring(thumbnailUrl.indexOf('uploads/') + 8)\n                : thumbnailUrl || '';\n\n            // Only try backendUrl if thumbnailPath is valid\n            if (thumbnailPath && thumbnailPath.length > 0) {\n              const directPath = `${backendUrl}/uploads/${thumbnailPath}`;\n              e.currentTarget.src = directPath;\n              return;\n            }\n          }\n        } catch (err) {\n          console",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectThumbnail.tsx",
        "start": 31,
        "end": 54,
        "startLoc": {
          "line": 31,
          "column": 11,
          "position": 243
        },
        "endLoc": {
          "line": 54,
          "column": 8,
          "position": 441
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/SegmentationThumbnail.tsx",
        "start": 388,
        "end": 411,
        "startLoc": {
          "line": 388,
          "column": 7,
          "position": 3470
        },
        "endLoc": {
          "line": 411,
          "column": 8,
          "position": 3668
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ">\n        {localImages.map((image) => {\n          // Ensure each image has a valid ID for the key prop\n          const imageId = image.id || `img-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n\n          // Log any images without IDs for debugging\n          if (!image.id) {\n            console.warn('Image missing ID in ProjectImages list view:'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectImages.tsx",
        "start": 194,
        "end": 201,
        "startLoc": {
          "line": 194,
          "column": 7,
          "position": 1716
        },
        "endLoc": {
          "line": 201,
          "column": 47,
          "position": 1801
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectImages.tsx",
        "start": 156,
        "end": 163,
        "startLoc": {
          "line": 156,
          "column": 9,
          "position": 1405
        },
        "endLoc": {
          "line": 163,
          "column": 47,
          "position": 1490
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ", image);\n          }\n\n          return (\n            <ImageDisplay\n              key={imageId}\n              image={{ ...image, id: imageId }} // Ensure image has an ID\n              onDelete={onDelete}\n              onOpen={selectionMode ? undefined : onOpen}\n              onResegment={handleResegment}\n              selectionMode={selectionMode}\n              isSelected={!!selectedImages[imageId]}\n              onToggleSelection={(event) => onToggleSelection?.(imageId, event)}\n              viewMode=\"list\"",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectImages.tsx",
        "start": 201,
        "end": 214,
        "startLoc": {
          "line": 201,
          "column": 47,
          "position": 1802
        },
        "endLoc": {
          "line": 214,
          "column": 7,
          "position": 1920
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectImages.tsx",
        "start": 163,
        "end": 176,
        "startLoc": {
          "line": 163,
          "column": 47,
          "position": 1491
        },
        "endLoc": {
          "line": 176,
          "column": 7,
          "position": 1609
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ";\n      if (axios.isAxiosError(error) && error.response) {\n        message = error.response.data?.message || message;\n      } else if (error instanceof Error) {\n        message = error.message;\n      }\n      toast.error(message);\n      setLoadingStatus",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectImageProcessor.tsx",
        "start": 83,
        "end": 90,
        "startLoc": {
          "line": 83,
          "column": 25,
          "position": 850
        },
        "endLoc": {
          "line": 90,
          "column": 17,
          "position": 931
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectImageProcessor.tsx",
        "start": 45,
        "end": 52,
        "startLoc": {
          "line": 45,
          "column": 32,
          "position": 489
        },
        "endLoc": {
          "line": 52,
          "column": 15,
          "position": 570
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "const { projectImagesCache } = await import('@/api/projectImages');\n\n                        // Update cache for both key formats\n                        [cleanProjectId, cleanProjectId].forEach((cacheKey) => {\n                          if (projectImagesCache && projectImagesCache[cacheKey]) {\n                            projectImagesCache[cacheKey].data = projectImagesCache[cacheKey].data.filter(\n                              (img: any) => img.id !== imageId,\n                            );\n                            console.log(`Updated cache for project ${cacheKey}`);\n                          }\n                        });\n                      } catch (cacheError) {\n                        console.error('Error updating image cache:', cacheError);\n                      }\n                    }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectImageActions.tsx",
        "start": 163,
        "end": 177,
        "startLoc": {
          "line": 163,
          "column": 25,
          "position": 1485
        },
        "endLoc": {
          "line": 177,
          "column": 2,
          "position": 1632
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectImageActions.tsx",
        "start": 75,
        "end": 90,
        "startLoc": {
          "line": 75,
          "column": 25,
          "position": 763
        },
        "endLoc": {
          "line": 90,
          "column": 55,
          "position": 911
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ");\n\n          // Vrátíme status na původní\n          try {\n            onImagesChange(\n              images.map((img: ProjectImage) => {\n                if (img.id === imageId) {\n                  return {\n                    ...img,\n                    segmentationStatus: 'pending' as ImageStatus,\n                  }; // Reset to pending or original status\n                }\n                return img;\n              }),\n            );\n          } catch (error) {\n            console.warn('Failed to update images with onImagesChange:', error);\n          }\n          throw new",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ProjectImageActions.tsx",
        "start": 560,
        "end": 578,
        "startLoc": {
          "line": 560,
          "column": 35,
          "position": 4677
        },
        "endLoc": {
          "line": 578,
          "column": 4,
          "position": 4798
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectImageActions.tsx",
        "start": 536,
        "end": 554,
        "startLoc": {
          "line": 536,
          "column": 67,
          "position": 4522
        },
        "endLoc": {
          "line": 554,
          "column": 10,
          "position": 4643
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "}>\n            <span className=\"font-medium\">{t('common.error')}:</span> {image.error.substring(0, 50)}\n            {image.error.length > 50 ? '...' : ''}\n          </div>\n        )}\n      </div>\n\n      {/* Selection checkbox or actions */}\n      <div className=\"flex-shrink-0\" onClick={(e) => e.stopPropagation()}>\n        {selectionMode ? (\n          <input\n            type=\"checkbox\"\n            checked={isSelected}\n            onChange={(e) => onToggleSelection?.(e.nativeEvent)}\n            className=\"h-5 w-5 rounded border-gray-300\"\n          />\n        ) : (\n          <ImageListActions onDelete={() => onDelete(image.id)} onResegment={() => onResegment(image.id)}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ImageDisplay.tsx",
        "start": 537,
        "end": 554,
        "startLoc": {
          "line": 537,
          "column": 6,
          "position": 4699
        },
        "endLoc": {
          "line": 554,
          "column": 2,
          "position": 4895
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ImageDisplay.tsx",
        "start": 388,
        "end": 418,
        "startLoc": {
          "line": 388,
          "column": 2,
          "position": 3422
        },
        "endLoc": {
          "line": 418,
          "column": 2,
          "position": 3662
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ",\n        isSelected ? 'ring-2 ring-blue-500' : '',\n        className,\n      )}\n      onClick={(e) => {\n        if (selectionMode) {\n          onToggleSelection?.(e);\n        } else if (onOpen) {\n          onOpen(image.id);\n        }\n      }}\n    >\n      {/* Thumbnail with segmentation overlay for completed images */",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ImageDisplay.tsx",
        "start": 488,
        "end": 500,
        "startLoc": {
          "line": 488,
          "column": 151,
          "position": 4260
        },
        "endLoc": {
          "line": 500,
          "column": 63,
          "position": 4346
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ImageDisplay.tsx",
        "start": 393,
        "end": 405,
        "startLoc": {
          "line": 393,
          "column": 101,
          "position": 3441
        },
        "endLoc": {
          "line": 405,
          "column": 36,
          "position": 3527
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ")}</p>\n        {currentStatus === 'failed' && image.error && (\n          <div className=\"mt-1 text-xs text-red-500 truncate\" title={image.error}>\n            <span className=\"font-medium\">{t('common.error')}:</span> {image.error.substring(0, 50)}\n            {image.error.length > 50 ? '...' : ''}\n          </div>\n        )}\n      </div>\n\n      {",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ImageDisplay.tsx",
        "start": 535,
        "end": 544,
        "startLoc": {
          "line": 535,
          "column": 3,
          "position": 4659
        },
        "endLoc": {
          "line": 544,
          "column": 2,
          "position": 4774
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ImageDisplay.tsx",
        "start": 464,
        "end": 473,
        "startLoc": {
          "line": 464,
          "column": 15,
          "position": 4028
        },
        "endLoc": {
          "line": 473,
          "column": 3,
          "position": 4144
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": "\"\n          size=\"icon\"\n          className=\"h-7 w-7\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onResegment();\n          }}\n          title=\"Opětovná segmentace\"\n        >\n          <RefreshCcw className=\"h-4 w-4\" />\n        </Button>\n      )}\n      <Button\n        variant=\"destructive\"\n        size=\"icon\"\n        className=\"h-7 w-7\"\n        onClick={(e) => {\n          e.stopPropagation();\n          onDelete();\n        }}\n        title=\"Smazat obrázek\"\n      >\n        <Trash2 className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default ImageActions",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/project/ImageActions.tsx",
        "start": 15,
        "end": 43,
        "startLoc": {
          "line": 15,
          "column": 5,
          "position": 129
        },
        "endLoc": {
          "line": 43,
          "column": 13,
          "position": 286
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ImageListActions.tsx",
        "start": 15,
        "end": 43,
        "startLoc": {
          "line": 15,
          "column": 8,
          "position": 129
        },
        "endLoc": {
          "line": 43,
          "column": 17,
          "position": 286
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ", async () => {\n    renderComponent();\n\n    // Wait for projects to load\n    await waitFor(() => {\n      expect(apiClient.get).toHaveBeenCalledWith('/projects?limit=1000');\n    });\n\n    // Create a mock file\n    const file = new File(['test'], 'test-image.jpg', { type: 'image/jpeg' });\n\n    // Simulate file drop",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/__tests__/ImageUploaderTest.tsx",
        "start": 105,
        "end": 116,
        "startLoc": {
          "line": 105,
          "column": 22,
          "position": 785
        },
        "endLoc": {
          "line": 116,
          "column": 22,
          "position": 873
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/__tests__/ImageUploaderTest.tsx",
        "start": 85,
        "end": 96,
        "startLoc": {
          "line": 85,
          "column": 25,
          "position": 645
        },
        "endLoc": {
          "line": 96,
          "column": 66,
          "position": 733
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ");\n\n      // Construct snapshot path\n      const snapshotPath = path.join(visualConfig.snapshotsDir, `${name}.png`);\n\n      // If snapshot doesn't exist yet, save it\n      if (!fs.existsSync(snapshotPath) && process.env.UPDATE_VISUAL_SNAPSHOTS) {\n        fs.writeFileSync(snapshotPath, screenshot);\n        console.log(`Created new snapshot: ${name}`);\n        return;\n      }\n\n      // Compare with existing snapshot\n      expect(screenshot).toMatchImageSnapshot({\n        customSnapshotIdentifier: name,\n        customSnapshotsDir: visualConfig.snapshotsDir,\n        ...visualConfig.comparisonOptions,\n      });\n    };\n\n    await",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/__tests__/visual-regression/setupVisualRegression.ts",
        "start": 69,
        "end": 89,
        "startLoc": {
          "line": 69,
          "column": 8,
          "position": 542
        },
        "endLoc": {
          "line": 89,
          "column": 6,
          "position": 680
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/__tests__/visual-regression/setupVisualRegression.ts",
        "start": 42,
        "end": 62,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 308
        },
        "endLoc": {
          "line": 62,
          "column": 46,
          "position": 446
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "[\n    {\n      points: [\n        { x: 100, y: 100 },\n        { x: 200, y: 100 },\n        { x: 200, y: 200 },\n        { x: 100, y: 200 },\n      ],\n      closed: true,\n      color: '#FF0000',\n    },\n    {\n      points: [\n        { x: 300, y: 300 },\n        { x: 400, y: 300 },\n        { x: 350, y: 400 },\n      ],\n      closed: true,\n      color: '#00FF00',\n    },\n    {",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/__tests__/fixtures/polygonFixtures.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 745
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 929
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/__tests__/visual-regression/segmentation.visual.spec.ts",
        "start": 69,
        "end": 89,
        "startLoc": {
          "line": 69,
          "column": 2,
          "position": 528
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 712
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", {\n            ip: req.ip,\n            path: req.path,\n            method: req.method,\n            userId: (req as any).user?.userId,\n          });\n          res.status(429).json(options.message);\n          res.set('Retry-After', '3600'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/security/middleware/rateLimitMiddleware.ts",
        "start": 91,
        "end": 98,
        "startLoc": {
          "line": 91,
          "column": 42,
          "position": 841
        },
        "endLoc": {
          "line": 98,
          "column": 7,
          "position": 919
        }
      },
      "secondFile": {
        "name": "packages/backend/src/security/middleware/rateLimitMiddleware.ts",
        "start": 68,
        "end": 75,
        "startLoc": {
          "line": 68,
          "column": 27,
          "position": 620
        },
        "endLoc": {
          "line": 75,
          "column": 6,
          "position": 698
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "message: {\n          error: {\n            message: 'Too many requests, please try again later',\n            timestamp: new Date().toISOString(),\n          },\n        },\n        handler: (req: Request, res: Response, _next: NextFunction, options: any) => {\n          logger.warn('Rate limit exceeded'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/security/middleware/rateLimitMiddleware.ts",
        "start": 107,
        "end": 114,
        "startLoc": {
          "line": 107,
          "column": 9,
          "position": 982
        },
        "endLoc": {
          "line": 114,
          "column": 22,
          "position": 1061
        }
      },
      "secondFile": {
        "name": "packages/backend/src/security/middleware/rateLimitMiddleware.ts",
        "start": 61,
        "end": 68,
        "startLoc": {
          "line": 61,
          "column": 9,
          "position": 540
        },
        "endLoc": {
          "line": 68,
          "column": 27,
          "position": 619
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n            ip: req.ip,\n            path: req.path,\n            method: req.method,\n            userId: (req as any).user?.userId,\n          });\n          res.status(429).json(options.message);\n          res.set('Retry-After', '900'); // 15 minutes in seconds\n        },\n      };\n      break;\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/security/middleware/rateLimitMiddleware.ts",
        "start": 114,
        "end": 125,
        "startLoc": {
          "line": 114,
          "column": 22,
          "position": 1062
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 1159
        }
      },
      "secondFile": {
        "name": "packages/backend/src/security/middleware/rateLimitMiddleware.ts",
        "start": 68,
        "end": 79,
        "startLoc": {
          "line": 68,
          "column": 27,
          "position": 620
        },
        "endLoc": {
          "line": 79,
          "column": 5,
          "position": 717
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": NextFunction, options: any) => {\n    logger.warn('Sensitive operation rate limit exceeded', {\n      ip: req.ip,\n      path: req.path,\n      method: req.method,\n      userId: (req as any).user?.userId,\n    });\n    res.status(options",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/security/middleware/rateLimitMiddleware.ts",
        "start": 188,
        "end": 195,
        "startLoc": {
          "line": 188,
          "column": 5,
          "position": 1732
        },
        "endLoc": {
          "line": 195,
          "column": 8,
          "position": 1812
        }
      },
      "secondFile": {
        "name": "packages/backend/src/security/middleware/rateLimitMiddleware.ts",
        "start": 90,
        "end": 97,
        "startLoc": {
          "line": 90,
          "column": 6,
          "position": 820
        },
        "endLoc": {
          "line": 97,
          "column": 4,
          "position": 900
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "= async (\n  req: AuthenticatedRequest,\n  res: Response,\n  next: NextFunction\n): Promise<void> => {\n  if (!req.user) {\n    return res.status(401).json({\n      success: false,\n      message: 'Authentication required',\n      error: 'NOT_AUTHENTICATED'\n    });\n  }\n\n  try {\n    // Check approval status from database",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/security/middleware/auth.ts",
        "start": 236,
        "end": 250,
        "startLoc": {
          "line": 236,
          "column": 2,
          "position": 1554
        },
        "endLoc": {
          "line": 250,
          "column": 39,
          "position": 1653
        }
      },
      "secondFile": {
        "name": "packages/backend/src/security/middleware/auth.ts",
        "start": 171,
        "end": 185,
        "startLoc": {
          "line": 171,
          "column": 2,
          "position": 1093
        },
        "endLoc": {
          "line": 185,
          "column": 49,
          "position": 1193
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "async (\n    req: AuthenticatedRequest,\n    res: Response,\n    next: NextFunction\n  ): Promise<void> => {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        message: 'Authentication required',\n        error: 'NOT_AUTHENTICATED'\n      });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/security/middleware/auth.ts",
        "start": 301,
        "end": 314,
        "startLoc": {
          "line": 301,
          "column": 2,
          "position": 2017
        },
        "endLoc": {
          "line": 314,
          "column": 6,
          "position": 2110
        }
      },
      "secondFile": {
        "name": "packages/backend/src/security/middleware/auth.ts",
        "start": 171,
        "end": 184,
        "startLoc": {
          "line": 171,
          "column": 2,
          "position": 1095
        },
        "endLoc": {
          "line": 184,
          "column": 4,
          "position": 1188
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(`[${namespace}] ${message}`, ...args);\n\n      // If first arg is an error object, extract stack trace\n      const errorData =\n        args[0] instanceof Error\n          ? {\n              message: args[0].message,\n              stack: args[0].stack,\n              name: args[0].name,\n            }\n          : args[0];\n\n      const entry = createLogEntry(LogLevel.WARN",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/utils/logger.ts",
        "start": 112,
        "end": 124,
        "startLoc": {
          "line": 112,
          "column": 5,
          "position": 729
        },
        "endLoc": {
          "line": 124,
          "column": 5,
          "position": 832
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/utils/logger.ts",
        "start": 95,
        "end": 107,
        "startLoc": {
          "line": 95,
          "column": 5,
          "position": 566
        },
        "endLoc": {
          "line": 107,
          "column": 5,
          "position": 669
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(`[${namespace}] ${message}`, ...args);\n\n      // If first arg is an error object, extract stack trace\n      const errorData =\n        args[0] instanceof Error\n          ? {\n              message: args[0].message,\n              stack: args[0].stack,\n              name: args[0].name,\n            }\n          : args[0];\n\n      const entry = createLogEntry(LogLevel.ERROR",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/utils/logger.ts",
        "start": 129,
        "end": 141,
        "startLoc": {
          "line": 129,
          "column": 6,
          "position": 892
        },
        "endLoc": {
          "line": 141,
          "column": 6,
          "position": 995
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/utils/logger.ts",
        "start": 95,
        "end": 107,
        "startLoc": {
          "line": 95,
          "column": 5,
          "position": 566
        },
        "endLoc": {
          "line": 107,
          "column": 5,
          "position": 669
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";\n\n    img.onload = () => {\n      resolve({\n        width: img.naturalWidth,\n        height: img.naturalHeight,\n      });\n    };\n\n    img.onerror = () => {\n      console.error(`Failed to load image from ${url}`);\n      resolve(null);\n    };\n\n    img.src = url;\n  });\n};\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/utils/imageUtils.ts",
        "start": 34,
        "end": 52,
        "startLoc": {
          "line": 34,
          "column": 12,
          "position": 259
        },
        "endLoc": {
          "line": 52,
          "column": 7,
          "position": 367
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/utils/imageLoader.ts",
        "start": 64,
        "end": 86,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 523
        },
        "endLoc": {
          "line": 86,
          "column": 4,
          "position": 631
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= async (url: string): Promise<boolean> => {\n  try {\n    const response = await fetch(url, {\n      method: 'HEAD',\n      cache: 'no-cache',\n      headers: {\n        'Cache-Control': 'no-cache',\n        Pragma: 'no-cache',\n      },\n    });\n    return response.ok;\n  } catch (error) {\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/utils/imageLoader.ts",
        "start": 60,
        "end": 72,
        "startLoc": {
          "line": 60,
          "column": 2,
          "position": 299
        },
        "endLoc": {
          "line": 72,
          "column": 7,
          "position": 404
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/utils/imageUtils.ts",
        "start": 14,
        "end": 26,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 45
        },
        "endLoc": {
          "line": 26,
          "column": 8,
          "position": 150
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= (): string | null => {\n  try {\n    if (typeof window === 'undefined' || !document.cookie) return null;\n\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.startsWith('refresh_token='",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/services/authService.ts",
        "start": 116,
        "end": 123,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 814
        },
        "endLoc": {
          "line": 123,
          "column": 17,
          "position": 931
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/services/authService.ts",
        "start": 28,
        "end": 35,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 147
        },
        "endLoc": {
          "line": 35,
          "column": 14,
          "position": 264
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const domain = window.location.hostname === 'localhost' ? 'localhost' : window.location.hostname;\n    const sameSiteValue = process.env.NODE_ENV === 'production' ? 'lax' : 'lax';\n    const secure = window.location.protocol === 'https:' ? '; secure' : '';\n\n    document.cookie = `auth_token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT; domain=${domain}; samesite=${sameSiteValue}${secure}`;\n    document",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/services/authService.ts",
        "start": 202,
        "end": 207,
        "startLoc": {
          "line": 202,
          "column": 5,
          "position": 1422
        },
        "endLoc": {
          "line": 207,
          "column": 9,
          "position": 1526
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/services/authService.ts",
        "start": 83,
        "end": 87,
        "startLoc": {
          "line": 83,
          "column": 11,
          "position": 563
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 666
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "headers: {\n              'Content-Type': 'application/json',\n            },\n            // Je důležité mít withCredentials: true pro správné předávání cookies\n            withCredentials: true,\n          });\n\n          // Update tokens in localStorage\n          const { accessToken, refreshToken } = response.data;\n          setTokens(accessToken, refreshToken);\n\n          // Set up cookie as well\n          document.cookie = `auth_token=${accessToken}; path=/; samesite=strict; max-age=3600`;\n\n          logger.info('[authService] Development mode login successful');\n          return true;\n        } finally {\n          clearTimeout(timeoutId);\n        }\n      } catch (devError) {\n        logger.error('[authService] Failed to perform development login:', devError);\n        return false;\n      }\n    }\n\n    return false;\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/services/authService.ts",
        "start": 460,
        "end": 487,
        "startLoc": {
          "line": 460,
          "column": 13,
          "position": 3418
        },
        "endLoc": {
          "line": 487,
          "column": 2,
          "position": 3578
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/services/authService.ts",
        "start": 366,
        "end": 394,
        "startLoc": {
          "line": 366,
          "column": 13,
          "position": 2730
        },
        "endLoc": {
          "line": 394,
          "column": 4,
          "position": 2892
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "t('auth.passwordPlaceholder')}\n                        {...field}\n                        className=\"h-10 bg-gray-50 dark:bg-gray-700/50 border-gray-300 dark:border-gray-600 rounded-md\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"agreeTerms\"\n                render={({ field }) => (\n                  <FormItem ",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/SignUp.tsx",
        "start": 287,
        "end": 300,
        "startLoc": {
          "line": 287,
          "column": 2,
          "position": 2471
        },
        "endLoc": {
          "line": 300,
          "column": 2,
          "position": 2541
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/SignUp.tsx",
        "start": 268,
        "end": 281,
        "startLoc": {
          "line": 268,
          "column": 2,
          "position": 2357
        },
        "endLoc": {
          "line": 281,
          "column": 2,
          "position": 2427
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ">\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative min-h-screen flex flex-col items-center justify-center p-4 bg-gradient-to-br from-blue-100 via-purple-100 to-pink-100 dark:from-gray-800 dark:via-gray-900 dark:to-black\">\n      {/* Header Buttons - Positioned Absolutely */}\n      <div className=\"absolute top-4 left-4\">\n        <BackButton />\n      </div>\n      <div className=\"absolute top-4 right-4\">\n        <LanguageSwitcher />\n      </div>\n\n      {/* Main Content Card - Centered */}\n      <div",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/SignIn.tsx",
        "start": 90,
        "end": 107,
        "startLoc": {
          "line": 90,
          "column": 7,
          "position": 974
        },
        "endLoc": {
          "line": 107,
          "column": 4,
          "position": 1067
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/SignUp.tsx",
        "start": 145,
        "end": 162,
        "startLoc": {
          "line": 145,
          "column": 5,
          "position": 1477
        },
        "endLoc": {
          "line": 162,
          "column": 5,
          "position": 1570
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ")}\n              </Button>\n            </Link>\n            <Link to=\"/request-access\">\n              <Button variant=\"outline\" className=\"w-full h-10 text-base rounded-md\">\n                {t('auth.requestAccess')}\n              </Button>\n            </Link>\n            <p className=\"text-center text-sm text-gray-600 mt-3",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/SignIn.tsx",
        "start": 189,
        "end": 197,
        "startLoc": {
          "line": 189,
          "column": 14,
          "position": 1727
        },
        "endLoc": {
          "line": 197,
          "column": 39,
          "position": 1793
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/SignUp.tsx",
        "start": 362,
        "end": 370,
        "startLoc": {
          "line": 362,
          "column": 14,
          "position": 2981
        },
        "endLoc": {
          "line": 370,
          "column": 58,
          "position": 3047
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "\">\n              {t('auth.termsAndPrivacy')}{' '}\n              <Link\n                to=\"/terms-of-service\"\n                className=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300 transition-colors\"\n              >\n                {t('common.termsOfService')}\n              </Link>{' '}\n              {t('requestAccess.and')}{' '}\n              <Link\n                to=\"/privacy-policy\"\n                className=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300 transition-colors\"\n              >\n                {t('common.privacyPolicy')}\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/SignIn.tsx",
        "start": 197,
        "end": 215,
        "startLoc": {
          "line": 197,
          "column": 39,
          "position": 1794
        },
        "endLoc": {
          "line": 215,
          "column": 4,
          "position": 1901
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/SignUp.tsx",
        "start": 370,
        "end": 388,
        "startLoc": {
          "line": 370,
          "column": 58,
          "position": 3048
        },
        "endLoc": {
          "line": 388,
          "column": 5,
          "position": 3155
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "return (\n    <div className=\"relative min-h-screen flex flex-col items-center justify-center p-4 bg-gradient-to-br from-blue-100 via-purple-100 to-pink-100 dark:from-gray-800 dark:via-gray-900 dark:to-black\">\n      {/* Header Buttons - Positioned Absolutely */}\n      <div className=\"absolute top-4 left-4\">\n        <BackButton />\n      </div>\n      <div className=\"absolute top-4 right-4\">\n        <LanguageSwitcher />\n      </div>\n\n      {/* Main Content Card - Centered */}\n      <Card className=\"w-full max-w-md shadow-xl bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm border-gray-200 dark:border-gray-700/50 rounded-lg overflow-hidden\">\n        {",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/RequestAccess.tsx",
        "start": 93,
        "end": 105,
        "startLoc": {
          "line": 93,
          "column": 3,
          "position": 991
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 1073
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/SignUp.tsx",
        "start": 151,
        "end": 163,
        "startLoc": {
          "line": 151,
          "column": 3,
          "position": 1498
        },
        "endLoc": {
          "line": 163,
          "column": 2,
          "position": 1580
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "</CardContent>\n\n        <div className=\"p-6 bg-gray-50 dark:bg-gray-800/50 border-t border-gray-100 dark:border-gray-700/50\">\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-300 dark:border-gray-700\"></div>\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-4 bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400\">\n                {t('auth.alreadyHaveAccess'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/RequestAccess.tsx",
        "start": 240,
        "end": 249,
        "startLoc": {
          "line": 240,
          "column": 9,
          "position": 2262
        },
        "endLoc": {
          "line": 249,
          "column": 25,
          "position": 2345
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/SignUp.tsx",
        "start": 346,
        "end": 354,
        "startLoc": {
          "line": 346,
          "column": 9,
          "position": 2835
        },
        "endLoc": {
          "line": 354,
          "column": 26,
          "position": 2917
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ")}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"mt-6 flex flex-col gap-3\">\n            <Link to=\"/sign-in\">\n              <Button variant=\"outline\" className=\"w-full h-10 text-base rounded-md\">\n                {t('auth.signIn')}\n              </Button>\n            </Link>\n            <Link to=\"/sign-up",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/RequestAccess.tsx",
        "start": 249,
        "end": 260,
        "startLoc": {
          "line": 249,
          "column": 25,
          "position": 2346
        },
        "endLoc": {
          "line": 260,
          "column": 9,
          "position": 2429
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/SignUp.tsx",
        "start": 354,
        "end": 365,
        "startLoc": {
          "line": 354,
          "column": 26,
          "position": 2918
        },
        "endLoc": {
          "line": 365,
          "column": 16,
          "position": 3001
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": ")}\n              </Button>\n            </Link>\n            <p className=\"text-center text-sm text-gray-600 dark:text-gray-400 mt-3\">\n              {t('auth.termsAndPrivacy')}{' '}\n              <Link\n                to=\"/terms-of-service\"\n                className=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300 transition-colors\"\n              >\n                {t('common.termsOfService')}\n              </Link>{' '}\n              {t('requestAccess.and')}{' '}\n              <Link\n                to=\"/privacy-policy\"\n                className=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300 transition-colors\"\n              >\n                {t('common.privacyPolicy')}\n              </Link>\n            </p>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default RequestAccess",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/RequestAccess.tsx",
        "start": 262,
        "end": 288,
        "startLoc": {
          "line": 262,
          "column": 14,
          "position": 2455
        },
        "endLoc": {
          "line": 288,
          "column": 14,
          "position": 2603
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/SignUp.tsx",
        "start": 367,
        "end": 393,
        "startLoc": {
          "line": 367,
          "column": 21,
          "position": 3027
        },
        "endLoc": {
          "line": 393,
          "column": 7,
          "position": 3175
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "= () => {\n    const selectedImageIds = Object.entries(selectedImages)\n      .filter(([_, isSelected]) => isSelected)\n      .map(([id]) => id);\n\n    if (selectedImageIds.length === 0) {\n      toast.error(t('project.detail.noImagesSelected'));\n      return;\n    }\n\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/ProjectDetail.tsx",
        "start": 487,
        "end": 497,
        "startLoc": {
          "line": 487,
          "column": 2,
          "position": 4262
        },
        "endLoc": {
          "line": 497,
          "column": 3,
          "position": 4356
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/ProjectDetail.tsx",
        "start": 389,
        "end": 399,
        "startLoc": {
          "line": 389,
          "column": 2,
          "position": 3324
        },
        "endLoc": {
          "line": 399,
          "column": 6,
          "position": 3418
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "= () => {\n    const selectedImageIds = Object.entries(selectedImages)\n      .filter(([_, isSelected]) => isSelected)\n      .map(([id]) => id);\n\n    if (selectedImageIds.length === 0) {\n      toast.error(t('project.detail.noImagesSelected'));\n      return;\n    }\n\n    toast.info(t('project.detail.preparingExport'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/ProjectDetail.tsx",
        "start": 554,
        "end": 564,
        "startLoc": {
          "line": 554,
          "column": 2,
          "position": 4988
        },
        "endLoc": {
          "line": 564,
          "column": 33,
          "position": 5088
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/ProjectDetail.tsx",
        "start": 389,
        "end": 399,
        "startLoc": {
          "line": 389,
          "column": 2,
          "position": 3324
        },
        "endLoc": {
          "line": 399,
          "column": 42,
          "position": 3424
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ".length, batches: batches.length }));\n        }\n\n        // Postupné zpracování všech dávek\n        let successCount = 0;\n        let failCount = 0;\n\n        for (let i = 0; i < batches.length; i++) {\n            const batch = batches[i];\n            logger.debug(`Zpracování dávky ${i+1}/${batches.length} s ${batch.length} obrázky`);\n\n            // Přidáme krátké zpoždění mezi dávkami, aby se server nezahltil\n            if (i > 0) {\n              await new Promise(resolve => setTimeout(resolve, 1000));\n            }\n\n            try {\n                const response = await apiClient.post(`/api/segmentations/batch`, {\n                    imageIds: batch,\n                    priority: 3",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/ProjectDetail.tsx",
        "start": 625,
        "end": 644,
        "startLoc": {
          "line": 625,
          "column": 24,
          "position": 5689
        },
        "endLoc": {
          "line": 644,
          "column": 2,
          "position": 5877
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/ProjectDetail.tsx",
        "start": 424,
        "end": 443,
        "startLoc": {
          "line": 424,
          "column": 17,
          "position": 3676
        },
        "endLoc": {
          "line": 443,
          "column": 2,
          "position": 3864
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "(`Batch ${i+1}: Failed to trigger segmentation:`, error);\n                failCount += batch.length;\n\n                // Informujeme uživatele o chybě\n                if (batches.length > 1) {\n                  toast.error(t('project.segmentation.batchError', { current: i+1, total: batches.length }));\n                }\n            }\n        }\n\n        logger.info(`Celkový výsledek: ${successCount} úspěšně, ${failCount} selhalo`);\n\n        // Zobrazíme celkový výsledek\n        if (successCount > 0 && failCount > 0) {\n          toast.info(`Segmentace: ${successCount} obrázků úspěšně zařazeno do fronty, ${failCount} selhalo`);\n        } else if (successCount > 0) {\n          toast.success(`Segmentace: Všech ${successCount} obrázků úspěšně zařazeno do fronty`);\n        } else if (failCount > 0) {\n          toast.error(`Segmentace: Všech ${failCount} obrázků selhalo`);\n        }\n        apiSuccess",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/ProjectDetail.tsx",
        "start": 661,
        "end": 681,
        "startLoc": {
          "line": 661,
          "column": 5,
          "position": 6031
        },
        "endLoc": {
          "line": 681,
          "column": 11,
          "position": 6239
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/ProjectDetail.tsx",
        "start": 459,
        "end": 480,
        "startLoc": {
          "line": 459,
          "column": 6,
          "position": 4010
        },
        "endLoc": {
          "line": 480,
          "column": 31,
          "position": 4219
        }
      }
    },
    {
      "format": "javascript",
      "lines": 65,
      "fragment": "={{ animationDelay: '-2s' }}\n          />\n          <div\n            className=\"absolute top-2/3 left-1/3 w-40 h-40 bg-blue-400/20 dark:bg-blue-600/10 rounded-full filter blur-3xl animate-float\"\n            style={{ animationDelay: '-4s' }}\n          />\n        </div>\n        <div className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md\">{t('common.pleaseLogin')}</div>\n      </div>\n    );\n  }\n\n  if (!profileData) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 relative flex justify-center items-center\">\n        {/* Background elements */}\n        <div className=\"absolute inset-0 -z-10 pointer-events-none\">\n          <div className=\"absolute top-1/3 left-1/4 w-64 h-64 bg-blue-200/30 dark:bg-blue-400/10 rounded-full filter blur-3xl animate-float\" />\n          <div\n            className=\"absolute bottom-1/4 right-1/3 w-80 h-80 bg-blue-300/20 dark:bg-blue-500/10 rounded-full filter blur-3xl animate-float\"\n            style={{ animationDelay: '-2s' }}\n          />\n          <div\n            className=\"absolute top-2/3 left-1/3 w-40 h-40 bg-blue-400/20 dark:bg-blue-600/10 rounded-full filter blur-3xl animate-float\"\n            style={{ animationDelay: '-4s' }}\n          />\n        </div>\n        <div className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md text-red-500 dark:text-red-400\">\n          {t('profile.fetchError')}\n        </div>\n      </div>\n    );\n  }\n\n  const joinedDate = user.created_at ? new Date(user.created_at) : new Date();\n  const month = joinedDate.toLocaleString('default', { month: 'long' });\n  const year = joinedDate.getFullYear();\n  const formattedJoinedDate = `${month} ${year}`;\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 relative\">\n      {/* Background elements */}\n      <div className=\"absolute inset-0 -z-10 pointer-events-none\">\n        <div className=\"absolute top-1/3 left-1/4 w-64 h-64 bg-blue-200/30 dark:bg-blue-400/10 rounded-full filter blur-3xl animate-float\" />\n        <div\n          className=\"absolute bottom-1/4 right-1/3 w-80 h-80 bg-blue-300/20 dark:bg-blue-500/10 rounded-full filter blur-3xl animate-float\"\n          style={{ animationDelay: '-2s' }}\n        />\n        <div\n          className=\"absolute top-2/3 left-1/3 w-40 h-40 bg-blue-400/20 dark:bg-blue-600/10 rounded-full filter blur-3xl animate-float\"\n          style={{ animationDelay: '-4s' }}\n        />\n      </div>\n\n      <DashboardHeader />\n      <main className=\"flex-1 p-4 md:p-6 lg:p-8 relative z-10\">\n        <h1 className=\"text-2xl font-bold mb-6\">{t('profile.pageTitle')}</h1>\n        <div className=\"grid gap-8 lg:grid-cols-3\">\n          <Card className=\"lg:col-span-1\">\n            <CardContent className=\"p-6 text-center\">\n              <div className=\"relative w-24 h-24 mx-auto mb-4\">\n                <Avatar className=\"w-24 h-24 border-2 border-white dark:border-gray-800 shadow-md\">\n                  {avatarUrl || profileData.avatar_url ? (\n                    <AvatarImage\n                      src={avatarUrl ",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/Profile.tsx",
        "start": 390,
        "end": 454,
        "startLoc": {
          "line": 390,
          "column": 6,
          "position": 3300
        },
        "endLoc": {
          "line": 454,
          "column": 11,
          "position": 3819
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/Profile.tsx",
        "start": 370,
        "end": 436,
        "startLoc": {
          "line": 370,
          "column": 6,
          "position": 3168
        },
        "endLoc": {
          "line": 436,
          "column": 2,
          "position": 3665
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "interface UserProfile {\n  user_id: string;\n  username: string | null;\n  full_name: string | null;\n  title: string | null;\n  organization: string | null;\n  bio: string | null;\n  location: string | null;\n  avatar_url: string | null;\n  preferred_language: string | null;\n}\n\ninterface",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/Profile.tsx",
        "start": 20,
        "end": 32,
        "startLoc": {
          "line": 20,
          "column": 1,
          "position": 275
        },
        "endLoc": {
          "line": 32,
          "column": 10,
          "position": 379
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/Settings.tsx",
        "start": 21,
        "end": 33,
        "startLoc": {
          "line": 21,
          "column": 1,
          "position": 244
        },
        "endLoc": {
          "line": 33,
          "column": 6,
          "position": 348
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ") {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 relative flex justify-center items-center\">\n        {/* Background elements */}\n        <div className=\"absolute inset-0 -z-10 pointer-events-none\">\n          <div className=\"absolute top-1/3 left-1/4 w-64 h-64 bg-blue-200/30 dark:bg-blue-400/10 rounded-full filter blur-3xl animate-float\" />\n          <div\n            className=\"absolute bottom-1/4 right-1/3 w-80 h-80 bg-blue-300/20 dark:bg-blue-500/10 rounded-full filter blur-3xl animate-float\"\n            style={{ animationDelay: '-2s' }}\n          />\n          <div\n            className=\"absolute top-2/3 left-1/3 w-40 h-40 bg-blue-400/20 dark:bg-blue-600/10 rounded-full filter blur-3xl animate-float\"\n            style={{ animationDelay: '-4s' }}\n          />\n        </div>\n        <div",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/Profile.tsx",
        "start": 382,
        "end": 397,
        "startLoc": {
          "line": 382,
          "column": 5,
          "position": 3241
        },
        "endLoc": {
          "line": 397,
          "column": 4,
          "position": 3344
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/Profile.tsx",
        "start": 362,
        "end": 377,
        "startLoc": {
          "line": 362,
          "column": 8,
          "position": 3109
        },
        "endLoc": {
          "line": 377,
          "column": 8,
          "position": 3212
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ") {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 relative flex justify-center items-center\">\n        {/* Background elements */}\n        <div className=\"absolute inset-0 -z-10 pointer-events-none\">\n          <div className=\"absolute top-1/3 left-1/4 w-64 h-64 bg-blue-200/30 dark:bg-blue-400/10 rounded-full filter blur-3xl animate-float\" />\n          <div\n            className=\"absolute bottom-1/4 right-1/3 w-80 h-80 bg-blue-300/20 dark:bg-blue-500/10 rounded-full filter blur-3xl animate-float\"\n            style={{ animationDelay: '-2s' }}\n          />\n          <div\n            className=\"absolute top-2/3 left-1/3 w-40 h-40 bg-blue-400/20 dark:bg-blue-600/10 rounded-full filter blur-3xl animate-float\"\n            style={{ animationDelay: '-4s' }}\n          />\n        </div>\n        <div className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md text-red-500 dark:text-red-400",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/Profile.tsx",
        "start": 402,
        "end": 417,
        "startLoc": {
          "line": 402,
          "column": 12,
          "position": 3381
        },
        "endLoc": {
          "line": 417,
          "column": 82,
          "position": 3489
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/Profile.tsx",
        "start": 362,
        "end": 397,
        "startLoc": {
          "line": 362,
          "column": 8,
          "position": 3109
        },
        "endLoc": {
          "line": 397,
          "column": 51,
          "position": 3349
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "= () => {\n  const { t } = useLanguage();\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gradient-to-br from-blue-100 via-purple-100 to-pink-100 dark:from-gray-800 dark:via-gray-900 dark:to-black\">\n      <Navbar />\n      <div className=\"container mx-auto px-4 py-12 flex-1 mt-16\">\n        <div className=\"max-w-4xl mx-auto\">\n          <h1 className=\"text-3xl font-bold mb-8\">{t('privacyPage.title'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/PrivacyPolicy.tsx",
        "start": 7,
        "end": 15,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 62
        },
        "endLoc": {
          "line": 15,
          "column": 20,
          "position": 145
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/TermsOfService.tsx",
        "start": 7,
        "end": 15,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 62
        },
        "endLoc": {
          "line": 15,
          "column": 18,
          "position": 145
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "</p>\n          </div>\n\n          <div className=\"mt-8 flex justify-between\">\n            <Button variant=\"outline\" asChild>\n              <Link to=\"/\">{t('common.backToHome')}</Link>\n            </Button>\n            <Button asChild>\n              <Link to=\"/terms-of-service",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/PrivacyPolicy.tsx",
        "start": 51,
        "end": 59,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 631
        },
        "endLoc": {
          "line": 59,
          "column": 18,
          "position": 704
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/TermsOfService.tsx",
        "start": 36,
        "end": 44,
        "startLoc": {
          "line": 36,
          "column": 5,
          "position": 431
        },
        "endLoc": {
          "line": 44,
          "column": 16,
          "position": 504
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "\">\n        {/* Background elements */}\n        <div className=\"absolute inset-0 -z-10 pointer-events-none\">\n          <div className=\"absolute top-1/3 left-1/4 w-64 h-64 bg-blue-200/30 dark:bg-blue-400/10 rounded-full filter blur-3xl animate-float\" />\n          <div\n            className=\"absolute bottom-1/4 right-1/3 w-80 h-80 bg-blue-300/20 dark:bg-blue-500/10 rounded-full filter blur-3xl animate-float\"\n            style={{ animationDelay: '-2s' }}\n          />\n          <div\n            className=\"absolute top-2/3 left-1/3 w-40 h-40 bg-blue-400/20 dark:bg-blue-600/10 rounded-full filter blur-3xl animate-float\"\n            style={{ animationDelay: '-4s' }}\n          />\n        </div>\n\n        <DashboardHeader",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/Dashboard.tsx",
        "start": 112,
        "end": 126,
        "startLoc": {
          "line": 112,
          "column": 116,
          "position": 1036
        },
        "endLoc": {
          "line": 126,
          "column": 16,
          "position": 1123
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/Profile.tsx",
        "start": 364,
        "end": 377,
        "startLoc": {
          "line": 364,
          "column": 133,
          "position": 3126
        },
        "endLoc": {
          "line": 377,
          "column": 8,
          "position": 3212
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "\">\n      {/* Background elements */}\n      <div className=\"absolute inset-0 -z-10 pointer-events-none\">\n        <div className=\"absolute top-1/3 left-1/4 w-64 h-64 bg-blue-200/30 dark:bg-blue-400/10 rounded-full filter blur-3xl animate-float\" />\n        <div\n          className=\"absolute bottom-1/4 right-1/3 w-80 h-80 bg-blue-300/20 dark:bg-blue-500/10 rounded-full filter blur-3xl animate-float\"\n          style={{ animationDelay: '-2s' }}\n        />\n        <div\n          className=\"absolute top-2/3 left-1/3 w-40 h-40 bg-blue-400/20 dark:bg-blue-600/10 rounded-full filter blur-3xl animate-float\"\n          style={{ animationDelay: '-4s' }}\n        />\n      </div>\n\n      <DashboardHeader />\n\n      <div",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/pages/Dashboard.tsx",
        "start": 171,
        "end": 187,
        "startLoc": {
          "line": 171,
          "column": 116,
          "position": 1531
        },
        "endLoc": {
          "line": 187,
          "column": 4,
          "position": 1625
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/Profile.tsx",
        "start": 430,
        "end": 445,
        "startLoc": {
          "line": 430,
          "column": 114,
          "position": 3621
        },
        "endLoc": {
          "line": 445,
          "column": 5,
          "position": 3714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    const intersect = yi > point.y !== yj > point.y && point.x < ((xj - xi) * (point.y - yi)) / (yj - yi) + xi;\n\n    if (intersect) {",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/lib/svgUtils.ts",
        "start": 64,
        "end": 73,
        "startLoc": {
          "line": 64,
          "column": 3,
          "position": 434
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 627
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/utils/geometry.ts",
        "start": 7,
        "end": 16,
        "startLoc": {
          "line": 7,
          "column": 3,
          "position": 47
        },
        "endLoc": {
          "line": 16,
          "column": 7,
          "position": 240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "(async () => {\n          try {\n            let responseData: any;\n            try {\n              // First try the new endpoint\n              const response = await apiClient.get('/api/segmentation/queue-status');\n              responseData = response.data;\n            } catch (error) {\n              // If that fails, try the legacy endpoint\n              const legacyResponse = await apiClient.get('/api/segmentation/queue');\n              responseData = legacyResponse.data;\n            }\n\n            // Normalize the data structure regardless of which endpoint was used\n            const finalResponseData = responseData.data || responseData;\n\n            if (finalResponseData) {\n              const queueData: QueueStatusUpdate = {\n                pendingTasks: finalResponseData.pendingTasks || finalResponseData.queuedTasks || [],\n                runningTasks: finalResponseData.runningTasks || [],\n                queueLength: finalResponseData.queueLength || 0,\n                activeTasksCount: finalResponseData.activeTasksCount || finalResponseData.runningTasks?.length || 0,\n                timestamp: finalResponseData.timestamp || new Date().toISOString(),\n                processingImages: finalResponseData.processingImages || [],\n              };\n\n              setQueueStatus(queueData);\n\n              // Call the queue update callback if provided\n              if (onQueueUpdate) {\n                onQueueUpdate(queueData);\n              }\n            }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/hooks/useSegmentationUpdates.ts",
        "start": 176,
        "end": 208,
        "startLoc": {
          "line": 176,
          "column": 9,
          "position": 1277
        },
        "endLoc": {
          "line": 208,
          "column": 2,
          "position": 1562
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/hooks/useSegmentationUpdates.ts",
        "start": 82,
        "end": 115,
        "startLoc": {
          "line": 82,
          "column": 12,
          "position": 576
        },
        "endLoc": {
          "line": 115,
          "column": 85,
          "position": 862
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "} catch (error) {\n            console.error('Error fetching segmentation queue status:', error);\n\n            // Create empty queue status on error\n            const emptyQueueData: QueueStatusUpdate = {\n              pendingTasks: [],\n              runningTasks: [],\n              queueLength: 0,\n              activeTasksCount: 0,\n              timestamp: new Date().toISOString(),\n              processingImages: [],\n            };\n\n            setQueueStatus(emptyQueueData);\n\n            if (onQueueUpdate) {\n              onQueueUpdate(emptyQueueData);\n            }\n          }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/hooks/useSegmentationUpdates.ts",
        "start": 209,
        "end": 227,
        "startLoc": {
          "line": 209,
          "column": 11,
          "position": 1565
        },
        "endLoc": {
          "line": 227,
          "column": 2,
          "position": 1689
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/hooks/useSegmentationUpdates.ts",
        "start": 139,
        "end": 158,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1041
        },
        "endLoc": {
          "line": 158,
          "column": 7,
          "position": 1166
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n\n        if (axios.isAxiosError(err) && err.response) {\n          errorMessage = err.response.data?.message || errorMessage;\n        } else if (err instanceof Error) {\n          errorMessage = err.message;\n        }\n\n        setError(errorMessage);\n\n        if (showToasts) {\n          toast.error(errorMessage);\n        }\n\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/hooks/useProjectDuplicate.ts",
        "start": 256,
        "end": 270,
        "startLoc": {
          "line": 256,
          "column": 30,
          "position": 1335
        },
        "endLoc": {
          "line": 270,
          "column": 7,
          "position": 1439
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/hooks/useRecentActivity.ts",
        "start": 255,
        "end": 269,
        "startLoc": {
          "line": 255,
          "column": 35,
          "position": 1629
        },
        "endLoc": {
          "line": 269,
          "column": 47,
          "position": 1733
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "const handleImageStatusUpdate = (event: Event) => {\n      const customEvent = event as CustomEvent<{\n        imageId: string;\n        status: ImageStatus;\n        forceQueueUpdate?: boolean;\n        error?: string;\n        resultPath?: string | null;\n      }>;\n      const { imageId, status, error",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/hooks/useProjectData.tsx",
        "start": 342,
        "end": 350,
        "startLoc": {
          "line": 342,
          "column": 5,
          "position": 2740
        },
        "endLoc": {
          "line": 350,
          "column": 6,
          "position": 2830
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/ProjectDetail.tsx",
        "start": 278,
        "end": 286,
        "startLoc": {
          "line": 278,
          "column": 5,
          "position": 2343
        },
        "endLoc": {
          "line": 286,
          "column": 17,
          "position": 2433
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n\n        if (axios.isAxiosError(err) && err.response) {\n          errorMessage = err.response.data?.message || errorMessage;\n        } else if (err instanceof Error) {\n          errorMessage = err.message;\n        }\n\n        setError(errorMessage);\n\n        if (showToasts) {\n          toast.error(errorMessage);\n        }\n\n        // Revert status if it was changed",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/hooks/useImageResegment.ts",
        "start": 161,
        "end": 175,
        "startLoc": {
          "line": 161,
          "column": 35,
          "position": 838
        },
        "endLoc": {
          "line": 175,
          "column": 35,
          "position": 942
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/hooks/useRecentActivity.ts",
        "start": 255,
        "end": 269,
        "startLoc": {
          "line": 255,
          "column": 35,
          "position": 1629
        },
        "endLoc": {
          "line": 269,
          "column": 47,
          "position": 1733
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n\n        if (axios.isAxiosError(err) && err.response) {\n          errorMessage = err.response.data?.message || errorMessage;\n        } else if (err instanceof Error) {\n          errorMessage = err.message;\n        }\n\n        setError(errorMessage);\n\n        if (showToasts) {\n          toast.error(errorMessage);\n        }\n\n        // Revert statuses if they were changed",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/hooks/useImageResegment.ts",
        "start": 307,
        "end": 321,
        "startLoc": {
          "line": 307,
          "column": 41,
          "position": 1947
        },
        "endLoc": {
          "line": 321,
          "column": 40,
          "position": 2051
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/hooks/useRecentActivity.ts",
        "start": 255,
        "end": 269,
        "startLoc": {
          "line": 255,
          "column": 35,
          "position": 1629
        },
        "endLoc": {
          "line": 269,
          "column": 47,
          "position": 1733
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n\n        if (axios.isAxiosError(err) && err.response) {\n          errorMessage = err.response.data?.message || errorMessage;\n        } else if (err instanceof Error) {\n          errorMessage = err.message;\n        }\n\n        setError(errorMessage);\n\n        if (showToasts) {\n          toast.error(errorMessage);\n        }\n\n        throw",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/hooks/useImageDelete.ts",
        "start": 175,
        "end": 189,
        "startLoc": {
          "line": 175,
          "column": 25,
          "position": 1114
        },
        "endLoc": {
          "line": 189,
          "column": 6,
          "position": 1218
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/hooks/useRecentActivity.ts",
        "start": 255,
        "end": 269,
        "startLoc": {
          "line": 255,
          "column": 35,
          "position": 1629
        },
        "endLoc": {
          "line": 269,
          "column": 47,
          "position": 1733
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "((prev) => {\n        const newState = { ...prev };\n        imageIds.forEach((id) => {\n          newState[id] = true;\n        });\n        return newState;\n      });\n\n      setError(null);\n\n      try {\n        logger.info('Deleting multiple images'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/hooks/useImageDelete.ts",
        "start": 209,
        "end": 220,
        "startLoc": {
          "line": 209,
          "column": 18,
          "position": 1388
        },
        "endLoc": {
          "line": 220,
          "column": 27,
          "position": 1471
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/hooks/useImageResegment.ts",
        "start": 200,
        "end": 211,
        "startLoc": {
          "line": 200,
          "column": 22,
          "position": 1138
        },
        "endLoc": {
          "line": 211,
          "column": 48,
          "position": 1221
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n\n        if (axios.isAxiosError(err) && err.response) {\n          errorMessage = err.response.data?.message || errorMessage;\n        } else if (err instanceof Error) {\n          errorMessage = err.message;\n        }\n\n        setError(errorMessage);\n\n        if (showToasts) {\n          toast.error(errorMessage);\n        }\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/hooks/useImageDelete.ts",
        "start": 263,
        "end": 276,
        "startLoc": {
          "line": 263,
          "column": 31,
          "position": 1793
        },
        "endLoc": {
          "line": 276,
          "column": 2,
          "position": 1896
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/hooks/useRecentActivity.ts",
        "start": 255,
        "end": 269,
        "startLoc": {
          "line": 255,
          "column": 35,
          "position": 1629
        },
        "endLoc": {
          "line": 269,
          "column": 47,
          "position": 1733
        }
      }
    },
    {
      "format": "javascript",
      "lines": 72,
      "fragment": "}\n                aria-label=\"GitHub Repository\"\n              >\n                <Github className=\"w-5 h-5\" />\n              </a>\n              <a href=\"mailto:spheroseg@utia.cas.cz\" className={getLinkHoverClasses()} aria-label=\"Contact Email\">\n                <Mail className=\"w-5 h-5\" />\n              </a>\n            </div>\n          </div>\n\n          {/* Information Section */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-6\">{getTranslation('footer.informationTitle')}</h3>\n            <ul className=\"space-y-4\">\n              <li>\n                <Link to=\"/documentation\" className={getLinkHoverClasses()}>\n                  {getTranslation('footer.documentationLink')}\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/terms-of-service\" className={getLinkHoverClasses()}>\n                  {getTranslation('footer.termsLink')}\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/privacy-policy\" className={getLinkHoverClasses()}>\n                  {getTranslation('footer.privacyLink')}\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/request-access\" className={getLinkHoverClasses()}>\n                  {getTranslation('footer.requestAccessLink') || 'Request Access'}\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Contact Section */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-6\">{getTranslation('footer.contactTitle')}</h3>\n            <ul className=\"space-y-4\">\n              <li>\n                <a href=\"mailto:spheroseg@utia.cas.cz\" className={getLinkHoverClasses()}>\n                  spheroseg@utia.cas.cz\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://www.fjfi.cvut.cz/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={getLinkHoverClasses()}\n                >\n                  FNSPE CTU in Prague\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://www.utia.cas.cz/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={getLinkHoverClasses()}\n                >\n                  UTIA CAS\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div className={`border-t ",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/ThemedFooter.tsx",
        "start": 140,
        "end": 211,
        "startLoc": {
          "line": 140,
          "column": 2,
          "position": 1144
        },
        "endLoc": {
          "line": 211,
          "column": 11,
          "position": 1661
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/ThemedFooter.tsx",
        "start": 134,
        "end": 202,
        "startLoc": {
          "line": 134,
          "column": 16,
          "position": 1093
        },
        "endLoc": {
          "line": 202,
          "column": 20,
          "position": 1616
        }
      }
    },
    {
      "format": "javascript",
      "lines": 35,
      "fragment": "}>\n            <MonitorSmartphone className=\"h-4 w-4 mr-2\" />\n            {t('settings.system')}\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    );\n  }\n\n  // Default variant shows three buttons\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Button\n        variant={theme === 'light' ? 'default' : 'outline'}\n        size=\"sm\"\n        className=\"w-24\"\n        onClick={() => handleThemeChange('light')}\n      >\n        <Sun className=\"h-4 w-4 mr-2\" />\n        {t('settings.light')}\n      </Button>\n      <Button\n        variant={theme === 'dark' ? 'default' : 'outline'}\n        size=\"sm\"\n        className=\"w-24\"\n        onClick={() => handleThemeChange('dark')}\n      >\n        <Moon className=\"h-4 w-4 mr-2\" />\n        {t('settings.dark')}\n      </Button>\n      <Button\n        variant={theme === 'system' ? 'default' : 'outline'}\n        size=\"sm\"\n        className=\"w-24\"\n        onClick={() => handleThemeChange('system')}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/ThemeToggle.tsx",
        "start": 47,
        "end": 81,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 480
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 738
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/settings/AppearanceSection.tsx",
        "start": 59,
        "end": 98,
        "startLoc": {
          "line": 59,
          "column": 6,
          "position": 685
        },
        "endLoc": {
          "line": 98,
          "column": 2,
          "position": 1007
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ";\n        if (axios.isAxiosError(error) && error.response) {\n          message = error.response.data?.message || message;\n        } else if (error instanceof Error) {\n          message = error.message;\n        }\n        toast.error(message);\n        setStats",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/StatsOverview.tsx",
        "start": 103,
        "end": 110,
        "startLoc": {
          "line": 103,
          "column": 29,
          "position": 928
        },
        "endLoc": {
          "line": 110,
          "column": 9,
          "position": 1009
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectImageProcessor.tsx",
        "start": 45,
        "end": 52,
        "startLoc": {
          "line": 45,
          "column": 32,
          "position": 489
        },
        "endLoc": {
          "line": 52,
          "column": 15,
          "position": 570
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const imageUpdateEvent = new CustomEvent('image-status-update', {\n          detail: {\n            imageId: data.imageId,\n            status: data.status,\n            forceQueueUpdate: true,\n            error: data.error,\n            resultPath: data.resultPath,\n          },\n        });\n        window.dispatchEvent(imageUpdateEvent);\n      } catch",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/SegmentationQueueIndicator.tsx",
        "start": 230,
        "end": 240,
        "startLoc": {
          "line": 230,
          "column": 9,
          "position": 1822
        },
        "endLoc": {
          "line": 240,
          "column": 6,
          "position": 1907
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ImageDisplay.tsx",
        "start": 78,
        "end": 88,
        "startLoc": {
          "line": 78,
          "column": 13,
          "position": 757
        },
        "endLoc": {
          "line": 88,
          "column": 2,
          "position": 841
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "}>\n          <div className=\"grid gap-4 py-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"projectName\" className=\"text-right\">\n                {t('common.projectName')}\n              </Label>\n              <Input\n                id=\"projectName\"\n                placeholder={t('projects.projectNamePlaceholder')}\n                value={projectName}\n                onChange={(e) => setProjectName(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"projectDescription\" className=\"text-right\">\n                {t('common.description')} ({t('common.optional')})\n              </Label>\n              <Input\n                id=\"projectDescription\"\n                placeholder={t('projects.projectDescPlaceholder')}\n                value={projectDescription}\n                onChange={(e) => setProjectDescription(e.target.value)}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/NewProject.tsx",
        "start": 90,
        "end": 112,
        "startLoc": {
          "line": 90,
          "column": 20,
          "position": 770
        },
        "endLoc": {
          "line": 112,
          "column": 2,
          "position": 970
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectDialogForm.tsx",
        "start": 25,
        "end": 49,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 280
        },
        "endLoc": {
          "line": 49,
          "column": 2,
          "position": 488
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "<DialogHeader>\n          <DialogTitle>{t('projects.createProject')}</DialogTitle>\n          <DialogDescription>{t('projects.createProjectDesc')}</DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleCreateProject}>\n          <div className=\"grid gap-4 py-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"projectName\" className=\"text-right\">\n                {t('common.projectName')}\n              </Label>\n              <Input\n                ",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/NewProject.tsx",
        "start": 86,
        "end": 97,
        "startLoc": {
          "line": 86,
          "column": 9,
          "position": 725
        },
        "endLoc": {
          "line": 97,
          "column": 17,
          "position": 828
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectDialogForm.tsx",
        "start": 21,
        "end": 32,
        "startLoc": {
          "line": 21,
          "column": 7,
          "position": 226
        },
        "endLoc": {
          "line": 32,
          "column": 15,
          "position": 338
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": "}\n            >\n              {t('navbar.home')}\n            </Link>\n            <Link\n              to=\"/documentation\"\n              className=\"text-gray-700 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 py-2 transition-colors\"\n              onClick={() => setIsMobileMenuOpen(false)}\n            >\n              {t('navbar.documentation')}\n            </Link>\n            <Link\n              to=\"/terms-of-service\"\n              className=\"text-gray-700 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 py-2 transition-colors\"\n              onClick={() => setIsMobileMenuOpen(false)}\n            >\n              {t('navbar.terms')}\n            </Link>\n            <Link\n              to=\"/privacy-policy\"\n              className=\"text-gray-700 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 py-2 transition-colors\"\n              onClick={() => setIsMobileMenuOpen(false)}\n            >\n              {t('navbar.privacy')}\n            </Link>\n            <Link\n              to=\"/sign-in\"\n              className=\"text-gray-700 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 py-2 transition-colors\"\n              onClick={() => setIsMobileMenuOpen(false)}\n            >\n              {t('navbar.login')}\n            </Link>\n            <Button asChild className=\"w-full rounded-md\">\n              <Link to=\"/request-access\" onClick={() => setIsMobileMenuOpen(false)}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/Navbar.tsx",
        "start": 115,
        "end": 148,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 869
        },
        "endLoc": {
          "line": 148,
          "column": 2,
          "position": 1101
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/Navbar.tsx",
        "start": 103,
        "end": 143,
        "startLoc": {
          "line": 103,
          "column": 3,
          "position": 781
        },
        "endLoc": {
          "line": 143,
          "column": 2,
          "position": 1049
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "// Navigate through the translation object to find the value\n    let value = translations;\n    for (const part of parts) {\n      if (value && typeof value === 'object' && part in value) {\n        value = value[part];\n      } else {\n        // If the key doesn't exist in the current language, fall back to English\n        if (language !== 'en') {\n          let englishValue = enTranslations;\n          for (const p of parts) {\n            if (englishValue && typeof englishValue === 'object' && p in englishValue) {\n              englishValue = englishValue[p];\n            } else {\n              return key; // Key not found in English either\n            }\n          }\n          return typeof englishValue === 'string' ? englishValue : key;\n        }\n        return key; // Key not found\n      }\n    }\n\n    return typeof value === 'string' ? value : key;\n  };",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/Features.tsx",
        "start": 69,
        "end": 92,
        "startLoc": {
          "line": 69,
          "column": 5,
          "position": 563
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 795
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/ThemedFooter.tsx",
        "start": 50,
        "end": 73,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 421
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 653
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ";\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('active');\n          }\n        });\n      },\n      { threshold: 0.1 },\n    );\n\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/Features.tsx",
        "start": 92,
        "end": 106,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 795
        },
        "endLoc": {
          "line": 106,
          "column": 3,
          "position": 895
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/Hero.tsx",
        "start": 11,
        "end": 25,
        "startLoc": {
          "line": 11,
          "column": 2,
          "position": 145
        },
        "endLoc": {
          "line": 25,
          "column": 6,
          "position": 245
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n              />\n            </svg>\n          </div>\n          <h2 className=\"text-2xl font-bold mb-2 dark:text-white\">Something",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/ErrorBoundary.tsx",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 10,
          "position": 787
        },
        "endLoc": {
          "line": 122,
          "column": 10,
          "position": 859
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/SegmentationPage.tsx",
        "start": 171,
        "end": 185,
        "startLoc": {
          "line": 171,
          "column": 18,
          "position": 1462
        },
        "endLoc": {
          "line": 185,
          "column": 2,
          "position": 1536
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "={viewMode === 'grid' ? 'default' : 'ghost'}\n          size=\"sm\"\n          className=\"h-9 px-2.5 rounded-r-none\"\n          onClick={() => setViewMode('grid')}\n        >\n          <Grid2X2 className=\"h-4 w-4\" />\n        </Button>\n        <Button\n          variant={viewMode === 'list' ? 'default' : 'ghost'}\n          size=\"sm\"\n          className=\"h-9 px-2.5 rounded-l-none\"\n          onClick={() => setViewMode('list')}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/components/DashboardActions.tsx",
        "start": 27,
        "end": 38,
        "startLoc": {
          "line": 27,
          "column": 8,
          "position": 277
        },
        "endLoc": {
          "line": 38,
          "column": 2,
          "position": 383
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/components/project/ProjectToolbar.tsx",
        "start": 208,
        "end": 234,
        "startLoc": {
          "line": 208,
          "column": 8,
          "position": 1775
        },
        "endLoc": {
          "line": 234,
          "column": 2,
          "position": 2000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ");\n      if (whereMatch) {\n        const conditions = whereMatch[1];\n\n        // Parse basic key-value conditions\n        const conditionParts = conditions.split('AND').map((part) => part.trim());\n        conditionParts.forEach((condition) => {\n          const match = condition.match(/([^\\s=<>]+)\\s*(=|<>|>|<|>=|<=)\\s*(?:'([^']*)'|(\\d+)|(\\$\\d+))/);\n          if (match) {\n            const [, column, operator, stringValue, numberValue, placeholder] = match;\n\n            // For placeholder values, we'll handle them separately\n            if (!placeholder) {\n              result.conditions[column] = stringValue || numberValue;\n            }\n          }\n        });\n      }\n    }\n\n    // Check for DELETE",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/test-utils/mockDatabase.ts",
        "start": 290,
        "end": 310,
        "startLoc": {
          "line": 290,
          "column": 17,
          "position": 2196
        },
        "endLoc": {
          "line": 310,
          "column": 20,
          "position": 2368
        }
      },
      "secondFile": {
        "name": "packages/backend/src/test-utils/mockDatabase.ts",
        "start": 218,
        "end": 238,
        "startLoc": {
          "line": 218,
          "column": 46,
          "position": 1548
        },
        "endLoc": {
          "line": 238,
          "column": 20,
          "position": 1720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ";\n      }\n\n      // Extract WHERE conditions\n      const whereMatch = queryText.match(/WHERE\\s+(.+)$/i);\n      if (whereMatch) {\n        const conditions = whereMatch[1];\n\n        // Parse basic key-value conditions\n        const conditionParts = conditions.split('AND').map((part) => part.trim());\n        conditionParts.forEach((condition) => {\n          const match = condition.match(/([^\\s=<>]+)\\s*(=|<>|>|<|>=|<=)\\s*(?:'([^']*)'|(\\d+)|(\\$\\d+))/);\n          if (match) {\n            const [, column, operator, stringValue, numberValue, placeholder] = match;\n\n            // For placeholder values, we'll handle them separately\n            if (!placeholder) {\n              result.conditions[column] = stringValue || numberValue;\n            }\n          }\n        });\n      }\n    }\n\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/test-utils/mockDatabase.ts",
        "start": 317,
        "end": 341,
        "startLoc": {
          "line": 317,
          "column": 2,
          "position": 2439
        },
        "endLoc": {
          "line": 341,
          "column": 7,
          "position": 2632
        }
      },
      "secondFile": {
        "name": "packages/backend/src/test-utils/mockDatabase.ts",
        "start": 286,
        "end": 238,
        "startLoc": {
          "line": 286,
          "column": 2,
          "position": 2175
        },
        "endLoc": {
          "line": 238,
          "column": 20,
          "position": 1720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "const conditionParts = conditions.split('AND').map((part) => part.trim());\n          conditionParts.forEach((condition, index) => {\n            const match = condition.match(/([^\\s=<>]+)\\s*(=|<>|>|<|>=|<=)\\s*(\\$\\d+)/);\n            if (match) {\n              const [, column, operator, placeholder] = match;\n              const paramIndex = parseInt(placeholder.substring(1)) - 1;\n\n              if (paramIndex >= 0 && paramIndex < values.length) {\n                parsedQuery.conditions[column] = values[paramIndex];\n              }\n            }\n          });\n        }\n      }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/test-utils/mockDatabase.ts",
        "start": 428,
        "end": 442,
        "startLoc": {
          "line": 428,
          "column": 11,
          "position": 3493
        },
        "endLoc": {
          "line": 442,
          "column": 2,
          "position": 3662
        }
      },
      "secondFile": {
        "name": "packages/backend/src/test-utils/mockDatabase.ts",
        "start": 379,
        "end": 393,
        "startLoc": {
          "line": 379,
          "column": 11,
          "position": 2936
        },
        "endLoc": {
          "line": 393,
          "column": 5,
          "position": 3105
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "= this.tables[parsedQuery.tableName].filter((row) => {\n          return Object.entries(parsedQuery.conditions).every(([column, value]) => {\n            return row[column] === value;\n          });\n        });\n\n        // Update rows",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/test-utils/mockDatabase.ts",
        "start": 498,
        "end": 504,
        "startLoc": {
          "line": 498,
          "column": 2,
          "position": 4148
        },
        "endLoc": {
          "line": 504,
          "column": 15,
          "position": 4221
        }
      },
      "secondFile": {
        "name": "packages/backend/src/test-utils/mockDatabase.ts",
        "start": 451,
        "end": 457,
        "startLoc": {
          "line": 451,
          "column": 2,
          "position": 3744
        },
        "endLoc": {
          "line": 457,
          "column": 7,
          "position": 3817
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n            type: 'external',\n            points: [\n              { x: 100, y: 100 },\n              { x: 200, y: 100 },\n              { x: 200, y: 200 },\n              { x: 100, y: 200 },\n            ],\n          },\n        ],\n        version",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/test-utils/mockDatabase.ts",
        "start": 641,
        "end": 651,
        "startLoc": {
          "line": 641,
          "column": 2,
          "position": 5533
        },
        "endLoc": {
          "line": 651,
          "column": 8,
          "position": 5629
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/test-utils/apiClientMock.ts",
        "start": 108,
        "end": 118,
        "startLoc": {
          "line": 108,
          "column": 18,
          "position": 738
        },
        "endLoc": {
          "line": 118,
          "column": 11,
          "position": 834
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "} else {\n        const [, valueStr, unit] = match;\n        const value = parseInt(valueStr, 10);\n\n        switch (unit) {\n          case 's':\n            expiresAt = new Date(now.getTime() + value * 1000);\n            break;\n          case 'm':\n            expiresAt = new Date(now.getTime() + value * 60000);\n            break;\n          case 'h':\n            expiresAt = new Date(now.getTime() + value * 3600000);\n            break;\n          case 'd':\n            expiresAt = new Date(now.getTime() + value * 86400000);\n            break;\n          case 'w':\n            expiresAt = new Date(now.getTime() + value * 604800000);\n            break;\n          case 'y':\n            expiresAt = new Date(now.getTime() + value * 31536000000);\n            break;\n          default:\n            expiresAt = new Date(now.getTime() + 604800000",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/test-utils/mockAuth.ts",
        "start": 237,
        "end": 261,
        "startLoc": {
          "line": 237,
          "column": 7,
          "position": 1900
        },
        "endLoc": {
          "line": 261,
          "column": 10,
          "position": 2180
        }
      },
      "secondFile": {
        "name": "packages/backend/src/test-utils/mockAuth.ts",
        "start": 149,
        "end": 173,
        "startLoc": {
          "line": 149,
          "column": 7,
          "position": 1128
        },
        "endLoc": {
          "line": 173,
          "column": 8,
          "position": 1408
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "|| parts[3] !== this.options.jwtSecret) {\n      return null;\n    }\n\n    try {\n      const payload = JSON.parse(parts[1]) as TokenPayload;\n\n      // Check if token is expired\n      if (payload.exp && payload.exp < Math.floor(Date.now() / 1000)) {\n        return null;\n      }\n\n      return payload;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  /**\n   * Create a mock authentication middleware\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/test-utils/mockAuth.ts",
        "start": 345,
        "end": 365,
        "startLoc": {
          "line": 345,
          "column": 2,
          "position": 2805
        },
        "endLoc": {
          "line": 365,
          "column": 6,
          "position": 2939
        }
      },
      "secondFile": {
        "name": "packages/backend/src/test-utils/mockAuth.ts",
        "start": 310,
        "end": 330,
        "startLoc": {
          "line": 310,
          "column": 2,
          "position": 2528
        },
        "endLoc": {
          "line": 330,
          "column": 6,
          "position": 2662
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n\nexport interface UserProfile {\n  id: string;\n  user_id: string;\n  username?: string;\n  full_name?: string;\n  title?: string;\n  organization?: string;\n  bio?: string;\n  location?: string;\n  avatar_url?: string;\n  preferred_language?: string;\n  theme_preference?: string;\n  created_at: Date",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/services/userProfileService.ts",
        "start": 9,
        "end": 23,
        "startLoc": {
          "line": 9,
          "column": 18,
          "position": 60
        },
        "endLoc": {
          "line": 23,
          "column": 5,
          "position": 161
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/services/userProfileService.ts",
        "start": 6,
        "end": 20,
        "startLoc": {
          "line": 6,
          "column": 18,
          "position": 10
        },
        "endLoc": {
          "line": 20,
          "column": 7,
          "position": 111
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": "function generateNewFilePaths(\n  originalStoragePath: string,\n  originalThumbnailPath?: string,\n  newProjectId?: string,\n): { newStoragePath: string; newThumbnailPath?: string } {\n  // Generate timestamp and random suffix for uniqueness\n  const timestamp = Date.now();\n  const randomSuffix = Math.floor(Math.random() * 1000000);\n\n  // Extract filename from original path\n  const originalFileName = originalStoragePath.split('/').pop() || '';\n  const fileNameParts = originalFileName.split('.');\n  const fileExtension = fileNameParts.pop() || 'png';\n  const fileBaseName = fileNameParts.join('.');\n\n  // Generate new storage path\n  const newStoragePath = `/uploads/${newProjectId}/${fileBaseName}-copy-${timestamp}-${randomSuffix}.${fileExtension}`;\n\n  // Generate new thumbnail path if original exists\n  let newThumbnailPath;\n  if (originalThumbnailPath) {\n    const originalThumbName = originalThumbnailPath.split('/').pop() || '';\n    const thumbNameParts = originalThumbName.split('.');\n    const thumbExtension = thumbNameParts.pop() || 'png';\n    const thumbBaseName = thumbNameParts.join('.');\n\n    newThumbnailPath = `/uploads/${newProjectId}/thumb-${thumbBaseName}-copy-${timestamp}-${randomSuffix}.${thumbExtension}`;\n  }\n\n  return { newStoragePath, newThumbnailPath };\n}\n\n/**\n * Copy image files from source to target\n *\n * @param sourcePath Source path (relative to baseDir)\n * @param targetPath Target path (relative to baseDir)\n * @param baseDir Base directory\n */",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/services/projectDuplicationService.ts",
        "start": 273,
        "end": 311,
        "startLoc": {
          "line": 273,
          "column": 1,
          "position": 1552
        },
        "endLoc": {
          "line": 311,
          "column": 4,
          "position": 1889
        }
      },
      "secondFile": {
        "name": "packages/backend/src/workers/projectDuplicationWorker.ts",
        "start": 185,
        "end": 219,
        "startLoc": {
          "line": 185,
          "column": 1,
          "position": 1252
        },
        "endLoc": {
          "line": 219,
          "column": 4,
          "position": 1589
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "> {\n  try {\n    // Normalize paths\n    const normalizedSourcePath = sourcePath.startsWith('/') ? sourcePath.substring(1) : sourcePath;\n    const normalizedTargetPath = targetPath.startsWith('/') ? targetPath.substring(1) : targetPath;\n\n    // Create full paths\n    const fullSourcePath = path.join(baseDir, normalizedSourcePath);\n    const fullTargetPath = path.join(baseDir, normalizedTargetPath);\n\n    // Create target directory if it doesn't exist\n    const targetDir = path.dirname(fullTargetPath);\n    if (!fs",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/services/projectDuplicationService.ts",
        "start": 312,
        "end": 324,
        "startLoc": {
          "line": 312,
          "column": 5,
          "position": 1919
        },
        "endLoc": {
          "line": 324,
          "column": 3,
          "position": 2051
        }
      },
      "secondFile": {
        "name": "packages/backend/src/workers/projectDuplicationWorker.ts",
        "start": 140,
        "end": 152,
        "startLoc": {
          "line": 140,
          "column": 8,
          "position": 911
        },
        "endLoc": {
          "line": 152,
          "column": 2,
          "position": 1043
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "let area = 0;\n  for (let i = 0; i < points.length; i++) {\n    const j = (i + 1) % points.length;\n    area += points[i].x * points[j].y;\n    area -= points[j].x * points[i].y;\n  }\n\n  return Math.abs(area /",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/services/metricsService.ts",
        "start": 22,
        "end": 29,
        "startLoc": {
          "line": 22,
          "column": 3,
          "position": 66
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 182
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/pages/segmentation/hooks/polygonInteraction/geometry/utils/intersectionUtils.ts",
        "start": 81,
        "end": 87,
        "startLoc": {
          "line": 81,
          "column": 5,
          "position": 932
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 1046
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\n  } finally {\n    // Smažeme dočasný soubor, pokud byl vytvořen\n    if (processedFilePath !== filePath) {\n      try {\n        await fs.promises.unlink(processedFilePath);\n        logger.debug(`Dočasný soubor ${processedFilePath} smazán.`);\n      } catch (unlinkError) {\n        logger.warn(`Nepodařilo se smazat dočasný soubor ${processedFilePath}:`, unlinkError);\n      }\n    }\n  }\n}\n\n/**\n * Vytvoří náhled obrázku\n */",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/services/imageProcessingService.ts",
        "start": 156,
        "end": 172,
        "startLoc": {
          "line": 156,
          "column": 4,
          "position": 1343
        },
        "endLoc": {
          "line": 172,
          "column": 4,
          "position": 1439
        }
      },
      "secondFile": {
        "name": "packages/backend/src/services/imageProcessingService.ts",
        "start": 114,
        "end": 130,
        "startLoc": {
          "line": 114,
          "column": 4,
          "position": 983
        },
        "endLoc": {
          "line": 130,
          "column": 4,
          "position": 1079
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n  options: FileCleanupOptions = {},\n): Promise<FileCleanupResult> {\n  const { transactionClient, dryRun = false } = options;\n  const client = transactionClient || pool;\n  const result: FileCleanupResult = {\n    success: true,\n    deletedFiles: [],\n    failedFiles: [],\n    dryRun,\n  };\n\n  logger.info('Starting orphaned file cleanup'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/services/fileCleanupService.ts",
        "start": 269,
        "end": 281,
        "startLoc": {
          "line": 269,
          "column": 5,
          "position": 2004
        },
        "endLoc": {
          "line": 281,
          "column": 33,
          "position": 2112
        }
      },
      "secondFile": {
        "name": "packages/backend/src/services/fileCleanupService.ts",
        "start": 39,
        "end": 51,
        "startLoc": {
          "line": 39,
          "column": 7,
          "position": 173
        },
        "endLoc": {
          "line": 51,
          "column": 36,
          "position": 281
        }
      }
    },
    {
      "format": "typescript",
      "lines": 134,
      "fragment": ");\n    }\n  }\n\n  /**\n   * Handles forgot password request.\n   * Generates a new password and sends it to the user's email.\n   * @param email User's email\n   */\n  public async forgotPassword(email: string): Promise<void> {\n    logger.info('Processing forgot password request', { email });\n\n    const client = await pool.connect();\n    try {\n      // Check if user exists\n      const result = await client.query('SELECT id, name FROM users WHERE email = $1', [email]);\n      if (result.rows.length === 0) {\n        // Don't reveal that email doesn't exist for security\n        logger.info('Forgot password request for non-existent email', {\n          email,\n        });\n        return; // Return success to not reveal if email exists\n      }\n\n      const { id: userId, name } = result.rows[0];\n\n      // Generate new secure password\n      const newPassword = generateSecurePassword(12);\n      const passwordHash = await bcryptjs.hash(newPassword, config.auth.saltRounds);\n\n      // Update user's password\n      await client.query(\n        'UPDATE users SET password_hash = $1, updated_at = NOW() WHERE id = $2',\n        [passwordHash, userId]\n      );\n\n      // Revoke all existing refresh tokens for security\n      await client.query(\n        'UPDATE refresh_tokens SET is_revoked = true WHERE user_id = $1',\n        [userId]\n      );\n\n      // Send password reset email\n      try {\n        const emailResult = await sendPasswordReset(email, name, newPassword);\n        logger.info('Password reset email sent', { \n          userId, \n          email, \n          testUrl: emailResult.testUrl \n        });\n      } catch (emailError) {\n        logger.error('Failed to send password reset email', { error: emailError, email, userId });\n        // Still return success to not reveal if email exists\n      }\n    } catch (error) {\n      logger.error('Forgot password error', { error, email });\n      throw new ApiError('Failed to process password reset request', 500, error instanceof Error ? error.message : String(error));\n    } finally {\n      client.release();\n    }\n  }\n\n  /**\n   * Resets user password using a token.\n   * @param token Reset token\n   * @param newPassword New password\n   */\n  public async resetPassword(token: string, newPassword: string): Promise<void> {\n    logger.info('Processing password reset request');\n\n    const client = await pool.connect();\n    try {\n      // Get all non-expired tokens (we'll check them one by one)\n      const result = await client.query(\n        'SELECT id, user_id, token_hash FROM password_reset_tokens WHERE expires_at > NOW()',\n      );\n\n      if (result.rows.length === 0) {\n        logger.warn('No valid reset tokens found');\n        throw new ApiError('Invalid or expired reset token', 400);\n      }\n\n      let tokenValid = false;\n      let userId = null;\n      let tokenId = null;\n\n      // Check each token\n      for (const row of result.rows) {\n        const isMatch = await bcryptjs.compare(token, row.token_hash);\n        if (isMatch) {\n          tokenValid = true;\n          userId = row.user_id;\n          tokenId = row.id;\n          break;\n        }\n      }\n\n      if (!tokenValid || !userId) {\n        logger.warn('Invalid reset token provided');\n        throw new ApiError('Invalid or expired reset token', 400);\n      }\n\n      // Hash new password\n      const passwordHash = await bcryptjs.hash(newPassword, config.auth.saltRounds);\n\n      // Update password and invalidate token\n      await client.query('BEGIN');\n      try {\n        await client.query('UPDATE users SET password_hash = $1, updated_at = NOW() WHERE id = $2', [passwordHash, userId]);\n        await client.query('DELETE FROM password_reset_tokens WHERE id = $1', [tokenId]);\n\n        // Revoke all refresh tokens for this user for security\n        await tokenService.revokeAllUserTokens(userId);\n\n        await client.query('COMMIT');\n\n        logger.info('Password reset successful', { userId });\n      } catch (error) {\n        await client.query('ROLLBACK');\n        throw error;\n      }\n    } catch (error) {\n      logger.error('Password reset error', { error });\n      throw new ApiError('Failed to reset password', 500, error instanceof Error ? error.message : String(error));\n    } finally {\n      client.release();\n    }\n  }\n\n  /**\n   * Logs out a user by invalidating their refresh token.\n   * @param refreshToken The refresh token to invalidate (optional)\n   * @param userId The ID of the user logging out (optional, from auth middleware)\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/services/authService.ts",
        "start": 361,
        "end": 494,
        "startLoc": {
          "line": 361,
          "column": 2,
          "position": 2845
        },
        "endLoc": {
          "line": 494,
          "column": 6,
          "position": 3838
        }
      },
      "secondFile": {
        "name": "packages/backend/src/services/authService.ts",
        "start": 236,
        "end": 369,
        "startLoc": {
          "line": 236,
          "column": 2,
          "position": 1863
        },
        "endLoc": {
          "line": 369,
          "column": 6,
          "position": 2856
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", { userId });\n\n    const client = await pool.connect();\n    try {\n      // Get current user data\n      const userResult = await client.query(\n        'SELECT id, email, password_hash FROM users WHERE id = $1',\n        [userId]\n      );\n\n      if (userResult.rows.length === 0) {\n        throw new ApiError('User not found', 404);\n      }\n\n      const user = userResult.rows[0];\n\n      // Verify email confirmation",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/services/authService.ts",
        "start": 704,
        "end": 720,
        "startLoc": {
          "line": 704,
          "column": 38,
          "position": 5442
        },
        "endLoc": {
          "line": 720,
          "column": 29,
          "position": 5557
        }
      },
      "secondFile": {
        "name": "packages/backend/src/services/authService.ts",
        "start": 646,
        "end": 662,
        "startLoc": {
          "line": 646,
          "column": 37,
          "position": 5006
        },
        "endLoc": {
          "line": 662,
          "column": 27,
          "position": 5121
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "};\n  } catch (error) {\n    console.log('  Result: ERROR');\n    console.log('  Error:', error.message);\n    console.log('');\n    \n    return {\n      route,\n      success: false,\n      error: error.message\n    };\n  }\n}\n\n// Main function",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/scripts/test-api-routes.js",
        "start": 117,
        "end": 131,
        "startLoc": {
          "line": 117,
          "column": 5,
          "position": 1177
        },
        "endLoc": {
          "line": 131,
          "column": 17,
          "position": 1259
        }
      },
      "secondFile": {
        "name": "packages/backend/src/scripts/test-api-routes.js",
        "start": 76,
        "end": 90,
        "startLoc": {
          "line": 76,
          "column": 5,
          "position": 806
        },
        "endLoc": {
          "line": 90,
          "column": 39,
          "position": 888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "// Check if users table exists\n    const tableCheck = await pool.query(`\n      SELECT EXISTS (\n        SELECT 1\n        FROM information_schema.tables\n        WHERE table_schema = 'public'\n        AND table_name = 'users'\n      )\n    `);\n\n    if (!tableCheck.rows[0].exists) {\n      logger.warn('Users table does not exist, returning error');\n      return res.status(500).json({ message: 'Database schema not initialized' });\n    }\n\n    // Check if user already exists",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 111,
        "end": 126,
        "startLoc": {
          "line": 111,
          "column": 5,
          "position": 866
        },
        "endLoc": {
          "line": 126,
          "column": 32,
          "position": 940
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 26,
        "end": 41,
        "startLoc": {
          "line": 26,
          "column": 5,
          "position": 222
        },
        "endLoc": {
          "line": 41,
          "column": 26,
          "position": 296
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", authMiddleware, async (req: AuthenticatedRequest, res: Response) => {\n  const userId = req.user?.userId;\n\n  if (!userId) {\n    return res.status(401).json({ message: 'Authentication required' });\n  }\n\n  try {\n    // Get projects count",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 273,
        "end": 281,
        "startLoc": {
          "line": 273,
          "column": 17,
          "position": 1983
        },
        "endLoc": {
          "line": 281,
          "column": 22,
          "position": 2066
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 6,
          "position": 139
        },
        "endLoc": {
          "line": 26,
          "column": 31,
          "position": 222
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": recentActivity\n          .filter((item) => item.type === 'image_uploaded')\n          .map((item) => ({\n            id: item.item_id,\n            name: item.item_name,\n            created_at: item.timestamp,\n            project_id: item.project_id,\n            project_name: item.project_name,\n          })),\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 401,
        "end": 410,
        "startLoc": {
          "line": 401,
          "column": 7,
          "position": 2856
        },
        "endLoc": {
          "line": 410,
          "column": 2,
          "position": 2944
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 370,
        "end": 379,
        "startLoc": {
          "line": 370,
          "column": 13,
          "position": 2608
        },
        "endLoc": {
          "line": 379,
          "column": 12,
          "position": 2696
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": recentActivity.map((item) => ({\n        type: item.type,\n        item_id: item.item_id,\n        item_name: item.item_name,\n        timestamp: item.timestamp,\n        project_id: item.project_id,\n        project_name: item.project_name,\n      })),\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 428,
        "end": 436,
        "startLoc": {
          "line": 428,
          "column": 9,
          "position": 3101
        },
        "endLoc": {
          "line": 436,
          "column": 2,
          "position": 3177
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 355,
        "end": 363,
        "startLoc": {
          "line": 355,
          "column": 15,
          "position": 2460
        },
        "endLoc": {
          "line": 363,
          "column": 15,
          "position": 2536
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ", authMiddleware, async (req: AuthenticatedRequest, res: Response) => {\n  const userId = req.user?.userId;\n\n  if (!userId) {\n    return res.status(401).json({ message: 'Authentication required' });\n  }\n\n  try {\n    // Get projects count\n    const projectsCountResult = await pool.query('SELECT COUNT(*) FROM projects WHERE user_id = $1', [userId]);\n    const projectsCount = parseInt(projectsCountResult.rows[0].count, 10) || 0;\n\n    // Get images count - join with projects to get all images for this user's projects\n    const imagesCountResult = await pool.query(\n      'SELECT COUNT(*) FROM images i JOIN projects p ON i.project_id = p.id WHERE p.user_id = $1',\n      [userId],\n    );\n    const imagesCount = parseInt(imagesCountResult.rows[0].count, 10) || 0;\n\n    // Get segmentations count - count completed images as segmentations\n    const segmentationsCountResult = await pool.query(\n      'SELECT COUNT(*) FROM images i JOIN projects p ON i.project_id = p.id WHERE p.user_id = $1 AND i.status = $2',\n      [userId, 'completed'],\n    );\n    const segmentationsCount = parseInt(segmentationsCountResult.rows[0].count, 10) || 0;\n\n    // Return simplified statistics in both formats for compatibility",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 447,
        "end": 473,
        "startLoc": {
          "line": 447,
          "column": 12,
          "position": 3273
        },
        "endLoc": {
          "line": 473,
          "column": 66,
          "position": 3530
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 18,
        "end": 299,
        "startLoc": {
          "line": 18,
          "column": 6,
          "position": 139
        },
        "endLoc": {
          "line": 299,
          "column": 20,
          "position": 2240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "router.get('/me/stats', authMiddleware, async (req: AuthenticatedRequest, res: Response) => {\n  const userId = req.user?.userId;\n\n  if (!userId) {\n    return res.status(401).json({ message: 'Authentication required' });\n  }\n\n  try {\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/userStats.ts",
        "start": 10,
        "end": 18,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 87
        },
        "endLoc": {
          "line": 18,
          "column": 7,
          "position": 175
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 447,
        "end": 26,
        "startLoc": {
          "line": 447,
          "column": 1,
          "position": 3268
        },
        "endLoc": {
          "line": 26,
          "column": 31,
          "position": 222
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "router.get('/me/statistics', authMiddleware, async (req: AuthenticatedRequest, res: Response) => {\n  const userId = req.user?.userId;\n\n  if (!userId) {\n    return res.status(401).json({ message: 'Authentication required' });\n  }\n\n  try {\n    logger.info('Fetching statistics for user'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/userStats.ts",
        "start": 73,
        "end": 81,
        "startLoc": {
          "line": 73,
          "column": 1,
          "position": 736
        },
        "endLoc": {
          "line": 81,
          "column": 31,
          "position": 828
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 273,
        "end": 18,
        "startLoc": {
          "line": 273,
          "column": 1,
          "position": 1978
        },
        "endLoc": {
          "line": 18,
          "column": 26,
          "position": 179
        }
      }
    },
    {
      "format": "typescript",
      "lines": 50,
      "fragment": ", { userId });\n\n    // Get stats from service\n    const stats = await userStatsService.getUserStats(pool, userId);\n\n    // Return stats with both new format and old format keys for compatibility\n    res.status(200).json({\n      // New format property names\n      totalProjects: stats.totalProjects,\n      totalImages: stats.totalImages,\n      completedSegmentations: stats.completedSegmentations,\n      storageUsedBytes: stats.storageUsedBytes.toString(),\n      storageLimitBytes: stats.storageLimitBytes.toString(),\n      storageUsedMB: Number(stats.storageUsedBytes) > 0\n        ? Math.round((Number(stats.storageUsedBytes) / (1024 * 1024)) * 100) / 100\n        : 0.01, // Use a small non-zero value if no storage used\n      recentActivity: stats.recentActivity,\n      recentProjects: stats.recentProjects,\n      recentImages: stats.recentImages,\n      comparisons: {\n        projectsThisMonth: stats.projectsThisMonth,\n        projectsLastMonth: stats.projectsLastMonth,\n        projectsChange: stats.projectsThisMonth - stats.projectsLastMonth,\n        imagesThisMonth: stats.imagesThisMonth,\n        imagesLastMonth: stats.imagesLastMonth,\n        imagesChange: stats.imagesThisMonth - stats.imagesLastMonth,\n      },\n\n      // Old format property names for compatibility\n      projects_count: stats.totalProjects,\n      images_count: stats.totalImages,\n      segmentations_count: stats.completedSegmentations,\n      storage_used_mb: Number(stats.storageUsedBytes) > 0\n        ? Math.round((Number(stats.storageUsedBytes) / (1024 * 1024)) * 100) / 100\n        : 0.01, // Use a small non-zero value if no storage used\n      storage_used_bytes: stats.storageUsedBytes.toString(),\n      storage_limit_bytes: stats.storageLimitBytes.toString(),\n      last_login: new Date().toISOString(),\n      recent_activity: stats.recentActivity,\n      recent_projects: stats.recentProjects,\n      recent_images: stats.recentImages,\n      projects_this_month: stats.projectsThisMonth,\n      projects_last_month: stats.projectsLastMonth,\n      projects_change: stats.projectsThisMonth - stats.projectsLastMonth,\n      images_this_month: stats.imagesThisMonth,\n      images_last_month: stats.imagesLastMonth,\n      images_change: stats.imagesThisMonth - stats.imagesLastMonth,\n    });\n  } catch (error) {\n    logger.error('Error fetching user statistics'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/userStats.ts",
        "start": 81,
        "end": 130,
        "startLoc": {
          "line": 81,
          "column": 31,
          "position": 829
        },
        "endLoc": {
          "line": 130,
          "column": 33,
          "position": 1340
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/userStats.ts",
        "start": 18,
        "end": 67,
        "startLoc": {
          "line": 18,
          "column": 26,
          "position": 180
        },
        "endLoc": {
          "line": 67,
          "column": 28,
          "position": 691
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n  authMiddleware,\n  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {\n    const userId = req.user?.userId;\n    const projectId = req.params.projectId;\n\n    if (!userId) {\n      res.status(401).json({ message: 'Authentication error' });\n      return;\n    }\n\n    try {\n      // Return mock data specific to the requested project",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/status.ts",
        "start": 212,
        "end": 224,
        "startLoc": {
          "line": 212,
          "column": 32,
          "position": 1559
        },
        "endLoc": {
          "line": 224,
          "column": 54,
          "position": 1666
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/status.ts",
        "start": 83,
        "end": 95,
        "startLoc": {
          "line": 83,
          "column": 27,
          "position": 627
        },
        "endLoc": {
          "line": 95,
          "column": 25,
          "position": 734
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\n\n    if (!userId) {\n      res.status(401).json({ message: 'Authentication error' });\n      return;\n    }\n\n    try {\n      // Verify user has access to the project\n      const projectCheck = await pool.query('SELECT id FROM projects WHERE id = $1 AND user_id = $2', [\n        projectId,\n        userId,\n      ]);\n\n      if (projectCheck.rows.length === 0) {\n        res.status(404).json({ message: 'Project not found or access denied' });\n        return;\n      }\n\n      // Get queue status for this project",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/segmentation.ts",
        "start": 486,
        "end": 505,
        "startLoc": {
          "line": 486,
          "column": 2,
          "position": 3789
        },
        "endLoc": {
          "line": 505,
          "column": 37,
          "position": 3918
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/segmentation.ts",
        "start": 370,
        "end": 389,
        "startLoc": {
          "line": 370,
          "column": 5,
          "position": 2955
        },
        "endLoc": {
          "line": 389,
          "column": 4,
          "position": 3084
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "});\n\n    if (!userId) {\n      res.status(401).json({ message: 'Authentication error' });\n      return;\n    }\n\n    try {\n      // Verify user has access to the project\n      const projectCheck = await pool.query('SELECT id FROM projects WHERE id = $1 AND user_id = $2', [\n        projectId,\n        userId,\n      ]);\n\n      if (projectCheck.rows.length === 0) {\n        res.status(404).json({ message: 'Project not found or access denied' });\n        return;\n      }\n\n      let imageIds: string[] = [];\n\n      // If specific image IDs were provided, use those\n      if (requestedImageIds && Array.isArray(requestedImageIds) && requestedImageIds.length > 0) {\n        // Verify that all requested images belong to this project\n        const verifyImagesQuery = `\n          SELECT id\n          FROM images\n          WHERE project_id = $1 AND id = ANY($2)\n        `",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/segmentation.ts",
        "start": 735,
        "end": 763,
        "startLoc": {
          "line": 735,
          "column": 5,
          "position": 5401
        },
        "endLoc": {
          "line": 763,
          "column": 10,
          "position": 5589
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/segmentation.ts",
        "start": 486,
        "end": 398,
        "startLoc": {
          "line": 486,
          "column": 2,
          "position": 3787
        },
        "endLoc": {
          "line": 398,
          "column": 14,
          "position": 3141
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ";\n        const verifyResult = await pool.query(verifyImagesQuery, [projectId, requestedImageIds]);\n\n        // Only use the image IDs that were verified to belong to this project\n        imageIds = verifyResult.rows.map((img) => img.id);\n\n        if (imageIds.length === 0) {\n          res.status(404).json({ message: 'No valid images found for segmentation' });\n          return;\n        }\n\n        if (imageIds.length < requestedImageIds.length) {\n          logger.warn('Some requested images were not found in the project', {\n            projectId,\n            requestedCount: requestedImageIds.length,\n            foundCount: imageIds.length,\n          });\n        }\n      } else {\n        // Get all images for this project\n        const imagesQuery = `\n          SELECT id\n          FROM images\n          WHERE project_id = $1\n          ORDER BY created_at DESC\n        `",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/segmentation.ts",
        "start": 763,
        "end": 788,
        "startLoc": {
          "line": 763,
          "column": 10,
          "position": 5590
        },
        "endLoc": {
          "line": 788,
          "column": 10,
          "position": 5763
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/segmentation.ts",
        "start": 398,
        "end": 423,
        "startLoc": {
          "line": 398,
          "column": 14,
          "position": 3142
        },
        "endLoc": {
          "line": 423,
          "column": 14,
          "position": 3315
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n        const imagesResult = await pool.query(imagesQuery, [projectId]);\n\n        if (imagesResult.rows.length === 0) {\n          res.status(404).json({ message: 'No images found in this project' });\n          return;\n        }\n\n        // Extract image IDs\n        imageIds = imagesResult.rows.map((img) => img.id);\n      }\n\n      // Update request body and call batch handler",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/segmentation.ts",
        "start": 788,
        "end": 800,
        "startLoc": {
          "line": 788,
          "column": 10,
          "position": 5764
        },
        "endLoc": {
          "line": 800,
          "column": 46,
          "position": 5866
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/segmentation.ts",
        "start": 423,
        "end": 435,
        "startLoc": {
          "line": 423,
          "column": 14,
          "position": 3316
        },
        "endLoc": {
          "line": 435,
          "column": 68,
          "position": 3418
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {\n    const userId = req.user?.userId;\n    const { id: projectId } = req.params;\n\n    if (!userId) return res.status(401).json({ message: 'Authentication error' });\n\n    try {\n      logger.info('Processing delete project request'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 280,
        "end": 288,
        "startLoc": {
          "line": 280,
          "column": 20,
          "position": 1900
        },
        "endLoc": {
          "line": 288,
          "column": 36,
          "position": 2005
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 202,
        "end": 210,
        "startLoc": {
          "line": 202,
          "column": 16,
          "position": 1331
        },
        "endLoc": {
          "line": 210,
          "column": 33,
          "position": 1436
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "// First check if the projects table exists\n      const projectsTableCheck = await pool.query(`\n            SELECT EXISTS (\n                SELECT 1\n                FROM information_schema.tables\n                WHERE table_schema = 'public'\n                AND table_name = 'projects'\n            )\n        `);\n\n      const projectsTableExists = projectsTableCheck.rows[0].exists;\n      if (!projectsTableExists) {\n        logger.warn('Projects table does not exist in database');\n        return res.status(404).json({\n          message: 'Project not found - projects table missing',\n          error: 'NOT_FOUND',\n        });\n      }\n\n      // Import and use projectService\n      const projectService = await import('../services/projectService');\n\n      // Delete the project using the service",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 290,
        "end": 312,
        "startLoc": {
          "line": 290,
          "column": 7,
          "position": 2021
        },
        "endLoc": {
          "line": 312,
          "column": 40,
          "position": 2134
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 228,
        "end": 250,
        "startLoc": {
          "line": 228,
          "column": 7,
          "position": 1575
        },
        "endLoc": {
          "line": 250,
          "column": 33,
          "position": 1688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "});\n\n      // First check if the projects table exists\n      const projectsTableCheck = await pool.query(`\n            SELECT EXISTS (\n                SELECT 1\n                FROM information_schema.tables\n                WHERE table_schema = 'public'\n                AND table_name = 'projects'\n            )\n        `);\n\n      const projectsTableExists = projectsTableCheck.rows[0].exists;\n      if (!projectsTableExists) {\n        logger.warn('Projects table does not exist in database');\n        return res.status(404).json({\n          message: 'Project not found - projects table missing',\n          error: 'NOT_FOUND',\n        });\n      }\n\n      // Verify the source project exists and belongs to the user",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 353,
        "end": 374,
        "startLoc": {
          "line": 353,
          "column": 7,
          "position": 2501
        },
        "endLoc": {
          "line": 374,
          "column": 60,
          "position": 2601
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 288,
        "end": 247,
        "startLoc": {
          "line": 288,
          "column": 2,
          "position": 2015
        },
        "endLoc": {
          "line": 247,
          "column": 33,
          "position": 1669
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ",\n  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {\n    const userId = req.user?.userId;\n    const { id: projectId } = req.params;\n\n    if (!userId) return res.status(401).json({ message: 'Authentication error' });\n\n    try {\n      logger.info('Processing get project images request'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 517,
        "end": 525,
        "startLoc": {
          "line": 517,
          "column": 15,
          "position": 3458
        },
        "endLoc": {
          "line": 525,
          "column": 40,
          "position": 3562
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 202,
        "end": 210,
        "startLoc": {
          "line": 202,
          "column": 2,
          "position": 1332
        },
        "endLoc": {
          "line": 210,
          "column": 33,
          "position": 1436
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ");\n\n      const projectsTableExists = projectsTableCheck.rows[0].exists;\n      if (!projectsTableExists) {\n        logger.warn('Projects table does not exist in database');\n        return res.status(404).json({\n          message: 'Project not found - projects table missing',\n          error: 'NOT_FOUND',\n        });\n      }\n\n      // Verify user has access to the project",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 535,
        "end": 546,
        "startLoc": {
          "line": 535,
          "column": 8,
          "position": 3594
        },
        "endLoc": {
          "line": 546,
          "column": 41,
          "position": 3672
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 236,
        "end": 247,
        "startLoc": {
          "line": 236,
          "column": 10,
          "position": 1591
        },
        "endLoc": {
          "line": 247,
          "column": 33,
          "position": 1669
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n  authMiddleware,\n  validate(duplicateProjectSchema),\n  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {\n    const userId = req.user?.userId;\n    const { id: originalProjectId } = req.params;\n    const { newTitle, copyFiles = true, copySegmentations = false, resetStatus = true }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projectDuplicationRoutes.ts",
        "start": 50,
        "end": 56,
        "startLoc": {
          "line": 50,
          "column": 4,
          "position": 365
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 466
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 337,
        "end": 343,
        "startLoc": {
          "line": 337,
          "column": 17,
          "position": 2320
        },
        "endLoc": {
          "line": 343,
          "column": 2,
          "position": 2420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ");\n\n      const projectsTableExists = projectsTableCheck.rows[0].exists;\n      if (!projectsTableExists) {\n        logger.warn('Projects table does not exist in database');\n        return res.status(404).json({\n          message: 'Project not found - projects table missing',\n          error: 'NOT_FOUND',\n        });\n      }\n\n      // Check if the duplication tasks table exists",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projectDuplicationRoutes.ts",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 6,
          "position": 557
        },
        "endLoc": {
          "line": 86,
          "column": 47,
          "position": 635
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 236,
        "end": 247,
        "startLoc": {
          "line": 236,
          "column": 10,
          "position": 1591
        },
        "endLoc": {
          "line": 247,
          "column": 33,
          "position": 1669
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "// Verify the source project exists and belongs to the user\n        const projectCheck = await pool.query('SELECT * FROM projects WHERE id = $1 AND user_id = $2', [\n          originalProjectId,\n          userId,\n        ]);\n\n        if (projectCheck.rows.length === 0) {\n          logger.info('Source project not found or access denied', {\n            originalProjectId,\n            userId,\n          });\n          return res.status(404).json({ message: 'Source project not found or access denied' });\n        }\n\n        // Duplicate the project synchronously",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projectDuplicationRoutes.ts",
        "start": 103,
        "end": 117,
        "startLoc": {
          "line": 103,
          "column": 9,
          "position": 712
        },
        "endLoc": {
          "line": 117,
          "column": 39,
          "position": 814
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 374,
        "end": 388,
        "startLoc": {
          "line": 374,
          "column": 7,
          "position": 2601
        },
        "endLoc": {
          "line": 388,
          "column": 79,
          "position": 2703
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ");\n      }\n\n      // Verify the source project exists and belongs to the user\n      const projectCheck = await pool.query('SELECT * FROM projects WHERE id = $1 AND user_id = $2', [\n        originalProjectId,\n        userId,\n      ]);\n\n      if (projectCheck.rows.length === 0) {\n        logger.info('Source project not found or access denied', {\n          originalProjectId,\n          userId,\n        });\n        return res.status(404).json({ message: 'Source project not found or access denied' });\n      }\n\n      // Import the duplication queue service",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projectDuplicationRoutes.ts",
        "start": 132,
        "end": 149,
        "startLoc": {
          "line": 132,
          "column": 11,
          "position": 919
        },
        "endLoc": {
          "line": 149,
          "column": 40,
          "position": 1029
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 371,
        "end": 388,
        "startLoc": {
          "line": 371,
          "column": 2,
          "position": 2593
        },
        "endLoc": {
          "line": 388,
          "column": 79,
          "position": 2703
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "// Import the duplication queue service\n      const projectDuplicationQueueService = await import('../services/projectDuplicationQueueService');\n\n      // Trigger an asynchronous duplication\n      const taskId = await projectDuplicationQueueService.default.triggerProjectDuplication(\n        pool,\n        originalProjectId,\n        userId,\n        {\n          newTitle,\n          copyFiles,\n          copySegmentations,\n          resetStatus,\n          baseDir: process.cwd(),\n        },\n      );\n\n      logger.info('Project duplication task created successfully', {\n        originalProjectId,\n        taskId,\n        userId,\n        options: { newTitle, copyFiles, copySegmentations, resetStatus },\n      });\n\n      // Return the task ID and status\n      res",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projectDuplicationRoutes.ts",
        "start": 149,
        "end": 174,
        "startLoc": {
          "line": 149,
          "column": 7,
          "position": 1029
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 1169
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projects.ts",
        "start": 403,
        "end": 428,
        "startLoc": {
          "line": 403,
          "column": 13,
          "position": 2767
        },
        "endLoc": {
          "line": 428,
          "column": 7,
          "position": 2907
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {\n    const userId = req.user?.userId;\n    const { taskId } = req.params;\n\n    if (!userId) return res.status(401).json({ message: 'Authentication error' });\n\n    try {\n      logger.info('Cancelling duplication task'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projectDuplicationRoutes.ts",
        "start": 322,
        "end": 330,
        "startLoc": {
          "line": 322,
          "column": 24,
          "position": 2168
        },
        "endLoc": {
          "line": 330,
          "column": 30,
          "position": 2270
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projectDuplicationRoutes.ts",
        "start": 265,
        "end": 273,
        "startLoc": {
          "line": 265,
          "column": 21,
          "position": 1767
        },
        "endLoc": {
          "line": 273,
          "column": 28,
          "position": 1869
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", { userId, taskId });\n\n      // Check if the duplication tasks table exists\n      const tasksTableCheck = await pool.query(`\n      SELECT EXISTS (\n        SELECT 1\n        FROM information_schema.tables\n        WHERE table_schema = 'public'\n        AND table_name = 'project_duplication_tasks'\n      )\n    `);\n\n      const tasksTableExists = tasksTableCheck.rows[0].exists;\n      if (!tasksTableExists) {\n        logger.warn('Project duplication tasks table does not exist');\n        return res.status(404).json({ message: 'Task not found - tasks table missing' });\n      }\n\n      // Import the duplication queue service\n      const projectDuplicationQueueService = await import('../services/projectDuplicationQueueService');\n\n      // Cancel the task",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/projectDuplicationRoutes.ts",
        "start": 330,
        "end": 351,
        "startLoc": {
          "line": 330,
          "column": 30,
          "position": 2271
        },
        "endLoc": {
          "line": 351,
          "column": 19,
          "position": 2389
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/projectDuplicationRoutes.ts",
        "start": 273,
        "end": 294,
        "startLoc": {
          "line": 273,
          "column": 28,
          "position": 1870
        },
        "endLoc": {
          "line": 294,
          "column": 16,
          "position": 1988
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "router.get('/me', authMiddleware, async (req: AuthenticatedRequest, res: Response) => {\n  const userId = req.user?.userId;\n\n  if (!userId) {\n    return res.status(401).json({ message: 'Authentication required' });\n  }\n\n  try {\n    // Check if performance_metrics table exists",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/performance.ts",
        "start": 69,
        "end": 77,
        "startLoc": {
          "line": 69,
          "column": 1,
          "position": 472
        },
        "endLoc": {
          "line": 77,
          "column": 45,
          "position": 560
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/users.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 134
        },
        "endLoc": {
          "line": 26,
          "column": 31,
          "position": 222
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "('/admin', authMiddleware, async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    const userId = req.user?.userId;\n\n    // Admin role check\n    if (!userId) {\n      return res.status(401).json({ success: false, message: 'Authentication required' });\n    }\n\n    // Check if user has admin role\n    try {\n      const userResult = await pool.query('SELECT role FROM users WHERE id = $1', [userId]);\n\n      if (userResult.rows.length === 0 || userResult.rows[0].role !== 'admin') {\n        return res.status(403).json({ success: false, message: 'Admin access required' });\n      }\n    } catch (roleError) {\n      logger.error('Error checking admin role:', { error: roleError });\n      // In development mode, allow access even without admin role check\n      if (process.env.NODE_ENV !== 'development') {\n        return res.status(500).json({ success: false, message: 'Error checking admin access' });\n      }\n    }\n\n    // Extract query parameters\n    const {\n      olderThan",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/logs.ts",
        "start": 313,
        "end": 339,
        "startLoc": {
          "line": 313,
          "column": 7,
          "position": 2763
        },
        "endLoc": {
          "line": 339,
          "column": 10,
          "position": 3046
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/logs.ts",
        "start": 226,
        "end": 251,
        "startLoc": {
          "line": 226,
          "column": 4,
          "position": 1906
        },
        "endLoc": {
          "line": 251,
          "column": 6,
          "position": 2188
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "if (level !== undefined) {\n      query += ` AND level = $${params.length + 1}`;\n      params.push(Number(level));\n    }\n\n    if (source) {\n      query += ` AND source = $${params.length + 1}`;\n      params.push(source);\n    }\n\n    // Execute query",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/logs.ts",
        "start": 363,
        "end": 373,
        "startLoc": {
          "line": 363,
          "column": 5,
          "position": 3224
        },
        "endLoc": {
          "line": 373,
          "column": 17,
          "position": 3309
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/logs.ts",
        "start": 258,
        "end": 268,
        "startLoc": {
          "line": 258,
          "column": 5,
          "position": 2260
        },
        "endLoc": {
          "line": 268,
          "column": 3,
          "position": 2345
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ", authMiddleware, async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    const userId = req.user?.userId;\n\n    // Admin role check\n    if (!userId) {\n      return res.status(401).json({ success: false, message: 'Authentication required' });\n    }\n\n    // Check if user has admin role (except in development)",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/logs.ts",
        "start": 388,
        "end": 397,
        "startLoc": {
          "line": 388,
          "column": 9,
          "position": 3447
        },
        "endLoc": {
          "line": 397,
          "column": 56,
          "position": 3539
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/logs.ts",
        "start": 226,
        "end": 235,
        "startLoc": {
          "line": 226,
          "column": 9,
          "position": 1908
        },
        "endLoc": {
          "line": 235,
          "column": 32,
          "position": 2000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "try {\n        const userResult = await pool.query('SELECT role FROM users WHERE id = $1', [userId]);\n\n        if (userResult.rows.length === 0 || userResult.rows[0].role !== 'admin') {\n          return res.status(403).json({ success: false, message: 'Admin access required' });\n        }\n      } catch (roleError) {\n        logger.error('Error checking admin role:', { error: roleError });\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/logs.ts",
        "start": 399,
        "end": 407,
        "startLoc": {
          "line": 399,
          "column": 7,
          "position": 3559
        },
        "endLoc": {
          "line": 407,
          "column": 7,
          "position": 3681
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/logs.ts",
        "start": 236,
        "end": 244,
        "startLoc": {
          "line": 236,
          "column": 5,
          "position": 2003
        },
        "endLoc": {
          "line": 244,
          "column": 67,
          "position": 2125
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", { error, email });\n    if (error instanceof ApiError) {\n      return res.status(error.statusCode).json({ message: error.message, code: error.code });\n    }\n    res.status(500).json({ \n      exists",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/routes/auth.ts",
        "start": 165,
        "end": 170,
        "startLoc": {
          "line": 165,
          "column": 33,
          "position": 1742
        },
        "endLoc": {
          "line": 170,
          "column": 7,
          "position": 1820
        }
      },
      "secondFile": {
        "name": "packages/backend/src/routes/auth.ts",
        "start": 36,
        "end": 40,
        "startLoc": {
          "line": 36,
          "column": 21,
          "position": 299
        },
        "endLoc": {
          "line": 40,
          "column": 8,
          "position": 375
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "=> {\n  if (bytes < 1024) {\n    return `${bytes} B`;\n  } else if (bytes < 1024 * 1024) {\n    return `${(bytes / 1024).toFixed(2)} KB`;\n  } else if (bytes < 1024 * 1024 * 1024) {\n    return `${(bytes / (1024 * 1024)).toFixed(2)} MB`;\n  } else {\n    return `${(bytes / (1024 * 1024 * 1024)).toFixed(2)} GB`;\n  }\n};\n\n/**\n * Get normalized path for metrics (remove IDs and params)\n */",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/middleware/performance.ts",
        "start": 149,
        "end": 163,
        "startLoc": {
          "line": 149,
          "column": 2,
          "position": 894
        },
        "endLoc": {
          "line": 163,
          "column": 4,
          "position": 1057
        }
      },
      "secondFile": {
        "name": "packages/backend/src/middleware/performanceMiddleware.ts",
        "start": 42,
        "end": 56,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 234
        },
        "endLoc": {
          "line": 56,
          "column": 4,
          "position": 397
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "const httpRequestDurationSeconds = new promClient.Histogram({\n  name: 'http_request_duration_seconds',\n  help: 'Duration of HTTP requests in seconds',\n  labelNames: ['method', 'path', 'status'],\n  buckets: [0.01, 0.05, 0.1, 0.5, 1, 2, 5, 10],\n  registers: [register],\n});\n\n// Create active requests gauge",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/middleware/metricsMiddleware.ts",
        "start": 20,
        "end": 28,
        "startLoc": {
          "line": 20,
          "column": 1,
          "position": 132
        },
        "endLoc": {
          "line": 28,
          "column": 32,
          "position": 219
        }
      },
      "secondFile": {
        "name": "packages/backend/src/middleware/performance.ts",
        "start": 69,
        "end": 77,
        "startLoc": {
          "line": 69,
          "column": 1,
          "position": 329
        },
        "endLoc": {
          "line": 77,
          "column": 6,
          "position": 416
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\n  const client = await pool.connect();\n\n  try {\n    await client.query('BEGIN');\n    const result = await callback(client);\n    await client.query('COMMIT');\n    return result;\n  } catch (error) {\n    await client.query('ROLLBACK');\n    throw",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/db/optimized.ts",
        "start": 311,
        "end": 321,
        "startLoc": {
          "line": 311,
          "column": 2,
          "position": 2321
        },
        "endLoc": {
          "line": 321,
          "column": 6,
          "position": 2411
        }
      },
      "secondFile": {
        "name": "packages/backend/src/db/optimizedQueries.ts",
        "start": 94,
        "end": 103,
        "startLoc": {
          "line": 94,
          "column": 2,
          "position": 655
        },
        "endLoc": {
          "line": 103,
          "column": 7,
          "position": 744
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    const userId = req.user?.userId;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const {",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 60,
        "end": 67,
        "startLoc": {
          "line": 60,
          "column": 2,
          "position": 473
        },
        "endLoc": {
          "line": 67,
          "column": 2,
          "position": 554
        }
      },
      "secondFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 2,
          "position": 268
        },
        "endLoc": {
          "line": 44,
          "column": 8,
          "position": 349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    const userId = req.user?.userId;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const profile = await userProfileService.createUserProfile",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 85,
        "end": 92,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 724
        },
        "endLoc": {
          "line": 92,
          "column": 18,
          "position": 813
        }
      },
      "secondFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 2,
          "position": 268
        },
        "endLoc": {
          "line": 44,
          "column": 15,
          "position": 357
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    const userId = req.user?.userId;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const profile = await userProfileService.updateUserProfile",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 104,
        "end": 111,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 902
        },
        "endLoc": {
          "line": 111,
          "column": 18,
          "position": 991
        }
      },
      "secondFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 2,
          "position": 268
        },
        "endLoc": {
          "line": 44,
          "column": 15,
          "position": 357
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    const userId = req.user?.userId;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const settings",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 204,
        "end": 211,
        "startLoc": {
          "line": 204,
          "column": 2,
          "position": 1822
        },
        "endLoc": {
          "line": 211,
          "column": 9,
          "position": 1903
        }
      },
      "secondFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 2,
          "position": 268
        },
        "endLoc": {
          "line": 44,
          "column": 8,
          "position": 349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "= async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    const userId = req.user?.userId;\n    const { key } = req.params;\n    \n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    await",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 264,
        "end": 273,
        "startLoc": {
          "line": 264,
          "column": 2,
          "position": 2379
        },
        "endLoc": {
          "line": 273,
          "column": 6,
          "position": 2476
        }
      },
      "secondFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 175,
        "end": 184,
        "startLoc": {
          "line": 175,
          "column": 2,
          "position": 1567
        },
        "endLoc": {
          "line": 184,
          "column": 6,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".reduce((acc, setting) => {\n      acc[setting.setting_key] = {\n        value: setting.setting_value,\n        category: setting.category,\n        updated_at: setting.updated_at\n      };\n      return acc;\n    }, {} as Record<string, any>);\n\n    res.json(settingsObj);\n  } catch (error) {\n    logger.error('Error batch updating user settings:'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 305,
        "end": 316,
        "startLoc": {
          "line": 305,
          "column": 16,
          "position": 2820
        },
        "endLoc": {
          "line": 316,
          "column": 38,
          "position": 2927
        }
      },
      "secondFile": {
        "name": "packages/backend/src/controllers/userProfileController.ts",
        "start": 214,
        "end": 225,
        "startLoc": {
          "line": 214,
          "column": 9,
          "position": 1933
        },
        "endLoc": {
          "line": 225,
          "column": 32,
          "position": 2040
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "= async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const imageId = req.params.imageId;\n    const versionStr = req.params.version;\n\n    if (!imageId) {\n      throw new ApiError(400, 'Image ID is required');\n    }\n\n    if (!versionStr) {\n      throw new ApiError(400, 'Version is required');\n    }\n\n    const version = parseInt(versionStr, 10);\n    if (isNaN(version) || version <= 0) {\n      throw new ApiError(400, 'Invalid version number');\n    }\n\n    const result",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/controllers/segmentationController.ts",
        "start": 163,
        "end": 181,
        "startLoc": {
          "line": 163,
          "column": 2,
          "position": 1212
        },
        "endLoc": {
          "line": 181,
          "column": 7,
          "position": 1386
        }
      },
      "secondFile": {
        "name": "packages/backend/src/controllers/segmentationController.ts",
        "start": 134,
        "end": 152,
        "startLoc": {
          "line": 134,
          "column": 2,
          "position": 974
        },
        "endLoc": {
          "line": 152,
          "column": 12,
          "position": 1148
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "export interface UserProfile {\n  user_id: string;\n  username: string | null;\n  full_name: string | null;\n  title: string | null;\n  organization: string | null;\n  bio: string | null;\n  location: string | null;\n  avatar_url: string | null;\n  preferred_language: string | null;\n  preferred_theme",
      "tokens": 0,
      "firstFile": {
        "name": "packages/types/src/user.ts",
        "start": 14,
        "end": 24,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 64
        },
        "endLoc": {
          "line": 24,
          "column": 16,
          "position": 168
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/types/userProfile.ts",
        "start": 1,
        "end": 11,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 11,
          "column": 94,
          "position": 104
        }
      }
    },
    {
      "format": "typescript",
      "lines": 46,
      "fragment": "/**\n * User and authentication related types\n */\nexport interface User {\n    id: string;\n    email: string;\n    name?: string;\n    role?: 'user' | 'admin';\n    created_at?: string;\n    updated_at?: string;\n}\nexport interface UserProfile {\n    user_id: string;\n    username: string | null;\n    full_name: string | null;\n    title: string | null;\n    organization: string | null;\n    bio: string | null;\n    location: string | null;\n    avatar_url: string | null;\n    preferred_language: string | null;\n    preferred_theme?: 'light' | 'dark' | 'system' | null;\n    storage_limit_bytes?: number | null;\n    storage_used_bytes?: number | null;\n}\nexport interface LoginResponse {\n    token: string;\n    user: User;\n}\nexport interface RefreshTokenResponse {\n    token: string;\n    expires_at: string;\n}\nexport type UserProfileUpdatePayload = Partial<Omit<UserProfile, 'user_id'>>;\nexport interface AccessRequestPayload {\n    email: string;\n    name?: string;\n    organization?: string;\n    reason?: string;\n}\nexport interface AccessRequestResponse {\n    id: string;\n    email: string;\n    status: string;\n    created_at: string;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/types/src/user.d.ts",
        "start": 1,
        "end": 46,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 355
        }
      },
      "secondFile": {
        "name": "packages/types/src/user.ts",
        "start": 1,
        "end": 53,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 362
        }
      }
    },
    {
      "format": "typescript",
      "lines": 48,
      "fragment": "}\nexport interface SegmentationData {\n    id: string;\n    image_id?: string;\n    imageId?: string;\n    status?: ImageStatus;\n    result_data?: {\n        polygons: Polygon[];\n        [key: string]: unknown;\n    };\n    polygons: Polygon[];\n    created_at?: string;\n    updated_at?: string;\n    parameters?: {\n        model?: string;\n        threshold?: number;\n        [key: string]: unknown;\n    };\n    [key: string]: unknown;\n}\nexport interface SegmentationResult {\n    id: string;\n    polygons: Polygon[];\n    [key: string]: unknown;\n}\nexport interface SegmentationResultData {\n    polygons?: Polygon[];\n    contours?: Array<Array<[number, number]>>;\n    hierarchy?: Array<[number, number, number, number]>;\n    imageWidth: number;\n    imageHeight: number;\n    metadata?: {\n        source?: 'resunet' | 'api' | 'empty' | 'cv2';\n        timestamp?: string;\n        modelType?: string;\n        [key: string]: unknown;\n    };\n}\nexport interface SegmentationApiResponse {\n    image_id: string;\n    status: ImageStatus;\n    result_data?: SegmentationResultData | null;\n    parameters?: Record<string, unknown> | null;\n    created_at: string;\n    updated_at: string;\n    error?: string | null;\n}\nexport type CanvasSegmentationData = SegmentationResultData;",
      "tokens": 0,
      "firstFile": {
        "name": "packages/types/src/segmentation.d.ts",
        "start": 12,
        "end": 59,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 91
        },
        "endLoc": {
          "line": 59,
          "column": 2,
          "position": 502
        }
      },
      "secondFile": {
        "name": "packages/types/src/segmentation.ts",
        "start": 15,
        "end": 67,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 93
        },
        "endLoc": {
          "line": 67,
          "column": 2,
          "position": 509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "/**\n * Project related types\n */\nexport interface Project {\n    id: string;\n    user_id: string;\n    title: string;\n    description: string | null;\n    created_at: string;\n    updated_at: string;\n    thumbnail_url?: string | null;\n    image_count?: number;\n}\nexport type ProjectCreatePayload = Pick<Project, 'title' | 'description'>;\nexport interface ProjectStatsResponse {\n    user_id: string;\n    project_count: number;\n    image_count: number;\n    segmentation_count: number;\n    recently_updated_projects: Array<{\n        id: string;\n        title: string;\n        updated_at: string;\n    }>;\n    storage_usage: {\n        total_bytes: number;\n        images_bytes: number;\n        segmentations_bytes: number;\n    };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/types/src/project.d.ts",
        "start": 1,
        "end": 30,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 30,
          "column": 2,
          "position": 200
        }
      },
      "secondFile": {
        "name": "packages/types/src/project.ts",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 203
        }
      }
    },
    {
      "format": "typescript",
      "lines": 44,
      "fragment": "/**\n * Types related to polygons and geometric objects\n */\nexport interface Point {\n    x: number;\n    y: number;\n}\nexport interface Polygon {\n    id: string;\n    points: Point[];\n    type?: 'external' | 'internal';\n    class?: string;\n    color?: string;\n    parentId?: string;\n    [key: string]: unknown;\n}\nexport interface VertexHoverInfo {\n    polygonId: string | null;\n    vertexIndex: number | null;\n}\nexport interface VertexDragInfo {\n    polygonId: string | null;\n    vertexIndex: number | null;\n    isDragging: boolean;\n}\nexport interface DragInfo {\n    isDragging: boolean;\n    startX: number;\n    startY: number;\n    lastX: number;\n    lastY: number;\n}\nexport interface TempPointsInfo {\n    points: Point[];\n    polygonId?: string | null;\n    startIndex?: number | null;\n    endIndex?: number | null;\n}\nexport interface TransformState {\n    zoom: number;\n    translateX: number;\n    translateY: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "packages/types/src/polygon.d.ts",
        "start": 1,
        "end": 44,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 44,
          "column": 8,
          "position": 304
        }
      },
      "secondFile": {
        "name": "packages/types/src/polygon.ts",
        "start": 1,
        "end": 52,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 52,
          "column": 5,
          "position": 312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 57,
      "fragment": "/**\n * Image related types\n */\nimport { ImageStatus } from './segmentation';\nexport interface ImageData {\n    id: string;\n    name: string;\n    width: number;\n    height: number;\n    src: string;\n    storage_path?: string;\n    storage_path_full?: string;\n    project_id?: string;\n    projectId?: string;\n    user_id?: string;\n    created_at?: string;\n    updated_at?: string;\n    status?: ImageStatus;\n    actualId?: string;\n    [key: string]: unknown;\n}\nexport interface Image {\n    id: string;\n    project_id: string;\n    user_id: string;\n    name: string;\n    storage_path: string;\n    thumbnail_path: string | null;\n    width: number | null;\n    height: number | null;\n    metadata: Record<string, unknown> | null;\n    status: ImageStatus;\n    created_at: string;\n    updated_at: string;\n    segmentation_result?: {\n        path?: string | null;\n    } | null;\n}\nexport interface ProjectImage {\n    id: string;\n    project_id: string;\n    name: string;\n    url: string;\n    thumbnail_url: string | null;\n    createdAt: Date;\n    updatedAt: Date;\n    width: number | null;\n    height: number | null;\n    segmentationStatus: ImageStatus;\n    segmentationResultPath?: string | null;\n    imageUuid?: string;\n    error?: string;\n    _needsIndexedDBLoad?: boolean;\n    _needsIndexedDBThumbLoad?: boolean;\n    _tempUrl?: string;\n    _hasIndexedDBImage?: boolean;\n    _hasIndexedDBThumb",
      "tokens": 0,
      "firstFile": {
        "name": "packages/types/src/image.d.ts",
        "start": 1,
        "end": 57,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 57,
          "column": 19,
          "position": 438
        }
      },
      "secondFile": {
        "name": "packages/types/src/image.ts",
        "start": 1,
        "end": 60,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 60,
          "column": 31,
          "position": 441
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": " />\n          </ErrorBoundary>\n        </ProtectedRoute>\n      }\n    />\n    {/* Ensure both URL formats work properly */}\n    <Route\n      path=\"/projects/:id\"\n      element={\n        <ProtectedRoute>\n          <ErrorBoundary componentName=\"ProjectDetailPage\">\n            <ProjectDetail />\n          </ErrorBoundary>\n        </ProtectedRoute>\n      }\n    />\n    <Route\n      path=\"/images/:imageId/segmentation\"\n      element={\n        <ProtectedRoute>\n          <ErrorBoundary componentName=\"SegmentationPage",
      "tokens": 0,
      "firstFile": {
        "name": "packages/frontend/src/App.tsx",
        "start": 374,
        "end": 394,
        "startLoc": {
          "line": 374,
          "column": 14,
          "position": 2645
        },
        "endLoc": {
          "line": 394,
          "column": 17,
          "position": 2734
        }
      },
      "secondFile": {
        "name": "packages/frontend/src/App.tsx",
        "start": 363,
        "end": 384,
        "startLoc": {
          "line": 363,
          "column": 10,
          "position": 2595
        },
        "endLoc": {
          "line": 384,
          "column": 18,
          "position": 2689
        }
      }
    },
    {
      "format": "javascript",
      "lines": 9,
      "fragment": "const pool = new Pool({\n  host: process.env.DB_HOST || 'db',\n  port: process.env.DB_PORT || 5432,\n  database: process.env.DB_NAME || 'spheroseg',\n  user: process.env.DB_USER || 'postgres',\n  password: process.env.DB_PASSWORD || 'postgres',\n});\n\n// JWT secret",
      "tokens": 0,
      "firstFile": {
        "name": "packages/backend/src/simple-server.js",
        "start": 23,
        "end": 31,
        "startLoc": {
          "line": 23,
          "column": 1,
          "position": 145
        },
        "endLoc": {
          "line": 31,
          "column": 14,
          "position": 237
        }
      },
      "secondFile": {
        "name": "packages/backend/src/scripts/create-test-user.js",
        "start": 13,
        "end": 21,
        "startLoc": {
          "line": 13,
          "column": 1,
          "position": 46
        },
        "endLoc": {
          "line": 21,
          "column": 6,
          "position": 138
        }
      }
    }
  ],
  "filename": "/home/cvat/spheroseg/spheroseg/node_modules/@jscpd/html-reporter/dist/templates/main.pug"
}