{
  "summary": {
    "total": 327,
    "byRisk": {
      "high": 117,
      "medium": 210,
      "low": 0
    },
    "priorityFiles": 82
  },
  "findings": [
    {
      "file": "packages/backend/src/__tests__/types/mocks.ts",
      "line": 26,
      "category": "function-param",
      "risk": "HIGH",
      "code": "(text: string, values?: any[]) => Promise<QueryResult<any>>",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/__tests__/types/mocks.ts",
      "line": 26,
      "category": "array-any",
      "risk": "HIGH",
      "code": "(text: string, values?: any[]) => Promise<QueryResult<any>>",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/projectShareService.ts",
      "line": 61,
      "category": "array-any",
      "risk": "HIGH",
      "code": "private async query<T = any>(text: string, params?: any[]): Promise<import('pg').QueryResult<T>> {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/tokenService.ts",
      "line": 562,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const params: any[] = [userId];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/tokenService.ts",
      "line": 616,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const params: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userProfileService.ts",
      "line": 213,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const updateValues: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userStatsService.ts",
      "line": 24,
      "category": "array-any",
      "risk": "HIGH",
      "code": "recentActivity: any[];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userStatsService.ts",
      "line": 25,
      "category": "array-any",
      "risk": "HIGH",
      "code": "recentProjects: any[];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userStatsService.ts",
      "line": 26,
      "category": "array-any",
      "risk": "HIGH",
      "code": "recentImages: any[];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/websocketBatcher.ts",
      "line": 6,
      "category": "api-response",
      "risk": "HIGH",
      "code": "data: any;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 1247,
      "category": "type-assertion",
      "risk": "HIGH",
      "code": "annotations: [] as any[],",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 33,
      "category": "function-param",
      "risk": "HIGH",
      "code": "const tempWriteFile = function (wb: any, filename: string, opts: any) {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 204,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const normalizePolygons = (inputPolygons: any[]): Polygon[] => {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 680,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const annotations: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 681,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const cocoImages: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 1242,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const items: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/abTestingService.secure.ts",
      "line": 81,
      "category": "array-any",
      "risk": "HIGH",
      "code": "private metricsBuffer: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/abTestingService.ts",
      "line": 136,
      "category": "array-any",
      "risk": "HIGH",
      "code": "private metricsBuffer: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/performanceMetrics.ts",
      "line": 162,
      "category": "type-assertion",
      "risk": "HIGH",
      "code": "const clsEntries = performance.getEntriesByType('layout-shift') as any[];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/performanceMetrics.ts",
      "line": 172,
      "category": "type-assertion",
      "risk": "HIGH",
      "code": "const fidEntries = performance.getEntriesByType('first-input') as any[];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/performanceMetrics.ts",
      "line": 178,
      "category": "type-assertion",
      "risk": "HIGH",
      "code": "const lcpEntries = performance.getEntriesByType('largest-contentful-paint') as any[];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/performanceMetrics.ts",
      "line": 215,
      "category": "type-assertion",
      "risk": "HIGH",
      "code": "} as any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/__tests__/types/mocks.ts",
      "line": 26,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "(text: string, values?: any[]) => Promise<QueryResult<any>>",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/__tests__/types/mocks.ts",
      "line": 26,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "(text: string, values?: any[]) => Promise<QueryResult<any>>",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/cacheService.ts",
      "line": 314,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "async getStats(): Promise<any> {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/cdnService.ts",
      "line": 8,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "let AWS: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/cdnService.ts",
      "line": 63,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private cloudfront: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/cdnService.ts",
      "line": 64,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private s3: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/cdnService.ts",
      "line": 135,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const params: any = {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/cdnService.ts",
      "line": 169,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const params: any = {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/databaseOptimizationService.ts",
      "line": 83,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "async getUserStatsOptimized(userId: string): Promise<any> {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/databaseOptimizationService.ts",
      "line": 221,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "): Promise<any> {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/databaseOptimizationService.ts",
      "line": 316,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "): Promise<any> {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/databaseOptimizationService.ts",
      "line": 544,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "getMetrics(): any {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/imageProcessingService.ts",
      "line": 39,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "exif?: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/performanceMonitor.ts",
      "line": 239,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "async getPerformanceSummary(): Promise<any> {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/performanceMonitor.ts",
      "line": 390,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "private async getDatabasePoolStats(): Promise<any> {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/performanceMonitor.ts",
      "line": 275,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private calculateApiSummary(metrics: APIMetrics[]): any {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/performanceMonitor.ts",
      "line": 326,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private calculateDbSummary(metrics: DatabaseMetrics[]): any {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/performanceMonitor.ts",
      "line": 354,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private calculateSystemSummary(metrics: SystemMetrics[]): any {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/projectShareService.ts",
      "line": 61,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private async query<T = any>(text: string, params?: any[]): Promise<import('pg').QueryResult<T>> {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/segmentationQueue.ts",
      "line": 14,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "parameters: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/segmentationQueueService.ts",
      "line": 56,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "parameters: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/segmentationQueueService.ts",
      "line": 61,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "result?: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/segmentationService.ts",
      "line": 38,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "export const getSegmentationQueueStatus = async (): Promise<any> => {",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/taskQueueService.ts",
      "line": 28,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "export type TaskExecutor<T> = (task: Task<T>) => Promise<any>;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/taskQueueService.ts",
      "line": 55,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "result?: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/tokenService.ts",
      "line": 562,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const params: any[] = [userId];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/tokenService.ts",
      "line": 616,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const params: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userProfileService.ts",
      "line": 44,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "setting_value: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userProfileService.ts",
      "line": 213,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const updateValues: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userStatsService.ts",
      "line": 24,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "recentActivity: any[];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userStatsService.ts",
      "line": 25,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "recentProjects: any[];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userStatsService.ts",
      "line": 26,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "recentImages: any[];",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/userStatsServiceOptimized.ts",
      "line": 8,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "query(text: string, params?: unknown[]): Promise<any>;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/websocketBatcher.ts",
      "line": 6,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "data: any;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/services/websocketBatcher.ts",
      "line": 196,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private compressPayload(data: unknown): any {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/api/projectImages.ts",
      "line": 155,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "const parsedImages = JSON.parse(storedImages) as Array<any>;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/hooks/useSegmentationUpdates.ts",
      "line": 84,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "let responseData: any;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/hooks/useSegmentationUpdates.ts",
      "line": 178,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "let responseData: any;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/hooks/useUnifiedWebSocket.ts",
      "line": 40,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "emitWithAck: (event: string, ...args: unknown[]) => Promise<any>;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/hooks/useUnifiedWebSocket.ts",
      "line": 297,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "const [queueStatus, setQueueStatus] = useState<any>(null);",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 33,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const tempWriteFile = function (wb: any, filename: string, opts: any) {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 33,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const tempWriteFile = function (wb: any, filename: string, opts: any) {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 204,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const normalizePolygons = (inputPolygons: any[]): Polygon[] => {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 680,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const annotations: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 681,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const cocoImages: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/pages/export/hooks/useExportFunctions.ts",
      "line": 1242,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const items: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/abTestingService.secure.ts",
      "line": 81,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private metricsBuffer: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/abTestingService.secure.ts",
      "line": 202,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "public getFeatureFlag(key: string, defaultValue: unknown = false): any {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/abTestingService.ts",
      "line": 56,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "value: any;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/abTestingService.ts",
      "line": 113,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "value?: any;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/abTestingService.ts",
      "line": 136,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private metricsBuffer: any[] = [];",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/abTestingService.ts",
      "line": 223,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "public getFeatureFlag(key: string, defaultValue: unknown = false): any {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/types.ts",
      "line": 47,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "value: any;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/abTesting/types.ts",
      "line": 108,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "value?: any;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/unifiedCacheService.ts",
      "line": 612,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "private async compress(value: unknown): Promise<any> {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/unifiedCacheService.ts",
      "line": 618,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "private async encrypt(value: unknown): Promise<any> {",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/unifiedImageProcessingService.ts",
      "line": 94,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "private processingQueue: Map<string, Promise<any>> = new Map();",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/unifiedModalService.tsx",
      "line": 23,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "component: React.ComponentType<any>;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/services/unifiedModalService.tsx",
      "line": 81,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "validationSchema?: any;",
      "isPriority": true
    },
    {
      "file": "packages/frontend/src/types/lazyComponents.ts",
      "line": 12,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "default: ComponentType<any>;",
      "isPriority": true
    },
    {
      "file": "packages/backend/src/__tests__/factories/image.factory.ts",
      "line": 96,
      "category": "api-response",
      "risk": "HIGH",
      "code": "export function createMockWebSocketEvent(type: string, data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/__tests__/factories/image.factory.ts",
      "line": 96,
      "category": "function-param",
      "risk": "HIGH",
      "code": "export function createMockWebSocketEvent(type: string, data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/__tests__/helpers/testHelpers.ts",
      "line": 59,
      "category": "function-param",
      "risk": "HIGH",
      "code": "app.use((req: any, _res, next) => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/db/unified.ts",
      "line": 99,
      "category": "array-any",
      "risk": "HIGH",
      "code": "params?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/db/unified.ts",
      "line": 110,
      "category": "array-any",
      "risk": "HIGH",
      "code": "params?: any[],",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 21,
      "category": "function-param",
      "risk": "HIGH",
      "code": "recordApiResponseTime(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 25,
      "category": "function-param",
      "risk": "HIGH",
      "code": "recordDatabaseQuery(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 29,
      "category": "function-param",
      "risk": "HIGH",
      "code": "recordFileOperation(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 33,
      "category": "function-param",
      "risk": "HIGH",
      "code": "recordMLInference(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 37,
      "category": "function-param",
      "risk": "HIGH",
      "code": "recordMemoryHeap(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 41,
      "category": "function-param",
      "risk": "HIGH",
      "code": "recordCPUUsage(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cache.ts",
      "line": 76,
      "category": "api-response",
      "risk": "HIGH",
      "code": "res.send = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cache.ts",
      "line": 76,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.send = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 33,
      "category": "api-response",
      "risk": "HIGH",
      "code": "res.send = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 38,
      "category": "api-response",
      "risk": "HIGH",
      "code": "res.json = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 98,
      "category": "api-response",
      "risk": "HIGH",
      "code": "res.json = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 33,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.send = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 38,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.json = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 43,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.sendFile = function (path: string, options?: any, callback?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 98,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.json = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/databaseOptimizationMiddleware.ts",
      "line": 64,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.send = function (body?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/databaseOptimizationMiddleware.ts",
      "line": 177,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.send = function (body?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/enhancedCache.ts",
      "line": 208,
      "category": "api-response",
      "risk": "HIGH",
      "code": "res.json = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/enhancedCache.ts",
      "line": 208,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.json = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/i18n.ts",
      "line": 43,
      "category": "array-any",
      "risk": "HIGH",
      "code": "export function getValidationErrors(errors: unknown[], req: Request): any[] {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/performanceMonitoring.ts",
      "line": 492,
      "category": "api-response",
      "risk": "HIGH",
      "code": "res.send = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/performanceMonitoring.ts",
      "line": 492,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.send = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/requestLogger.ts",
      "line": 42,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.end = function (chunk?: any, encoding?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/requestLogger.ts",
      "line": 59,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.json = function (obj?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/validationMiddleware.ts",
      "line": 13,
      "category": "object-any",
      "risk": "HIGH",
      "code": "const dataToValidate: { [key: string]: any } = {};",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/monitoring/performanceTracker.ts",
      "line": 518,
      "category": "function-param",
      "risk": "HIGH",
      "code": "res.end = function (chunk?: any, encoding?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/monitoring/unified/index.ts",
      "line": 279,
      "category": "array-any",
      "risk": "HIGH",
      "code": "private metricsQueue: any[] = [];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/routes/logs.ts",
      "line": 259,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const params: any[] = [];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/routes/logs.ts",
      "line": 360,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const params: any[] = [];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/security/middleware/advancedRateLimiter.ts",
      "line": 211,
      "category": "array-any",
      "risk": "HIGH",
      "code": "const errors: any[] = [];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/security/utils/securityHelpers.ts",
      "line": 206,
      "category": "api-response",
      "risk": "HIGH",
      "code": "export const generateTimeLimitedToken = (data: any, expiryMinutes: number = 30): string => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockAuth.ts",
      "line": 418,
      "category": "type-assertion",
      "risk": "HIGH",
      "code": "} as any,",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 32,
      "category": "array-any",
      "risk": "HIGH",
      "code": "values?: any[];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 43,
      "category": "array-any",
      "risk": "HIGH",
      "code": "query<T = any>(queryText: QueryParams, values?: any[]): Promise<QueryResult<T>>;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 48,
      "category": "array-any",
      "risk": "HIGH",
      "code": "query<T = any>(queryText: QueryParams, values?: any[]): Promise<QueryResult<T>>;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 158,
      "category": "array-any",
      "risk": "HIGH",
      "code": "query: (text: QueryParams, values?: any[]): Promise<QueryResult> => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 163,
      "category": "array-any",
      "risk": "HIGH",
      "code": "query: (text: QueryParams, values?: any[]): Promise<QueryResult> => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 192,
      "category": "array-any",
      "risk": "HIGH",
      "code": "values: any[];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponse.ts",
      "line": 32,
      "category": "array-any",
      "risk": "HIGH",
      "code": "details?: any[];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponse.ts",
      "line": 111,
      "category": "array-any",
      "risk": "HIGH",
      "code": "details?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponse.ts",
      "line": 131,
      "category": "array-any",
      "risk": "HIGH",
      "code": "details?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponse.ts",
      "line": 169,
      "category": "array-any",
      "risk": "HIGH",
      "code": "details?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponsei18n.ts",
      "line": 109,
      "category": "array-any",
      "risk": "HIGH",
      "code": "details?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponsei18n.ts",
      "line": 131,
      "category": "array-any",
      "risk": "HIGH",
      "code": "errors: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/errorHandling/index.ts",
      "line": 62,
      "category": "api-response",
      "risk": "HIGH",
      "code": "const response: any = {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/__mocks__/polygonWorker.ts",
      "line": 27,
      "category": "api-response",
      "risk": "HIGH",
      "code": "let result: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/charts/BarChartContainer.tsx",
      "line": 19,
      "category": "api-response",
      "risk": "HIGH",
      "code": "data: any[];",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/charts/BarChartContainer.tsx",
      "line": 19,
      "category": "array-any",
      "risk": "HIGH",
      "code": "data: any[];",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/charts/PieChartContainer.tsx",
      "line": 5,
      "category": "api-response",
      "risk": "HIGH",
      "code": "data: any[];",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/charts/PieChartContainer.tsx",
      "line": 5,
      "category": "array-any",
      "risk": "HIGH",
      "code": "data: any[];",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/project/DebugSegmentationThumbnail.tsx",
      "line": 6,
      "category": "api-response",
      "risk": "HIGH",
      "code": "const segmentationCache = new Map<string, { data: any; timestamp: number }>();",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/upload/UnifiedFileUploader.tsx",
      "line": 47,
      "category": "array-any",
      "risk": "HIGH",
      "code": "files: any[];",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
      "line": 9,
      "category": "api-response",
      "risk": "HIGH",
      "code": "response: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
      "line": 49,
      "category": "api-response",
      "risk": "HIGH",
      "code": "const createMockResponse = (data: any, status = 200): AxiosResponse => {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
      "line": 379,
      "category": "api-response",
      "risk": "HIGH",
      "code": "response: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
      "line": 55,
      "category": "type-assertion",
      "risk": "HIGH",
      "code": "config: {} as any,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
      "line": 68,
      "category": "type-assertion",
      "risk": "HIGH",
      "code": "config: {} as any,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 63,
      "category": "function-param",
      "risk": "HIGH",
      "code": "vi.mock('recharts', () => ({",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 65,
      "category": "function-param",
      "risk": "HIGH",
      "code": "Bar: ({ dataKey, name }: any) => <div data-testid={`bar-${dataKey}`} data-name={name}></div>,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 69,
      "category": "function-param",
      "risk": "HIGH",
      "code": "ResponsiveContainer: ({ children }: any) => <div data-testid=\"responsive-container\">{children}</div>,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 70,
      "category": "function-param",
      "risk": "HIGH",
      "code": "PieChart: ({ children }: any) => <div data-testid=\"pie-chart\">{children}</div>,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 71,
      "category": "function-param",
      "risk": "HIGH",
      "code": "Pie: ({ data, dataKey, label }: any) => (",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 101,
      "category": "function-param",
      "risk": "HIGH",
      "code": "export function verifyBarChartPresent(screen: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 107,
      "category": "function-param",
      "risk": "HIGH",
      "code": "export function verifyBarCount(screen: any, expectedCount: number) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 112,
      "category": "function-param",
      "risk": "HIGH",
      "code": "export function verifyPieChartPresent(screen: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 117,
      "category": "function-param",
      "risk": "HIGH",
      "code": "export function verifyChartTabs(screen: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 122,
      "category": "function-param",
      "risk": "HIGH",
      "code": "export function verifyEmptyState(screen: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/statusbar/__tests__/statusBarTestUtils.tsx",
      "line": 26,
      "category": "function-param",
      "risk": "HIGH",
      "code": "export function verifyStatusBarValues(",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/toolbar/__tests__/toolbarTestUtils.tsx",
      "line": 32,
      "category": "function-param",
      "risk": "HIGH",
      "code": "export function verifyToolbarButtonsAction(",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/toolbar/__tests__/toolbarTestUtils.tsx",
      "line": 57,
      "category": "function-param",
      "risk": "HIGH",
      "code": "export function testAllToolbarButtons(screen: any, props = defaultToolbarV2Props) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 55,
      "category": "function-param",
      "risk": "HIGH",
      "code": "const Icon = React.forwardRef((props: any, ref: any) =>",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 297,
      "category": "function-param",
      "risk": "HIGH",
      "code": "useTranslation: () => ({",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 784,
      "category": "function-param",
      "risk": "HIGH",
      "code": "vi.mock('@/lib/radix-optimized', () => ({",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 786,
      "category": "function-param",
      "risk": "HIGH",
      "code": "SelectItem: ({ children, value }: any) =>",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 788,
      "category": "function-param",
      "risk": "HIGH",
      "code": "SelectTrigger: ({ children }: any) => React.createElement('button', { 'data-testid': 'select-trigger' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 789,
      "category": "function-param",
      "risk": "HIGH",
      "code": "SelectValue: ({ placeholder }: any) => React.createElement('span', { 'data-testid': 'select-value' }, placeholder),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 790,
      "category": "function-param",
      "risk": "HIGH",
      "code": "SelectRoot: ({ children }: any) => React.createElement('div', { 'data-testid': 'select-root' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 791,
      "category": "function-param",
      "risk": "HIGH",
      "code": "DialogRoot: ({ children, open }: any) =>",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 793,
      "category": "function-param",
      "risk": "HIGH",
      "code": "DialogTrigger: ({ children }: any) => React.createElement('button', { 'data-testid': 'dialog-trigger' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 794,
      "category": "function-param",
      "risk": "HIGH",
      "code": "DialogPortal: ({ children }: any) => React.createElement('div', { 'data-testid': 'dialog-portal' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 795,
      "category": "function-param",
      "risk": "HIGH",
      "code": "DialogOverlay: ({ children }: any) => React.createElement('div', { 'data-testid': 'dialog-overlay' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 796,
      "category": "function-param",
      "risk": "HIGH",
      "code": "DialogContent: ({ children }: any) => React.createElement('div', { 'data-testid': 'dialog-content' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 797,
      "category": "function-param",
      "risk": "HIGH",
      "code": "DialogTitle: ({ children }: any) => React.createElement('h2', { 'data-testid': 'dialog-title' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 798,
      "category": "function-param",
      "risk": "HIGH",
      "code": "DialogDescription: ({ children }: any) => React.createElement('p', { 'data-testid': 'dialog-description' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 799,
      "category": "function-param",
      "risk": "HIGH",
      "code": "DialogClose: ({ children }: any) => React.createElement('button', { 'data-testid': 'dialog-close' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 383,
      "category": "function-param",
      "risk": "HIGH",
      "code": "constructor(message: string, code?: string, config?: any, request?: any, response?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-utils/apiClientMock.ts",
      "line": 128,
      "category": "api-response",
      "risk": "HIGH",
      "code": "const mockSuccess = (method: keyof typeof mockApi, path: string, data: any) => {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-utils/apiClientMock.ts",
      "line": 128,
      "category": "function-param",
      "risk": "HIGH",
      "code": "const mockSuccess = (method: keyof typeof mockApi, path: string, data: any) => {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-utils/test-data.ts",
      "line": 100,
      "category": "type-assertion",
      "risk": "HIGH",
      "code": "const error = new Error(message) as any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/fix-chinese-formatting.ts",
      "line": 925,
      "category": "api-response",
      "risk": "HIGH",
      "code": "const result: any = {};",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/__tests__/factories/image.factory.ts",
      "line": 96,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export function createMockWebSocketEvent(type: string, data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/__tests__/helpers/testHelpers.ts",
      "line": 59,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "app.use((req: any, _res, next) => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/db/monitoring/index.ts",
      "line": 15,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "query: async function(text: string, params?: unknown[]): Promise<any> {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/db/performanceWrapper.ts",
      "line": 19,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "const wrappedQuery = async function (...args: unknown[]): Promise<any> {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/db/performanceWrapper.ts",
      "line": 90,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "pool.query = async function (...args: unknown[]): Promise<any> {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/db/unified.ts",
      "line": 99,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "params?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/db/unified.ts",
      "line": 110,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "params?: any[],",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 14,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export function createPerformanceMonitoring(_options?: unknown): any {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 21,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "recordApiResponseTime(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 25,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "recordDatabaseQuery(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 29,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "recordFileOperation(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 33,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "recordMLInference(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 37,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "recordMemoryHeap(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 41,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "recordCPUUsage(metric: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/lib/monitoring/index.ts",
      "line": 47,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export const monitoring: any = performanceMonitoring;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cache.ts",
      "line": 76,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.send = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 33,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.send = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 38,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.json = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 43,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.sendFile = function (path: string, options?: any, callback?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 43,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.sendFile = function (path: string, options?: any, callback?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 98,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.json = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 144,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "function rewriteUrls(data: unknown): any {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/cdn.ts",
      "line": 165,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const rewritten: any = {};",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/databaseOptimizationMiddleware.ts",
      "line": 64,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.send = function (body?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/databaseOptimizationMiddleware.ts",
      "line": 177,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.send = function (body?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/enhancedCache.ts",
      "line": 208,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.json = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/enhancedValidation.ts",
      "line": 354,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "function sanitizeObject(obj: unknown): any {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/enhancedValidation.ts",
      "line": 363,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const sanitized: any = {};",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/errorHandler.ts",
      "line": 111,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "export const asyncHandler = (fn: (req: Request, res: Response, next: NextFunction) => Promise<any>) => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/i18n.ts",
      "line": 11,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "i18n: any;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/i18n.ts",
      "line": 43,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export function getValidationErrors(errors: unknown[], req: Request): any[] {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/performance.ts",
      "line": 243,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const logData: any = {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/performanceMonitoring.ts",
      "line": 520,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "pool.query = async function (...args: unknown[]): Promise<any> {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/performanceMonitoring.ts",
      "line": 492,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.send = function (data: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/requestLogger.ts",
      "line": 21,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "error?: any;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/requestLogger.ts",
      "line": 42,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.end = function (chunk?: any, encoding?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/requestLogger.ts",
      "line": 42,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.end = function (chunk?: any, encoding?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/requestLogger.ts",
      "line": 59,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.json = function (obj?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/middleware/validationMiddleware.ts",
      "line": 13,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const dataToValidate: { [key: string]: any } = {};",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/monitoring/errorTracker.ts",
      "line": 415,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "err: any,",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/monitoring/performanceTracker.ts",
      "line": 518,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.end = function (chunk?: any, encoding?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/monitoring/performanceTracker.ts",
      "line": 518,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "res.end = function (chunk?: any, encoding?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/monitoring/unified/index.ts",
      "line": 279,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "private metricsQueue: any[] = [];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/monitoring/unified/index.ts",
      "line": 989,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "values?: any",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/routes/imagesAsync.ts",
      "line": 85,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "processor: (file: T) => Promise<any>,",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/routes/logs.ts",
      "line": 259,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const params: any[] = [];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/routes/logs.ts",
      "line": 360,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const params: any[] = [];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/routes/userStats.optimized.ts",
      "line": 314,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const filters: any = {};",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/security/middleware/advancedRateLimiter.ts",
      "line": 211,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const errors: any[] = [];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/security/middleware/advancedRateLimiter.ts",
      "line": 271,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const headers: any = {};",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/security/middleware/security.ts",
      "line": 25,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "[key: string]: any;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/security/utils/securityHelpers.ts",
      "line": 206,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export const generateTimeLimitedToken = (data: any, expiryMinutes: number = 30): string => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/security/utils/securityHelpers.ts",
      "line": 227,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export const verifyTimeLimitedToken = (token: string): any | null => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockAuth.ts",
      "line": 23,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "[key: string]: any;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockAuth.ts",
      "line": 33,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "[key: string]: any;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 32,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "values?: any[];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 43,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "query<T = any>(queryText: QueryParams, values?: any[]): Promise<QueryResult<T>>;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 48,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "query<T = any>(queryText: QueryParams, values?: any[]): Promise<QueryResult<T>>;",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 158,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "query: (text: QueryParams, values?: any[]): Promise<QueryResult> => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 163,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "query: (text: QueryParams, values?: any[]): Promise<QueryResult> => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockDatabase.ts",
      "line": 192,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "values: any[];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockFileSystem.ts",
      "line": 633,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const dirent: any = {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/test-utils/mockFileSystem.ts",
      "line": 703,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const dirent: any = {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponse.ts",
      "line": 32,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "details?: any[];",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponse.ts",
      "line": 111,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "details?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponse.ts",
      "line": 131,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "details?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponse.ts",
      "line": 169,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "details?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponsei18n.ts",
      "line": 24,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "messageParams?: any,",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponsei18n.ts",
      "line": 83,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "messageParams?: any",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponsei18n.ts",
      "line": 107,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "errorParams?: any,",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponsei18n.ts",
      "line": 109,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "details?: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponsei18n.ts",
      "line": 131,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "errors: any[]",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/apiResponsei18n.ts",
      "line": 189,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "error?: any",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/errorHandling/index.ts",
      "line": 62,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const response: any = {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/errorHandling/index.ts",
      "line": 84,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export const isApiError = (error: any): error is ApiErrorClass => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/errorHandling/index.ts",
      "line": 88,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export const isOperationalError = (error: any): boolean => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/errorHandling/index.ts",
      "line": 92,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export const isValidationError = (error: any): boolean => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/errorHandling/index.ts",
      "line": 96,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export const isAuthenticationError = (error: any): boolean => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/utils/errorHandling/index.ts",
      "line": 100,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export const isAuthorizationError = (error: any): boolean => {",
      "isPriority": false
    },
    {
      "file": "packages/backend/src/workers/projectDuplicationWorker.ts",
      "line": 55,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "metadata: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/__mocks__/polygonWorker.ts",
      "line": 27,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "let result: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/charts/BarChartContainer.tsx",
      "line": 19,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "data: any[];",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/charts/PieChartContainer.tsx",
      "line": 5,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "data: any[];",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/LazyLoadedComponents.tsx",
      "line": 153,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "const componentCache = new Map<string, ComponentType<any>>();",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/LazyLoadedComponents.tsx",
      "line": 155,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "export async function loadDynamicComponent(componentPath: string): Promise<ComponentType<any>> {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/LazyLoadedComponents.tsx",
      "line": 172,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "export function useLazyComponent(importFn: () => Promise<any>, rootMargin: string = '100px') {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/LazyLoadedComponents.tsx",
      "line": 173,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "const [Component, setComponent] = useState<ComponentType<any> | null>(null);",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/project/DebugSegmentationThumbnail.tsx",
      "line": 6,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const segmentationCache = new Map<string, { data: any; timestamp: number }>();",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/project/ImageDebug.tsx",
      "line": 4,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "image: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/project/ImageDebugger.tsx",
      "line": 5,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "image: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/components/upload/UnifiedFileUploader.tsx",
      "line": 47,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "files: any[];",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
      "line": 16,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "fallbackHandler?: (url: string, method: HttpMethod, data?: unknown) => Promise<any>;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
      "line": 9,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "response: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
      "line": 49,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const createMockResponse = (data: any, status = 200): AxiosResponse => {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.ts",
      "line": 379,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "response: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/enhanced/apiClient.tsx",
      "line": 5,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "data?: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/lib/__mocks__/MockApiClientProvider.tsx",
      "line": 5,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "data?: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 64,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "BarChart: ({ children }: any) => <div data-testid=\"bar-chart\">{children}</div>,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 65,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "Bar: ({ dataKey, name }: any) => <div data-testid={`bar-${dataKey}`} data-name={name}></div>,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 69,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "ResponsiveContainer: ({ children }: any) => <div data-testid=\"responsive-container\">{children}</div>,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 70,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "PieChart: ({ children }: any) => <div data-testid=\"pie-chart\">{children}</div>,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 71,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "Pie: ({ data, dataKey, label }: any) => (",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 101,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export function verifyBarChartPresent(screen: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 107,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export function verifyBarCount(screen: any, expectedCount: number) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 112,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export function verifyPieChartPresent(screen: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 117,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export function verifyChartTabs(screen: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/project/export/__tests__/visualizationTestUtils.tsx",
      "line": 122,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export function verifyEmptyState(screen: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/statusbar/__tests__/statusBarTestUtils.tsx",
      "line": 27,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "screen: any,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/toolbar/__tests__/toolbarTestUtils.tsx",
      "line": 36,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "expectedParams?: any,",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/pages/segmentation/components/toolbar/__tests__/toolbarTestUtils.tsx",
      "line": 57,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "export function testAllToolbarButtons(screen: any, props = defaultToolbarV2Props) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 55,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const Icon = React.forwardRef((props: any, ref: any) =>",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 55,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const Icon = React.forwardRef((props: any, ref: any) =>",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 298,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "t: (key: string, params?: any) => {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 379,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "config?: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 380,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "request?: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 381,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "response?: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 383,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "constructor(message: string, code?: string, config?: any, request?: any, response?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 383,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "constructor(message: string, code?: string, config?: any, request?: any, response?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 383,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "constructor(message: string, code?: string, config?: any, request?: any, response?: any) {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 785,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "SelectContent: ({ children }: any) => React.createElement('div', { 'data-testid': 'select-content' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 786,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "SelectItem: ({ children, value }: any) =>",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 788,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "SelectTrigger: ({ children }: any) => React.createElement('button', { 'data-testid': 'select-trigger' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 789,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "SelectValue: ({ placeholder }: any) => React.createElement('span', { 'data-testid': 'select-value' }, placeholder),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 790,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "SelectRoot: ({ children }: any) => React.createElement('div', { 'data-testid': 'select-root' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 791,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "DialogRoot: ({ children, open }: any) =>",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 793,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "DialogTrigger: ({ children }: any) => React.createElement('button', { 'data-testid': 'dialog-trigger' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 794,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "DialogPortal: ({ children }: any) => React.createElement('div', { 'data-testid': 'dialog-portal' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 795,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "DialogOverlay: ({ children }: any) => React.createElement('div', { 'data-testid': 'dialog-overlay' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 796,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "DialogContent: ({ children }: any) => React.createElement('div', { 'data-testid': 'dialog-content' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 797,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "DialogTitle: ({ children }: any) => React.createElement('h2', { 'data-testid': 'dialog-title' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 798,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "DialogDescription: ({ children }: any) => React.createElement('p', { 'data-testid': 'dialog-description' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-setup.ts",
      "line": 799,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "DialogClose: ({ children }: any) => React.createElement('button', { 'data-testid': 'dialog-close' }, children),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-utils/apiClientMock.ts",
      "line": 128,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const mockSuccess = (method: keyof typeof mockApi, path: string, data: any) => {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/test-utils/render-with-providers.tsx",
      "line": 18,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "return React.cloneElement(child as React.ReactElement<any>, {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/translations/migrate-translations.ts",
      "line": 372,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const nestedTranslations: any = {};",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 32,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "const componentCache = new Map<string, LazyExoticComponent<ComponentType<any>>>();",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 33,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "const loadingPromises = new Map<string, Promise<any>>();",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 38,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "export function lazyWithRetry<T extends ComponentType<any>>(",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 81,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "export async function prefetchComponent(importFn: () => Promise<any>, chunkName?: string): Promise<void> {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 164,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "export function createCodeSplitComponent<T extends ComponentType<any>>(",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 213,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "export function splitComponent<T extends ComponentType<any>>(",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 234,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "splitComponent<any>('../pages/segmentation/components/canvas/CanvasV2', {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 241,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "splitComponent<any>('../pages/segmentation/components/project/export/ExcelExporter', {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 247,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "splitComponent<any>('../components/analytics/AnalyticsDashboardOptimized', { chunkName: 'analytics-dashboard' }),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/codeSplitting.ts",
      "line": 251,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "splitComponent<any>('../components/project/VirtualImageGrid', { chunkName: 'virtual-image-grid', prefetch: true }),",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/error/permissionErrorHandler.ts",
      "line": 166,
      "category": "generic-any",
      "risk": "MEDIUM",
      "code": "const axiosError = error as AxiosError<any>;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/fix-chinese-formatting.ts",
      "line": 15,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "let enTranslations: any;",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/fix-chinese-formatting.ts",
      "line": 631,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const remainingSections: any = {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/fix-chinese-formatting.ts",
      "line": 918,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "function translateSection(section: unknown): any {",
      "isPriority": false
    },
    {
      "file": "packages/frontend/src/utils/fix-chinese-formatting.ts",
      "line": 925,
      "category": "variable-type",
      "risk": "MEDIUM",
      "code": "const result: any = {};",
      "isPriority": false
    }
  ]
}